KOM_generate_pie_chart = {
	#TODO: Make this more efficient.
	#Also: What the hell are these variables lmao.
	#I'm pretty sure that I can completely rewire this code. It doesn't make sense to decouple movement strength variables from the
	#political wing as a whole.
	set_temp_variable = { KOMLeftPowerPercent = KOMLeftPower }
	set_temp_variable = { KOMRightPowerPercent = KOMRightPower }
	set_temp_variable = { KOMCenterPowerPercent = KOMCenterPower }

	set_temp_variable = { KOMIdeologyPercentsTotal = 0 }
	add_to_temp_variable = { KOMIdeologyPercentsTotal = KOMLeftPowerPercent }
	add_to_temp_variable = { KOMIdeologyPercentsTotal = KOMRightPowerPercent }
	add_to_temp_variable = { KOMIdeologyPercentsTotal = KOMCenterPowerPercent }

	divide_temp_variable = { KOMLeftPowerPercent = KOMIdeologyPercentsTotal }
	divide_temp_variable = { KOMRightPowerPercent = KOMIdeologyPercentsTotal }
	divide_temp_variable = { KOMCenterPowerPercent = KOMIdeologyPercentsTotal }

	###Left
	set_temp_variable = { KOMUltravisPercent = KOM_start_pops^1 }
	set_temp_variable = { KOMCouncilcomPercent = KOM_start_pops^2 }
	set_temp_variable = { KOMOrthomarxismPercent = KOM_start_pops^0 }

	set_temp_variable = { KOMLeftPercentsTotal = 0 }
	add_to_temp_variable = { KOMLeftPercentsTotal = KOMUltravisPercent }
	add_to_temp_variable = { KOMLeftPercentsTotal = KOMCouncilcomPercent }
	add_to_temp_variable = { KOMLeftPercentsTotal = KOMOrthomarxismPercent }

	divide_temp_variable = { KOMUltravisPercent = KOMLeftPercentsTotal }
	divide_temp_variable = { KOMCouncilcomPercent = KOMLeftPercentsTotal }
	divide_temp_variable = { KOMOrthomarxismPercent = KOMLeftPercentsTotal }

	multiply_temp_variable = { KOMUltravisPercent = KOMLeftPowerPercent }
	multiply_temp_variable = { KOMCouncilcomPercent = KOMLeftPowerPercent }
	multiply_temp_variable = { KOMOrthomarxismPercent = KOMLeftPowerPercent }

	###Right
	set_temp_variable = { KOMORPPercent = KOM_start_pops^8 }
	set_temp_variable = { KOMOVRIPercent = KOM_start_pops^9 }
	set_temp_variable = { KOMRNPPercent = KOM_start_pops^6 }
	set_temp_variable = { KOMPASPercent = KOM_start_pops^7 }

	set_temp_variable = { KOMRightPercentsTotal = 0 }
	add_to_temp_variable = { KOMRightPercentsTotal = KOMORPPercent }
	add_to_temp_variable = { KOMRightPercentsTotal = KOMOVRIPercent }
	add_to_temp_variable = { KOMRightPercentsTotal = KOMRNPPercent }
	add_to_temp_variable = { KOMRightPercentsTotal = KOMPASPercent }

	divide_temp_variable = { KOMORPPercent = KOMRightPercentsTotal }
	divide_temp_variable = { KOMOVRIPercent = KOMRightPercentsTotal }
	divide_temp_variable = { KOMRNPPercent = KOMRightPercentsTotal }
	divide_temp_variable = { KOMPASPercent = KOMRightPercentsTotal }

	multiply_temp_variable = { KOMORPPercent = KOMRightPowerPercent }
	multiply_temp_variable = { KOMOVRIPercent = KOMRightPowerPercent }
	multiply_temp_variable = { KOMRNPPercent = KOMRightPowerPercent }
	multiply_temp_variable = { KOMPASPercent = KOMRightPowerPercent }

	###Center
	set_temp_variable = { KOMDSNPPercent = KOM_start_pops^3 }
	set_temp_variable = { KOMSMRPercent = KOM_start_pops^4 }
	set_temp_variable = { KOMPSDPercent = KOM_start_pops^5 }

	set_temp_variable = { KOMCenterPercentsTotal = 0 }
	add_to_temp_variable = { KOMCenterPercentsTotal = KOMDSNPPercent }
	add_to_temp_variable = { KOMCenterPercentsTotal = KOMSMRPercent }
	add_to_temp_variable = { KOMCenterPercentsTotal = KOMPSDPercent }

	divide_temp_variable = { KOMDSNPPercent = KOMCenterPercentsTotal }
	divide_temp_variable = { KOMSMRPercent = KOMCenterPercentsTotal }
	divide_temp_variable = { KOMPSDPercent = KOMCenterPercentsTotal }

	multiply_temp_variable = { KOMDSNPPercent = KOMCenterPowerPercent }
	multiply_temp_variable = { KOMSMRPercent = KOMCenterPowerPercent }
	multiply_temp_variable = { KOMPSDPercent = KOMCenterPowerPercent }

	set_variable = { KOM_Communist_Wheel_Popularity = KOMOrthomarxismPercent }
	add_to_variable = { KOM_Communist_Wheel_Popularity = KOMCouncilcomPercent }
	set_variable = { KOM_Socialist_Wheel_Popularity = KOMUltravisPercent }
	set_variable = { KOM_SocDem_Wheel_Popularity = KOMDSNPPercent }
	set_variable = { KOM_SocLib_Wheel_Popularity = KOMSMRPercent }
	set_variable = { KOM_LibCon_Wheel_Popularity = KOMPSDPercent }
	set_variable = { KOM_NatSoc_Wheel_Popularity = KOMOVRIPercent }
	set_variable = { KOM_Fascism_Wheel_Popularity = KOMORPPercent }
	set_variable = { KOM_Despotism_Wheel_Popularity = KOMPASPercent }

	if = {
		limit = {
			NOT = {
				has_country_flag = KOM_social_conservative_party_reformed
			}
		}
		set_variable = { KOM_AuthDem_Wheel_Popularity = KOMRNPPercent }
	}

	multiply_variable = { KOM_Communist_Wheel_Popularity = 100 }
	multiply_variable = { KOM_Socialist_Wheel_Popularity = 100 }
	multiply_variable = { KOM_SocDem_Wheel_Popularity = 100 }
	multiply_variable = { KOM_SocLib_Wheel_Popularity = 100 }
	multiply_variable = { KOM_LibCon_Wheel_Popularity = 100 }
	multiply_variable = { KOM_AuthDem_Wheel_Popularity = 100 }
	multiply_variable = { KOM_Fascism_Wheel_Popularity = 100 }
	multiply_variable = { KOM_Despotism_Wheel_Popularity = 100 }
	multiply_variable = { KOM_NatSoc_Wheel_Popularity = 100 }
	multiply_variable = { KOM_Ultranat_Wheel_Popularity = 100 }

	set_variable = { KOM_Validator_Wheel_Popularity_Master = KOM_Communist_Wheel_Popularity }
	add_to_variable = { KOM_Validator_Wheel_Popularity_Master = KOM_Socialist_Wheel_Popularity }
	add_to_variable = { KOM_Validator_Wheel_Popularity_Master = KOM_SocDem_Wheel_Popularity }
	add_to_variable = { KOM_Validator_Wheel_Popularity_Master = KOM_SocLib_Wheel_Popularity }
	add_to_variable = { KOM_Validator_Wheel_Popularity_Master = KOM_LibCon_Wheel_Popularity }
	add_to_variable = { KOM_Validator_Wheel_Popularity_Master = KOM_AuthDem_Wheel_Popularity }
	add_to_variable = { KOM_Validator_Wheel_Popularity_Master = KOM_Fascism_Wheel_Popularity }
	add_to_variable = { KOM_Validator_Wheel_Popularity_Master = KOM_Despotism_Wheel_Popularity }
	add_to_variable = { KOM_Validator_Wheel_Popularity_Master = KOM_NatSoc_Wheel_Popularity }
	add_to_variable = { KOM_Validator_Wheel_Popularity_Master = KOM_Ultranat_Wheel_Popularity }

	if = {
		limit = {
			NOT = {
				check_variable = { KOM_Validator_Wheel_Popularity_Master = 100 }
			}
		}
		set_variable = { KOM_rounding_error = KOM_Validator_Wheel_Popularity_Master }
		subtract_from_variable = { KOM_rounding_error = 100 }
		if = { #fix the rounding error by changing one party big enough for the rounding not to be seen too much (cant bother to compute the max)
			limit = {
				check_variable = { KOM_Communist_Wheel_Popularity > 10 }
				}
			subtract_from_variable = { KOM_Communist_Wheel_Popularity = KOM_rounding_error }
		}
		else_if = {
			limit = {
				check_variable = { KOM_Socialist_Wheel_Popularity > 10 }
				}
			subtract_from_variable = { KOM_Socialist_Wheel_Popularity = KOM_rounding_error }
		}
		else_if = {
			limit = {
				check_variable = { KOM_SocDem_Wheel_Popularity > 10 }
				}
			subtract_from_variable = { KOM_SocDem_Wheel_Popularity = KOM_rounding_error }
		}
		else_if = {
			limit = {
				check_variable = { KOM_SocLib_Wheel_Popularity > 10 }
				}
			subtract_from_variable = { KOM_SocLib_Wheel_Popularity = KOM_rounding_error }
		}
		else_if = {
			limit = {
				check_variable = { KOM_LibCon_Wheel_Popularity > 10 }
				}
			subtract_from_variable = { KOM_LibCon_Wheel_Popularity = KOM_rounding_error }
		}
		else_if = {
			limit = {
				check_variable = { KOM_AuthDem_Wheel_Popularity > 10 }
				}
			subtract_from_variable = { KOM_AuthDem_Wheel_Popularity = KOM_rounding_error }
		}
		else_if = {
			limit = {
				check_variable = { KOM_Fascism_Wheel_Popularity > 10 }
				}
			subtract_from_variable = { KOM_Fascism_Wheel_Popularity = KOM_rounding_error }
		}
		else_if = {
			limit = {
				check_variable = { KOM_Despotism_Wheel_Popularity > 10 }
				}
			subtract_from_variable = { KOM_Despotism_Wheel_Popularity = KOM_rounding_error }
		}
		else_if = {
			limit = {
				check_variable = { KOM_NatSoc_Wheel_Popularity > 10 }
				}
			subtract_from_variable = { KOM_NatSoc_Wheel_Popularity = KOM_rounding_error }
		}
		else_if = {
			limit = {
				check_variable = { KOM_Ultranat_Wheel_Popularity > 10 }
				}
			subtract_from_variable = { KOM_Ultranat_Wheel_Popularity = KOM_rounding_error }
		}
	}

	set_popularities = {
		communist = KOM_Communist_Wheel_Popularity
		socialist = KOM_Socialist_Wheel_Popularity
		progressivism = KOM_SocDem_Wheel_Popularity
		liberalism = KOM_SocLib_Wheel_Popularity
		paternalism = KOM_AuthDem_Wheel_Popularity
		liberal_conservatism = KOM_LibCon_Wheel_Popularity
		despotism = KOM_Despotism_Wheel_Popularity
		fascism = KOM_Fascism_Wheel_Popularity
		national_socialism = KOM_NatSoc_Wheel_Popularity
		ultranationalism = KOM_Ultranat_Wheel_Popularity
	}
}

KOM_calculate_factional_powers = {
	clear_array = KOM_centre_pops
	add_to_array = { KOM_centre_pops = 0 }
	clear_array = KOM_right_pops
	add_to_array = { KOM_right_pops = 0 }
	clear_array = KOM_left_pops
	add_to_array = { KOM_left_pops = 0 }

	set_variable = { KOMLeftPower = KOM_start_pops^0 }
	set_variable = { KOM_left_pops^0 = KOM_start_pops^0 }
	add_to_variable = { KOMLeftPower = KOM_start_pops^1 }
	set_variable = { KOM_left_pops^1 = KOM_start_pops^1 }
	if = {
		limit = {
			NOT = {
				has_country_flag = KOM_Serov_Defected
			}
		}
		add_to_variable = { KOMLeftPower = KOM_start_pops^8 }
		set_variable = { KOM_left_pops^8 = KOM_start_pops^8 }
	}
	add_to_variable = { KOMLeftPower = KOM_start_pops^2 }
	set_variable = { KOM_left_pops^2 = KOM_start_pops^2 }

	set_variable = { KOMCenterPower = KOM_start_pops^3 }
	set_variable = { KOM_centre_pops^3 = KOM_start_pops^3 }
	add_to_variable = { KOMCenterPower = KOM_start_pops^4 }
	set_variable = { KOM_centre_pops^4 = KOM_start_pops^4 }
	add_to_variable = { KOMCenterPower = KOM_start_pops^5 }
	set_variable = { KOM_centre_pops^5 = KOM_start_pops^5 }

	set_variable = { KOMRightPower = KOM_start_pops^6 }
	set_variable = { KOM_right_pops^6 = KOM_start_pops^6 }
	add_to_variable = { KOMRightPower = KOM_start_pops^7 }
	set_variable = { KOM_right_pops^7 = KOM_start_pops^7 }
	if = {
		limit = {
			has_country_flag = KOM_Serov_Defected
		}
		add_to_variable = { KOMRightPower = KOM_start_pops^8 }
		set_variable = { KOM_right_pops^8 = KOM_start_pops^8 }
	}
	add_to_variable = { KOMRightPower = KOM_start_pops^9 }
	set_variable = { KOM_right_pops^9 = KOM_start_pops^9 }

	find_highest_in_array = {
		array = KOM_left_pops
		value = left_val
		index = left_idx
	}
	set_variable = { KOM_left_leading = left_idx }

	find_highest_in_array = {
		array = KOM_centre_pops
		value = centre_val
		index = centre_idx
	}
	set_variable = { KOM_centre_leading = centre_idx }

	find_highest_in_array = {
		array = KOM_right_pops
		value = right_val
		index = right_idx
	}
	set_variable = { KOM_right_leading = right_idx }
}

#Effects to use for coup trees
KOM_increase_coup_risk_low = {
	add_to_variable = { KOMCoupTicker = 0.25 }
	add_stability = -0.05
	custom_effect_tooltip = KOM_increase_coup_risk_low_tt
}

KOM_increase_coup_risk_med = {
	add_to_variable = { KOMCoupTicker = 0.5 }
	add_stability = -0.10
	custom_effect_tooltip = KOM_increase_coup_risk_med_tt
}

KOM_increase_coup_risk_high = {
	add_to_variable = { KOMCoupTicker = 1 }
	add_stability = -0.15
	custom_effect_tooltip = KOM_increase_coup_risk_high_tt
}

KOM_decrease_coup_risk_low = {
	add_to_variable = { KOMCoupTicker = -0.25 }
	add_stability = 0.05
	custom_effect_tooltip = KOM_decrease_coup_risk_low_tt
}

KOM_decrease_coup_risk_med = {
	add_to_variable = { KOMCoupTicker = -0.5 }
	add_stability = 0.10
	custom_effect_tooltip = KOM_decrease_coup_risk_med_tt
}

KOM_decrease_coup_risk_high = {
	add_to_variable = { KOMCoupTicker = -1 }
	add_stability = 0.15
	custom_effect_tooltip = KOM_decrease_coup_risk_high_tt
}

KOM_decrease_coup_risk_static_low = {
	add_to_variable = { KOMCoupRisk = 5 }
	add_stability = 0.05
	custom_effect_tooltip = KOM_decrease_coup_risk_low_static_tt
}

KOM_decrease_coup_risk_static_med = {
	add_to_variable = { KOMCoupRisk = 10 }
	add_stability = 0.10
	custom_effect_tooltip = KOM_decrease_coup_risk_med_static_tt
}

KOM_decrease_coup_risk_static_high = {
	add_to_variable = { KOMCoupRisk = 15 }
	add_stability = 0.15
	custom_effect_tooltip = KOM_decrease_coup_risk_high_static_tt
}

KOM_increase_coup_risk_static_low = {
	add_to_variable = { KOMCoupRisk = -5 }
	add_stability = -0.05
	custom_effect_tooltip = KOM_increase_coup_risk_low_static_tt
}

KOM_increase_coup_risk_static_med = {
	add_to_variable = { KOMCoupRisk = -10 }
	add_stability = -0.10
	custom_effect_tooltip = KOM_increase_coup_risk_med_static_tt
}

KOM_increase_coup_risk_static_high = {
	add_to_variable = { KOMCoupRisk = -15 }
	add_stability = -0.15
	custom_effect_tooltip = KOM_increase_coup_risk_high_static_tt
}

#Dueling Shadows

KOM_decrease_clash_shadows_peaceful = {
	custom_effect_tooltip = KOM_decrease_dueling_shadows_effect_tt
	hidden_effect = {
		if = {
			limit = {
				KOM_has_right_government = yes
			}
			if = {
				limit = {
					has_idea = KOM_clash_of_shadows_r_1
				}
				remove_ideas = KOM_clash_of_shadows_r_1
				add_ideas = KOM_clash_of_shadows_r_2
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_r_2
				}
				remove_ideas = KOM_clash_of_shadows_r_2
				add_ideas = KOM_clash_of_shadows_r_3
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_r_3
				}
				remove_ideas = KOM_clash_of_shadows_r_3
				add_ideas = KOM_clash_of_shadows_r_4
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_r_4
				}
				remove_ideas = KOM_clash_of_shadows_r_4
				add_ideas = KOM_clash_of_shadows_r_5
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_r_5
				}
				remove_ideas = KOM_clash_of_shadows_r_5
				add_ideas = KOM_clash_of_shadows_r_6
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_r_6
				}
				remove_ideas = KOM_clash_of_shadows_r_6
			}
		}
		if = {
			limit = {
				KOM_has_left_government = yes
			}
			if = {
				limit = {
					has_idea = KOM_clash_of_shadows_l_1
				}
				remove_ideas = KOM_clash_of_shadows_l_1
				add_ideas = KOM_clash_of_shadows_l_2
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_l_2
				}
				remove_ideas = KOM_clash_of_shadows_l_2
				add_ideas = KOM_clash_of_shadows_l_3
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_l_3
				}
				remove_ideas = KOM_clash_of_shadows_l_3
				add_ideas = KOM_clash_of_shadows_l_4
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_l_4
				}
				remove_ideas = KOM_clash_of_shadows_l_4
				add_ideas = KOM_clash_of_shadows_l_5
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_l_5
				}
				remove_ideas = KOM_clash_of_shadows_l_5
				add_ideas = KOM_clash_of_shadows_l_6
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_l_6
				}
				remove_ideas = KOM_clash_of_shadows_l_6
			}
		}
		if = {
			limit = {
				KOM_has_center_government = yes
			}
			if = {
				limit = {
					has_idea = KOM_clash_of_shadows_c_1
				}
				remove_ideas = KOM_clash_of_shadows_c_1
				add_ideas = KOM_clash_of_shadows_c_2
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_c_2
				}
				remove_ideas = KOM_clash_of_shadows_c_2
				add_ideas = KOM_clash_of_shadows_c_3
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_c_3
				}
				remove_ideas = KOM_clash_of_shadows_c_3
				add_ideas = KOM_clash_of_shadows_c_4
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_c_4
				}
				remove_ideas = KOM_clash_of_shadows_c_4
				add_ideas = KOM_clash_of_shadows_c_5
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_c_5
				}
				remove_ideas = KOM_clash_of_shadows_c_5
				add_ideas = KOM_clash_of_shadows_c_6
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_c_6
				}
				remove_ideas = KOM_clash_of_shadows_c_6
			}
		}
	}
}
KOM_eliminate_center_leader = {
	custom_effect_tooltip = KOM_decrease_dueling_shadows_effect_tt
	subtract_from_variable = { KOMCenterLeaders = 1 }
	subtract_from_variable = { KOMRightLeaderOpposition = 1 }
	subtract_from_variable = { KOMLeftLeaderOpposition = 1 }
	hidden_effect = {
		if = {
			limit = {
				KOM_has_right_government = yes
			}
			if = {
				limit = {
					has_idea = KOM_clash_of_shadows_r_1
				}
				remove_ideas = KOM_clash_of_shadows_r_1
				add_ideas = KOM_clash_of_shadows_r_2
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_r_2
				}
				remove_ideas = KOM_clash_of_shadows_r_2
				add_ideas = KOM_clash_of_shadows_r_3
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_r_3
				}
				remove_ideas = KOM_clash_of_shadows_r_3
				add_ideas = KOM_clash_of_shadows_r_4
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_r_4
				}
				remove_ideas = KOM_clash_of_shadows_r_4
				add_ideas = KOM_clash_of_shadows_r_5
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_r_5
				}
				remove_ideas = KOM_clash_of_shadows_r_5
				add_ideas = KOM_clash_of_shadows_r_6
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_r_6
				}
				remove_ideas = KOM_clash_of_shadows_r_6
			}
		}
		if = {
			limit = {
				KOM_has_left_government = yes
			}
			if = {
				limit = {
					has_idea = KOM_clash_of_shadows_l_1
				}
				remove_ideas = KOM_clash_of_shadows_l_1
				add_ideas = KOM_clash_of_shadows_l_2
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_l_2
				}
				remove_ideas = KOM_clash_of_shadows_l_2
				add_ideas = KOM_clash_of_shadows_l_3
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_l_3
				}
				remove_ideas = KOM_clash_of_shadows_l_3
				add_ideas = KOM_clash_of_shadows_l_4
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_l_4
				}
				remove_ideas = KOM_clash_of_shadows_l_4
				add_ideas = KOM_clash_of_shadows_l_5
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_l_5
				}
				remove_ideas = KOM_clash_of_shadows_l_5
				add_ideas = KOM_clash_of_shadows_l_6
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_l_6
				}
				remove_ideas = KOM_clash_of_shadows_l_6
			}
		}
	}
}

KOM_eliminate_right_leader = {
	custom_effect_tooltip = KOM_decrease_dueling_shadows_effect_tt
	subtract_from_variable = { KOMRightLeaders = 1 }
	subtract_from_variable = { KOMCenterLeaderOpposition = 1 }
	subtract_from_variable = { KOMLeftLeaderOpposition = 1 }
	hidden_effect = {
		if = {
			limit = {
				KOM_has_center_government = yes
			}
			if = {
				limit = {
					has_idea = KOM_clash_of_shadows_c_1
				}
				remove_ideas = KOM_clash_of_shadows_c_1
				add_ideas = KOM_clash_of_shadows_c_2
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_c_2
				}
				remove_ideas = KOM_clash_of_shadows_c_2
				add_ideas = KOM_clash_of_shadows_c_3
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_c_3
				}
				remove_ideas = KOM_clash_of_shadows_c_3
				add_ideas = KOM_clash_of_shadows_c_4
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_c_4
				}
				remove_ideas = KOM_clash_of_shadows_c_4
				add_ideas = KOM_clash_of_shadows_c_5
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_c_5
				}
				remove_ideas = KOM_clash_of_shadows_c_5
				add_ideas = KOM_clash_of_shadows_c_6
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_c_6
				}
				remove_ideas = KOM_clash_of_shadows_c_6
			}
		}
		if = {
			limit = {
				KOM_has_left_government = yes
			}
			if = {
				limit = {
					has_idea = KOM_clash_of_shadows_l_1
				}
				remove_ideas = KOM_clash_of_shadows_l_1
				add_ideas = KOM_clash_of_shadows_l_2
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_l_2
				}
				remove_ideas = KOM_clash_of_shadows_l_2
				add_ideas = KOM_clash_of_shadows_l_3
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_l_3
				}
				remove_ideas = KOM_clash_of_shadows_l_3
				add_ideas = KOM_clash_of_shadows_l_4
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_l_4
				}
				remove_ideas = KOM_clash_of_shadows_l_4
				add_ideas = KOM_clash_of_shadows_l_5
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_l_5
				}
				remove_ideas = KOM_clash_of_shadows_l_5
				add_ideas = KOM_clash_of_shadows_l_6
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_l_6
				}
				remove_ideas = KOM_clash_of_shadows_l_6
			}
		}
	}
}

KOM_eliminate_left_leader = {
	custom_effect_tooltip = KOM_decrease_dueling_shadows_effect_tt
	subtract_from_variable = { KOMLeftLeaders = 1 }
	subtract_from_variable = { KOMCenterLeaderOpposition = 1 }
	subtract_from_variable = { KOMRightLeaderOpposition = 1 }
	hidden_effect = {
		if = {
			limit = {
				KOM_has_center_government = yes
			}
			if = {
				limit = {
					has_idea = KOM_clash_of_shadows_c_1
				}
				remove_ideas = KOM_clash_of_shadows_c_1
				add_ideas = KOM_clash_of_shadows_c_2
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_c_2
				}
				remove_ideas = KOM_clash_of_shadows_c_2
				add_ideas = KOM_clash_of_shadows_c_3
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_c_3
				}
				remove_ideas = KOM_clash_of_shadows_c_3
				add_ideas = KOM_clash_of_shadows_c_4
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_c_4
				}
				remove_ideas = KOM_clash_of_shadows_c_4
				add_ideas = KOM_clash_of_shadows_c_5
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_c_5
				}
				remove_ideas = KOM_clash_of_shadows_c_5
				add_ideas = KOM_clash_of_shadows_c_6
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_c_6
				}
				remove_ideas = KOM_clash_of_shadows_c_6
			}
		}
		if = {
			limit = {
				KOM_has_right_government = yes
			}
			if = {
				limit = {
					has_idea = KOM_clash_of_shadows_r_1
				}
				remove_ideas = KOM_clash_of_shadows_r_1
				add_ideas = KOM_clash_of_shadows_r_2
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_r_2
				}
				remove_ideas = KOM_clash_of_shadows_r_2
				add_ideas = KOM_clash_of_shadows_r_3
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_r_3
				}
				remove_ideas = KOM_clash_of_shadows_r_3
				add_ideas = KOM_clash_of_shadows_r_4
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_r_4
				}
				remove_ideas = KOM_clash_of_shadows_r_4
				add_ideas = KOM_clash_of_shadows_r_5
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_r_5
				}
				remove_ideas = KOM_clash_of_shadows_r_5
				add_ideas = KOM_clash_of_shadows_r_6
			}
			else_if = {
				limit = {
					has_idea = KOM_clash_of_shadows_r_6
				}
				remove_ideas = KOM_clash_of_shadows_r_6
			}
		}
	}
}

KOM_remove_dueling_shadows = {
	custom_effect_tooltip = KOM_remove_dueling_shadows_effect_tt
	hidden_effect = {
		remove_ideas = KOM_clash_of_shadows_r_1
		remove_ideas = KOM_clash_of_shadows_r_2
		remove_ideas = KOM_clash_of_shadows_r_3
		remove_ideas = KOM_clash_of_shadows_r_4
		remove_ideas = KOM_clash_of_shadows_r_5
		remove_ideas = KOM_clash_of_shadows_r_6
		remove_ideas = KOM_clash_of_shadows_l_1
		remove_ideas = KOM_clash_of_shadows_l_2
		remove_ideas = KOM_clash_of_shadows_l_3
		remove_ideas = KOM_clash_of_shadows_l_4
		remove_ideas = KOM_clash_of_shadows_l_5
		remove_ideas = KOM_clash_of_shadows_l_6
		remove_ideas = KOM_clash_of_shadows_c_1
		remove_ideas = KOM_clash_of_shadows_c_2
		remove_ideas = KOM_clash_of_shadows_c_3
		remove_ideas = KOM_clash_of_shadows_c_4
		remove_ideas = KOM_clash_of_shadows_c_5
		remove_ideas = KOM_clash_of_shadows_c_6
	}
}

KOM_assign_dueling_shadows_effects = {
	if = {
		limit = {
			KOM_has_center_government = yes
		}
		hidden_effect = {
			remove_ideas = KOM_clash_of_shadows_r_1
			remove_ideas = KOM_clash_of_shadows_r_2
			remove_ideas = KOM_clash_of_shadows_r_3
			remove_ideas = KOM_clash_of_shadows_r_4
			remove_ideas = KOM_clash_of_shadows_r_5
			remove_ideas = KOM_clash_of_shadows_r_6
			remove_ideas = KOM_clash_of_shadows_l_1
			remove_ideas = KOM_clash_of_shadows_l_2
			remove_ideas = KOM_clash_of_shadows_l_3
			remove_ideas = KOM_clash_of_shadows_l_4
			remove_ideas = KOM_clash_of_shadows_l_5
			remove_ideas = KOM_clash_of_shadows_l_6
		}
		if = {
			limit = {
				check_variable = { KOMCenterLeaderOpposition = 6 }
			}
			add_ideas = KOM_clash_of_shadows_c_1
		}
		else_if = {
			limit = {
				check_variable = { KOMCenterLeaderOpposition = 5 }
			}
			add_ideas = KOM_clash_of_shadows_c_2
		}
		else_if = {
			limit = {
				check_variable = { KOMCenterLeaderOpposition = 4 }
			}
			add_ideas = KOM_clash_of_shadows_c_3
		}
		else_if = {
			limit = {
				check_variable = { KOMCenterLeaderOpposition = 3 }
			}
			add_ideas = KOM_clash_of_shadows_c_4
		}
		else_if = {
			limit = {
				check_variable = { KOMCenterLeaderOpposition = 2 }
			}
			add_ideas = KOM_clash_of_shadows_c_5
		}
		else_if = {
			limit = {
				check_variable = { KOMCenterLeaderOpposition = 1 }
			}
			add_ideas = KOM_clash_of_shadows_c_6
		}
	}
	else_if = {
		limit = {
			KOM_has_right_government = yes
		}
		hidden_effect = {
			remove_ideas = KOM_clash_of_shadows_l_1
			remove_ideas = KOM_clash_of_shadows_l_2
			remove_ideas = KOM_clash_of_shadows_l_3
			remove_ideas = KOM_clash_of_shadows_l_4
			remove_ideas = KOM_clash_of_shadows_l_5
			remove_ideas = KOM_clash_of_shadows_l_6
			remove_ideas = KOM_clash_of_shadows_c_1
			remove_ideas = KOM_clash_of_shadows_c_2
			remove_ideas = KOM_clash_of_shadows_c_3
			remove_ideas = KOM_clash_of_shadows_c_4
			remove_ideas = KOM_clash_of_shadows_c_5
			remove_ideas = KOM_clash_of_shadows_c_6
		}
		if = {
			limit = {
				check_variable = { KOMRightLeaderOpposition = 6 }
			}
			add_ideas = KOM_clash_of_shadows_r_1
		}
		else_if = {
			limit = {
				check_variable = { KOMRightLeaderOpposition = 5 }
			}
			add_ideas = KOM_clash_of_shadows_r_2
		}
		else_if = {
			limit = {
				check_variable = { KOMRightLeaderOpposition = 4 }
			}
			add_ideas = KOM_clash_of_shadows_r_3
		}
		else_if = {
			limit = {
				check_variable = { KOMRightLeaderOpposition = 3 }
			}
			add_ideas = KOM_clash_of_shadows_r_4
		}
		else_if = {
			limit = {
				check_variable = { KOMRightLeaderOpposition = 2 }
			}
			add_ideas = KOM_clash_of_shadows_r_5
		}
		else_if = {
			limit = {
				check_variable = { KOMRightLeaderOpposition = 1 }
			}
			add_ideas = KOM_clash_of_shadows_r_6
		}
	}
	else_if = {
		limit = {
			KOM_has_left_government = yes
		}
		hidden_effect = {
			remove_ideas = KOM_clash_of_shadows_r_1
			remove_ideas = KOM_clash_of_shadows_r_2
			remove_ideas = KOM_clash_of_shadows_r_3
			remove_ideas = KOM_clash_of_shadows_r_4
			remove_ideas = KOM_clash_of_shadows_r_5
			remove_ideas = KOM_clash_of_shadows_r_6
			remove_ideas = KOM_clash_of_shadows_c_1
			remove_ideas = KOM_clash_of_shadows_c_2
			remove_ideas = KOM_clash_of_shadows_c_3
			remove_ideas = KOM_clash_of_shadows_c_4
			remove_ideas = KOM_clash_of_shadows_c_5
			remove_ideas = KOM_clash_of_shadows_c_6
		}
		if = {
			limit = {
				check_variable = { KOMLeftLeaderOpposition = 6 }
			}
			add_ideas = KOM_clash_of_shadows_l_1
		}
		else_if = {
			limit = {
				check_variable = { KOMLeftLeaderOpposition = 5 }
			}
			add_ideas = KOM_clash_of_shadows_l_2
		}
		else_if = {
			limit = {
				check_variable = { KOMLeftLeaderOpposition = 4 }
			}
			add_ideas = KOM_clash_of_shadows_l_3
		}
		else_if = {
			limit = {
				check_variable = { KOMLeftLeaderOpposition = 3 }
			}
			add_ideas = KOM_clash_of_shadows_l_4
		}
		else_if = {
			limit = {
				check_variable = { KOMLeftLeaderOpposition = 2 }
			}
			add_ideas = KOM_clash_of_shadows_l_5
		}
		else_if = {
			limit = {
				check_variable = { KOMLeftLeaderOpposition = 1 }
			}
			add_ideas = KOM_clash_of_shadows_l_6
		}
	}
}

#Elect a President
KOM_elect_the_president = {
	if = {
		limit = {
			OR = {
				AND = {
					check_variable = { KOMCenterPower > KOMRightPower }
					check_variable = { KOMCenterPower > KOMLeftPower }
					has_game_rule = { rule = KOM_FIRST_ELECTION option = DEFAULT }
				}
				has_game_rule = { rule = KOM_FIRST_ELECTION option = KOM_FIRST_ELECTION_DEM_MAJORITY }
				has_game_rule = { rule = KOM_FIRST_ELECTION option = KOM_FIRST_ELECTION_DEM_PLURALITY }
			}
		}
		if = {
			limit = {
				has_country_flag = MOROZOV_NOMINEE
			}
			country_event = {
				id = KOM.17803
				days = 3
			}
		}
		else_if = {
			limit = {
				has_country_flag = STALINA_NOMINEE
			}
			country_event = {
				id = KOM.17802
				days = 3
			}
		}
		else_if = {
			limit = {
				has_country_flag = VOZNESENSKY_NOMINEE
			}
			country_event = {
				id = KOM.17801
				days = 3
			}
		}
		set_country_flag = KOM_PRESIDENT_DEM
	}
	else_if = {
		limit = {
			OR = {
				AND = {
					check_variable = { KOMLeftPower > KOMRightPower }
					check_variable = { KOMLeftPower > KOMCenterPower }
					has_game_rule = { rule = KOM_FIRST_ELECTION option = DEFAULT }
				}
				has_game_rule = { rule = KOM_FIRST_ELECTION option = KOM_FIRST_ELECTION_LEFT_MAJORITY }
				has_game_rule = { rule = KOM_FIRST_ELECTION option = KOM_FIRST_ELECTION_LEFT_PLURALITY }
			}
		}
		if = {
			limit = { check_variable = { KOM_leader_status^1 = 0 } }

			country_event = {
				id = KOM.17804
				days = 3
			}
		}
		else = {
			country_event = {
				id = KOM.17805
				days = 3
			}
		}
		set_country_flag = KOM_PRESIDENT_COMMIE
	}
	else_if = {
		limit = {
			OR = {
				AND = {
					check_variable = { KOMRightPower > KOMCenterPower }
					check_variable = { KOMRightPower > KOMLeftPower }
					has_game_rule = { rule = KOM_FIRST_ELECTION option = DEFAULT }
				}
				has_game_rule = { rule = KOM_FIRST_ELECTION option = KOM_FIRST_ELECTION_RIGHT_MAJORITY }
				has_game_rule = { rule = KOM_FIRST_ELECTION option = KOM_FIRST_ELECTION_RIGHT_PLURALITY }
			}
		}
		country_event = {
			id = KOM.17806
			days = 3
		}
		set_country_flag = KOM_PRESIDENT_FASH
	}
	else = {
		random_list = {
			33 = {
				if = {
					limit = {
						has_country_flag = MOROZOV_NOMINEE
					}
					country_event = {
						id = KOM.17803
						days = 3
					}
					set_country_flag = KOM_PRESIDENT_DEM
				}
				if = {
					limit = {
						has_country_flag = STALINA_NOMINEE
					}
					country_event = {
						id = KOM.17802
						days = 3
					}
					set_country_flag = KOM_PRESIDENT_DEM
				}
				if = {
					limit = {
						has_country_flag = VOZNESENSKY_NOMINEE
					}
					country_event = {
						id = KOM.17801
						days = 3
					}
					set_country_flag = KOM_PRESIDENT_DEM
				}
			}
			33 = {
				country_event = {
					id = KOM.17805
					days = 3
				}
				set_country_flag = KOM_PRESIDENT_COMMIE
			}
			33 = {
				country_event = {
					id = KOM.17806
					days = 3
				}
				set_country_flag = KOM_PRESIDENT_FASH
			}
		}
	}
}

# Zhdanov's Favor Mechanic
KOM_adjust_zhdanov_favors = {
	add_to_variable = { KOMZhdanovFavors = KOM_favors_temp }
	clamp_variable = {
		var = KOMZhdanovFavors
		min = 0
	}
	if = {
		limit = {
			check_variable = { KOM_favors_temp < 0 }
		}
		multiply_temp_variable = { KOM_favors_temp = -1 }
		custom_effect_tooltip = KOM_zhd_decrease_effect_tt
	}
	else = {
		custom_effect_tooltip = KOM_zhd_increase_effect_tt
	}
}

#Assign ideological laws and stuff
#This is ugly code sweet fuck
KOM_assign_ideology_laws = {
	hidden_effect = {
		if = {
			limit = {
				OR = {
					has_government = progressivism
					has_government = liberalism
					has_government = conservatism
					has_government = liberal_conservatism
					AND = {
						has_government = despotism
						has_country_leader = {
							character = KOM_Svetlana_Stalina
							ruling_only = yes
						}
					}
				}
			}
			set_variable = { income_tax_rate = 0.30 }
			set_variable = { business_tax_rate = 0.32 }
			set_variable = { sales_tax_rate = 0.035 }
			add_ideas = {
				#political#
				tno_political_parties_multiparty_system
				tno_religious_rights_secularism
				tno_trade_unions_all_allowed
				tno_immigration_quota_immigration
				tno_slavery_penal_labor
				tno_public_meetings_allowed
				tno_press_rights_free_press
				tno_vote_franchise_universal
				#military#
				tno_conscription_broadened_conscription
				tno_military_supervision_rules_of_engagement
				tno_training_basic_training
				tno_draft_exemptions_none
				#economic#
				tno_trade_laws_export_focus
				tno_income_taxation_tax_havens
				tno_minimum_wage_low_minimum_wage
				tno_max_workhours_12_hour_work_day
				tno_pensions_low_pensions
				tno_unemployment_low_subsidies
				#social#
				tno_health_care_low_income_protections
				tno_education_public_education
				tno_penal_system_incarceration
				tno_gender_rights_women_in_the_workplace
				tno_security_regulated_police
				tno_regulations_token_regulations
				#misc#
				tno_refugees_skilled
				tno_women_combat_roles
				tno_racial_integration_integrated_military
				tno_child_labor_illegal
				tno_safety_minimal_regulations
				tno_pollution_few_regulations
				tno_lgbt_rights_lgbt_outlawed
				tno_minorities_equal_rights
			}
			# ECONOMIC LAWS
			set_variable = { tno_trade_laws_effectiveness = 60 }
			set_variable = { tno_income_taxation_effectiveness = 45 }
			set_variable = { tno_minimum_wage_effectiveness = 35 }
			set_variable = { tno_max_workhours_effectiveness = 40 }
			set_variable = { tno_pensions_effectiveness = 90 }
			set_variable = { tno_unemployment_effectiveness = 90 }

			# SOCIAL LAWS
			set_variable = { tno_health_care_effectiveness = 35 }
			set_variable = { tno_education_effectiveness = 50 }
			set_variable = { tno_penal_system_effectiveness = 40 }
			set_variable = { tno_gender_rights_effectiveness = 60 }
			set_variable = { tno_security_effectiveness = 30 }
			set_variable = { tno_regulations_effectiveness = 45 }

			# POLITICAL LAWS
			set_variable = { tno_political_parties_effectiveness = 80 }
			set_variable = { tno_religious_rights_effectiveness = 60 }
			set_variable = { tno_trade_unions_effectiveness = 80 }
			set_variable = { tno_immigration_effectiveness = 35 }
			set_variable = { tno_slavery_effectiveness = 85 }
			set_variable = { tno_public_meetings_effectiveness = 90 }
			set_variable = { tno_press_rights_effectiveness = 85 }
			set_variable = { tno_vote_franchise_effectiveness = 80 }

			# MILITARY LAWS
			set_variable = { tno_conscription_effectiveness = 75 }
			set_variable = { tno_military_supervision_effectiveness = 50 }
			set_variable = { tno_training_effectiveness = 60 }
			set_variable = { tno_draft_exemptions_effectiveness = 55 }
		}
		else_if = {
			limit = {
				OR = {
					has_government = socialist
					has_government = communist
				}
			}
			set_variable = { income_tax_rate = 0.15 }
			set_variable = { business_tax_rate = 0.25 }
			set_variable = { sales_tax_rate = 0.15 }
			add_ideas = {
				#economic#
				tno_trade_laws_limited_exports
				tno_income_taxation_high_income_weighted
				tno_minimum_wage_acceptable_minimum
				tno_max_workhours_12_hour_work_day
				tno_pensions_low_pensions
				tno_unemployment_low_subsidies
				#social#
				tno_health_care_universal_health_care
				tno_education_public_education
				tno_penal_system_harsh_penal_code
				tno_gender_rights_gender_equality
				tno_security_regulated_police
				tno_regulations_token_regulations
				#political#
				tno_political_parties_one_party_state
				tno_religious_rights_state_atheism
				tno_trade_unions_state_controlled
				tno_immigration_quota_immigration
				tno_slavery_penal_labor
				tno_public_meetings_regulated
				tno_press_rights_censored_press
				tno_vote_franchise_registered_voting
				#military#
				tno_conscription_broadened_conscription
				tno_military_supervision_rules_of_engagement
				tno_training_basic_training
				tno_draft_exemptions_none
				#misc#
				tno_child_labor_illegal
				tno_safety_limited_regulations
				tno_pollution_few_regulations
				tno_lgbt_rights_lgbt_outlawed
				tno_minorities_equal_rights
				tno_refugees_skilled
				tno_women_combat_roles
				tno_racial_integration_integrated_military
			}
			# ECONOMIC LAWS
			set_variable = { tno_trade_laws_effectiveness = 65 }
			set_variable = { tno_income_taxation_effectiveness = 40 }
			set_variable = { tno_minimum_wage_effectiveness = 35 }
			set_variable = { tno_max_workhours_effectiveness = 40 }
			set_variable = { tno_pensions_effectiveness = 80 }
			set_variable = { tno_unemployment_effectiveness = 80 }

			# SOCIAL LAWS
			set_variable = { tno_health_care_effectiveness = 25 }
			set_variable = { tno_education_effectiveness = 50 }
			set_variable = { tno_penal_system_effectiveness = 40 }
			set_variable = { tno_gender_rights_effectiveness = 45 }
			set_variable = { tno_security_effectiveness = 45 }
			set_variable = { tno_regulations_effectiveness = 40 }

			# POLITICAL LAWS
			set_variable = { tno_political_parties_effectiveness = 55 }
			set_variable = { tno_religious_rights_effectiveness = 35 }
			set_variable = { tno_trade_unions_effectiveness = 60 }
			set_variable = { tno_immigration_effectiveness = 35 }
			set_variable = { tno_slavery_effectiveness = 90 }
			set_variable = { tno_public_meetings_effectiveness = 75 }
			set_variable = { tno_press_rights_effectiveness = 55 }
			set_variable = { tno_vote_franchise_effectiveness = 65 }

			# MILITARY LAWS
			set_variable = { tno_conscription_effectiveness = 75 }
			set_variable = { tno_military_supervision_effectiveness = 50 }
			set_variable = { tno_training_effectiveness = 60 }
			set_variable = { tno_draft_exemptions_effectiveness = 55 }
		}
		else_if = {
			limit = {
				OR = {
					has_country_leader = {
						character = KOM_Passionariyy_Organization
						ruling_only = yes
					}
					has_country_leader = {
						character = KOM_Igor_Shafarevich
						ruling_only = yes
					}
					has_country_leader = {
						character = KOM_Lev_Gumilyov
						ruling_only = yes
					}
					has_country_leader = {
						character = KOM_Ivan_Serov
						ruling_only = yes
					}
					has_country_leader = {
						character = KOM_Sergey_Taboritsky
						ruling_only = yes
					}
				}
			}
			set_variable = { income_tax_rate = 0.30 }
			set_variable = { business_tax_rate = 0.32 }
			set_variable = { sales_tax_rate = 0.035 }
			add_ideas = {
				#economic#
				tno_trade_laws_limited_exports
				tno_income_taxation_high_income_weighted
				tno_minimum_wage_acceptable_minimum
				tno_max_workhours_12_hour_work_day
				tno_pensions_low_pensions
				tno_unemployment_low_subsidies
				#social#
				tno_health_care_low_income_protections
				tno_education_public_education
				tno_penal_system_harsh_penal_code
				tno_gender_rights_traditional_roles
				tno_security_regulated_police
				tno_regulations_token_regulations
				#political#
				tno_political_parties_one_party_state
				tno_religious_rights_state_religion
				tno_trade_unions_illegal
				tno_immigration_quota_immigration
				tno_slavery_penal_labor
				tno_public_meetings_regulated
				tno_press_rights_censored_press
				tno_vote_franchise_elite_voting
				#military#
				tno_conscription_broadened_conscription
				tno_military_supervision_rules_of_engagement
				tno_training_basic_training
				tno_draft_exemptions_none
				#misc#
				tno_child_labor_illegal
				tno_safety_limited_regulations
				tno_pollution_few_regulations
				tno_lgbt_rights_lgbt_outlawed
				tno_minorities_institutional_discrimination
				tno_refugees_skilled
				tno_women_banned
				tno_racial_integration_integrated_military
			}
			# ECONOMIC LAWS
			set_variable = { tno_trade_laws_effectiveness = 65 }
			set_variable = { tno_income_taxation_effectiveness = 40 }
			set_variable = { tno_minimum_wage_effectiveness = 35 }
			set_variable = { tno_max_workhours_effectiveness = 35 }
			set_variable = { tno_pensions_effectiveness = 80 }
			set_variable = { tno_unemployment_effectiveness = 80 }

			# SOCIAL LAWS
			set_variable = { tno_health_care_effectiveness = 25 }
			set_variable = { tno_education_effectiveness = 50 }
			set_variable = { tno_penal_system_effectiveness = 40 }
			set_variable = { tno_gender_rights_effectiveness = 65 }
			set_variable = { tno_security_effectiveness = 45 }
			set_variable = { tno_regulations_effectiveness = 40 }

			# POLITICAL LAWS
			set_variable = { tno_political_parties_effectiveness = 45 }
			set_variable = { tno_religious_rights_effectiveness = 35 }
			set_variable = { tno_trade_unions_effectiveness = 60 }
			set_variable = { tno_immigration_effectiveness = 35 }
			set_variable = { tno_slavery_effectiveness = 90 }
			set_variable = { tno_public_meetings_effectiveness = 75 }
			set_variable = { tno_press_rights_effectiveness = 55 }
			set_variable = { tno_vote_franchise_effectiveness = 65 }

			# MILITARY LAWS
			set_variable = { tno_conscription_effectiveness = 75 }
			set_variable = { tno_military_supervision_effectiveness = 50 }
			set_variable = { tno_training_effectiveness = 60 }
			set_variable = { tno_draft_exemptions_effectiveness = 55 }
		}
	}
}

KOM_do_ultravisionary_doubling = {
	set_variable = { KOMKardashevPointsDouble = KOMKardashevPoints }
	set_variable = { KOMChelomeiPointsDouble = KOMChelomeiPoints }
	multiply_variable = { KOMKardashevPointsDouble = 2 }
	multiply_variable = { KOMChelomeiPointsDouble = 2 }

	if = {
		limit = {
			check_variable = { KOMKardashevPoints < 100 }
			has_game_rule = {
				rule = KOM_KURCHATOV_SUCCESSOR_PATH
				option = KOM_KURCHATOV_SUCCESSOR_PATH_KARDA
			}
		}
		set_variable = { KOMKardashevPoints = 100 }
	}
	if = {
		limit = {
			check_variable = { KOMChelomeiPoints < 100 }
			has_game_rule = {
				rule = KOM_KURCHATOV_SUCCESSOR_PATH
				option = KOM_KURCHATOV_SUCCESSOR_PATH_CHELO
			}
		}
		set_variable = { KOMChelomeiPoints = 100 }
	}

	set_variable = { KOMKurchatovPointsBalance = KOMKardashevPoints }
	add_to_variable = { KOMKurchatovPointsBalance = KOMChelomeiPoints }
	set_temp_variable = { KOMKardaThing = KOMKardashevPoints }
	set_temp_variable = { KOMCheloThing = KOMChelomeiPoints }
	divide_temp_variable = { KOMKardaThing = KOMKurchatovPointsBalance }
	divide_temp_variable = { KOMCheloThing = KOMKurchatovPointsBalance }
	multiply_temp_variable = { KOMKardaThing = 100 }
	multiply_temp_variable = { KOMCheloThing = 100 }
	round_temp_variable = KOMKardaThing
	round_temp_variable = KOMCheloThing
	set_variable = { KOMKardaBalance = KOMKardaThing }
}

#Minister Code
KOM_assign_socdem_ministers = {
	remove_all_ministers = yes
	add_ideas = KOM_Vyacheslav_Malyshev_for
	add_ideas = KOM_Yegor_Ligachev_sec
	add_ideas = KOM_Leonid_Kantorovich_eco
	add_ideas = KOM_Mikhail_Rodionov_hog
}

#KOM_assign_libcon_ministers = {
#	add_ideas = KOM_Yelena_Bonner_hog
#	add_ideas = KOM_Vadim_Medvedev_eco
#	add_ideas = KOM_Viktor_Nekipelov_sec
#	add_ideas = KOM_Georgy_Shakhnazarov_for
#}

KOM_assign_soclib_ministers = {
	remove_all_ministers = yes
	add_ideas = KOM_Yevsei_Liberman_hog
	add_ideas = KOM_Dzhermen_Gvishiani_eco
	add_ideas = KOM_Petro_Grigorenko_sec
	add_ideas = KOM_Gennady_Voronov_for
}

KOM_assign_authdem_ministers = {
	remove_all_ministers = yes
	add_ideas = KOM_Yelena_Bonner_hog
	add_ideas = KOM_Leonid_Kantorovich_eco
	add_ideas = KOM_Petro_Grigorenko_sec
	add_ideas = KOM_Georgy_Shakhnazarov_for
}

KOM_assign_bukharina_ministers = {
	remove_all_ministers = yes
	add_ideas = KOM_Roy_Medvedev_hog
	add_ideas = KOM_Varlam_Shalamov_sec
	add_ideas = KOM_Alexander_Slepkov_for
	add_ideas = KOM_Olimpiada_Kozlova_eco
}

KOM_assign_zhdanov_ministers = {
	remove_all_ministers = yes
	add_ideas = KOM_Igor_Kurchatov_hog
	add_ideas = KOM_Dmitry_Shepilov_eco
	add_ideas = KOM_Vladimir_Chelomei_sec
	add_ideas = KOM_Yekaterina_Furtseva_for
}

KOM_assign_suslov_ministers = {
	remove_all_ministers = yes
	add_ideas = KOM_Boris_Ponomaryov_hog
	add_ideas = KOM_Arvids_Pelshe_eco
	add_ideas = KOM_Yuri_Andropov_sec
	add_ideas = KOM_Alexander_Panyushkin_for
}

KOM_assign_ponomaryov_ministers = {
	remove_all_ministers = yes
	add_ideas = KOM_Mikhail_Suslov_hog
	add_ideas = KOM_Arvids_Pelshe_eco
	add_ideas = KOM_Yuri_Andropov_sec
	add_ideas = KOM_Alexander_Panyushkin_for
}

KOM_assign_shafarevich_ministers = {
	remove_all_ministers = yes
	add_ideas = KOM_Apollon_Kuzmin_hog
	add_ideas = KOM_Ivan_Shevtsov_eco
	add_ideas = KOM_Valentin_Rasputin_for
	add_ideas = KOM_Vladimir_Soloukhin_sec
}

KOM_assign_gumilyov_ministers = {
	remove_all_ministers = yes
	add_ideas = KOM_Dmitry_Balashov_hog
	add_ideas = KOM_Vadim_Kozhinov_eco
	add_ideas = KOM_Alexander_Prokhanov_sec
	add_ideas = KOM_Sergey_Semanov_for
}

KOM_assign_serov_ministers = {
	remove_all_ministers = yes
	add_ideas = KOM_Vsevolod_Kochetov_hog
	add_ideas = KOM_Aleksandr_Korotkov_sec
	add_ideas = KOM_Alexander_Baygushev_for
	add_ideas = KOM_Mikhail_Ryumin_eco
}

KOM_assign_taboritisky_ministers = {
	remove_all_ministers = yes
	add_ideas = KOM_Pyotr_Shabelsky_Bork_hog
	add_ideas = KOM_Nikolay_Talberg_eco
	add_ideas = KOM_Viktor_Larionov_sec
	add_ideas = KOM_Andrey_Dikiy_for
}

KOM_assign_taboritisky_reveal_ministers = {
	remove_all_ministers = yes
	add_ideas = KOM_Pyotr_Shabelsky_Bork_hog
	add_ideas = KOM_Nikolay_Talberg_eco
	add_ideas = KOM_Viktor_Larionov_burgsys_sec
	add_ideas = KOM_Andrey_Dikiy_burgsys_for
}

KOM_assign_rightist_ministers = {
	remove_all_ministers = yes
	add_ideas = KOM_Igor_Shafarevich_hog
	add_ideas = KOM_Mikhail_Ryumin_eco
	add_ideas = KOM_Alexander_Prokhanov_sec
	add_ideas = KOM_Andrey_Dikiy_for
}

KOM_assign_leftist_ministers = {
	remove_all_ministers = yes
	add_ideas = KOM_Mikhail_Suslov_hog
	add_ideas = KOM_Dmitry_Shepilov_eco
	add_ideas = KOM_Yuri_Andropov_sec
	add_ideas = KOM_Alexander_Slepkov_for
}

KOM_assign_leftist_ministers_andropov = {
	remove_all_ministers = yes
	add_ideas = KOM_Mikhail_Suslov_hog
	add_ideas = KOM_Dmitry_Shepilov_eco
	add_ideas = KOM_Varlam_Shalamov_sec
	add_ideas = KOM_Alexander_Slepkov_for
}

KOM_center_power_change = {
	add_to_variable = { KOMCenterPower = KOMCenterPowerTemp }
	if = {
		limit = {
			check_variable = { KOMCenterPowerTemp < 0 }
		}
		multiply_temp_variable = { KOMCenterPowerTemp = -1 }
		custom_effect_tooltip = KOM_center_power_decrease_tt
	}
	else = {
		custom_effect_tooltip = KOM_center_power_increase_tt
	}
}

KOM_center_power_increase_random = {
	set_temp_variable = { KOMAdditionVariable = 1 }
	randomize_temp_variable = {
		var = KOMAdditionVariable
		distribution = uniform
		min = 1
		max = 5
	}
	round_temp_variable = KOMAdditionVariable
	add_to_variable = { KOMCenterPower = KOMAdditionVariable }
	custom_effect_tooltip = KOM_center_power_increase_random_tt
}

KOM_center_power_decrease_random = {
	set_temp_variable = { KOMAdditionVariable = 1 }
	randomize_temp_variable = {
		var = KOMAdditionVariable
		distribution = uniform
		min = 1
		max = 5
	}
	round_temp_variable = KOMAdditionVariable
	subtract_from_variable = { KOMCenterPower = KOMAdditionVariable }
	custom_effect_tooltip = KOM_center_power_decrease_random_tt
}

KOM_left_power_change = {
	add_to_variable = { KOMLeftPower = KOMLeftPowerTemp }
	if = {
		limit = {
			check_variable = { KOMLeftPowerTemp < 0 }
		}
		multiply_temp_variable = { KOMLeftPowerTemp = -1 }
		custom_effect_tooltip = KOM_left_power_decrease_tt
	}
	else = {
		custom_effect_tooltip = KOM_left_power_increase_tt
	}
}

KOM_left_power_increase_random = {
	set_temp_variable = { KOMAdditionVariable = 1 }
	randomize_temp_variable = {
		var = KOMAdditionVariable
		distribution = uniform
		min = 1
		max = 5
	}
	round_temp_variable = KOMAdditionVariable
	add_to_variable = { KOMLeftPower = KOMAdditionVariable }
	custom_effect_tooltip = KOM_left_power_increase_random_tt
}

KOM_left_power_decrease_random = {
	set_temp_variable = { KOMAdditionVariable = 1 }
	randomize_temp_variable = {
		var = KOMAdditionVariable
		distribution = uniform
		min = 1
		max = 5
	}
	round_temp_variable = KOMAdditionVariable
	subtract_from_variable = { KOMLeftPower = KOMAdditionVariable }
	custom_effect_tooltip = KOM_left_power_decrease_random_tt
}

KOM_right_power_change = {
	add_to_variable = { KOMRightPower = KOMRightPowerTemp }
	if = {
		limit = {
			check_variable = { KOMRightPowerTemp < 0 }
		}
		multiply_temp_variable = { KOMRightPowerTemp = -1 }
		custom_effect_tooltip = KOM_right_power_decrease_tt
	}
	else = {
		custom_effect_tooltip = KOM_right_power_increase_tt
	}
}

KOM_right_power_increase_random = {
	set_temp_variable = { KOMAdditionVariable = 1 }
	randomize_temp_variable = {
		var = KOMAdditionVariable
		distribution = uniform
		min = 1
		max = 5
	}
	round_temp_variable = KOMAdditionVariable
	add_to_variable = { KOMRightPower = KOMAdditionVariable }
	custom_effect_tooltip = KOM_right_power_increase_random_tt
}

KOM_right_power_decrease_random = {
	set_temp_variable = { KOMAdditionVariable = 1 }
	randomize_temp_variable = {
		var = KOMAdditionVariable
		distribution = uniform
		min = 1
		max = 5
	}
	round_temp_variable = KOMAdditionVariable
	subtract_from_variable = { KOMRightPower = KOMAdditionVariable }
	custom_effect_tooltip = KOM_right_power_decrease_random_tt
}

KOM_gumilyov_influence_change = {
	add_to_variable = { KOM_start_pops^7 = KOM_pop_temp }
	set_temp_variable = { KOMRightPowerTemp = KOM_pop_temp }
	divide_temp_variable = { KOMRightPowerTemp = 2 }
	round_temp_variable = KOMRightPowerTemp
	add_to_variable = { KOMRightPower = KOMRightPowerTemp }
	if = {
		limit = {
			check_variable = { KOM_pop_temp < 0 }
		}
		multiply_temp_variable = { KOM_pop_temp = -1 }
		custom_effect_tooltip = KOM_gumilyov_influence_decrease_tt
	}
	else = {
		custom_effect_tooltip = KOM_gumilyov_influence_increase_tt
	}
}

KOM_gumilyov_influence_increase_random = {
	set_temp_variable = { KOMAdditionVariable = 1 }
	randomize_temp_variable = {
		var = KOMAdditionVariable
		distribution = uniform
		min = 1
		max = 5
	}
	round_temp_variable = KOMAdditionVariable
	set_temp_variable = { KOMRightPowerTemp = KOMAdditionVariable }
	divide_temp_variable = { KOMRightPowerTemp = 2 }
	round_temp_variable = KOMRightPowerTemp
	add_to_variable = { KOMRightPower = KOMRightPowerTemp }
	add_to_variable = { KOM_start_pops^7 = KOMAdditionVariable }
	custom_effect_tooltip = KOM_gumilyov_influence_increase_random_tt
}

KOM_gumilyov_influence_decrease_random = {
	set_temp_variable = { KOMAdditionVariable = 1 }
	randomize_temp_variable = {
		var = KOMAdditionVariable
		distribution = uniform
		min = 1
		max = 5
	}
	round_temp_variable = KOMAdditionVariable
	set_temp_variable = { KOMRightPowerTemp = KOMAdditionVariable }
	divide_temp_variable = { KOMRightPowerTemp = 2 }
	round_temp_variable = KOMRightPowerTemp
	subtract_from_variable = { KOMRightPower = KOMRightPowerTemp }
	subtract_from_variable = { KOM_start_pops^7 = KOMAdditionVariable }
	custom_effect_tooltip = KOM_gumilyov_influence_decrease_random_tt
}

KOM_serov_influence_change = {
	add_to_variable = { KOM_start_pops^8 = KOM_pop_temp }
	set_temp_variable = { KOMRightPowerTemp = KOM_pop_temp }
	divide_temp_variable = { KOMRightPowerTemp = 2 }
	round_temp_variable = KOMRightPowerTemp
	add_to_variable = { KOMRightPower = KOMRightPowerTemp }
	if = {
		limit = {
			check_variable = { KOM_pop_temp < 0 }
		}
		multiply_temp_variable = { KOM_pop_temp = -1 }
		custom_effect_tooltip = KOM_serov_influence_decrease_tt
	}
	else = {
		custom_effect_tooltip = KOM_serov_influence_increase_tt
	}
}

KOM_serov_influence_increase_random = {
	set_temp_variable = { KOMAdditionVariable = 1 }
	randomize_temp_variable = {
		var = KOMAdditionVariable
		distribution = uniform
		min = 1
		max = 5
	}
	round_temp_variable = KOMAdditionVariable
	set_temp_variable = { KOMRightPowerTemp = KOMAdditionVariable }
	divide_temp_variable = { KOMRightPowerTemp = 2 }
	round_temp_variable = KOMRightPowerTemp
	add_to_variable = { KOMRightPower = KOMRightPowerTemp }
	add_to_variable = { KOM_start_pops^8 = KOMAdditionVariable }
	custom_effect_tooltip = KOM_serov_influence_increase_random_tt
}

KOM_serov_influence_decrease_random = {
	set_temp_variable = { KOMAdditionVariable = 1 }
	randomize_temp_variable = {
		var = KOMAdditionVariable
		distribution = uniform
		min = 1
		max = 5
	}
	round_temp_variable = KOMAdditionVariable
	set_temp_variable = { KOMRightPowerTemp = KOMAdditionVariable }
	divide_temp_variable = { KOMRightPowerTemp = 2 }
	round_temp_variable = KOMRightPowerTemp
	subtract_from_variable = { KOMRightPower = KOMRightPowerTemp }
	subtract_from_variable = { KOM_start_pops^8 = KOMAdditionVariable }
	custom_effect_tooltip = KOM_serov_influence_decrease_random_tt
}

KOM_shafarevich_influence_change = {
	add_to_variable = { KOM_start_pops^6 = KOM_pop_temp }
	set_temp_variable = { KOMRightPowerTemp = KOM_pop_temp }
	divide_temp_variable = { KOMRightPowerTemp = 2 }
	round_temp_variable = KOMRightPowerTemp
	add_to_variable = { KOMRightPower = KOMRightPowerTemp }
	if = {
		limit = {
			check_variable = { KOM_pop_temp < 0 }
		}
		multiply_temp_variable = { KOM_pop_temp = -1 }
		custom_effect_tooltip = KOM_shafarevich_influence_decrease_tt
	}
	else = {
		custom_effect_tooltip = KOM_shafarevich_influence_increase_tt
	}
}

KOM_shafarevich_influence_increase_random = {
	set_temp_variable = { KOMAdditionVariable = 1 }
	randomize_temp_variable = {
		var = KOMAdditionVariable
		distribution = uniform
		min = 1
		max = 5
	}
	round_temp_variable = KOMAdditionVariable
	set_temp_variable = { KOMRightPowerTemp = KOMAdditionVariable }
	divide_temp_variable = { KOMRightPowerTemp = 2 }
	round_temp_variable = KOMRightPowerTemp
	add_to_variable = { KOMRightPower = KOMRightPowerTemp }
	add_to_variable = { KOM_start_pops^6 = KOMAdditionVariable }
	custom_effect_tooltip = KOM_shafarevich_influence_increase_random_tt
}

KOM_shafarevich_influence_decrease_random = {
	set_temp_variable = { KOMAdditionVariable = 1 }
	randomize_temp_variable = {
		var = KOMAdditionVariable
		distribution = uniform
		min = 1
		max = 5
	}
	round_temp_variable = KOMAdditionVariable
	set_temp_variable = { KOMRightPowerTemp = KOMAdditionVariable }
	divide_temp_variable = { KOMRightPowerTemp = 2 }
	round_temp_variable = KOMRightPowerTemp
	subtract_from_variable = { KOMRightPower = KOMRightPowerTemp }
	subtract_from_variable = { KOM_start_pops^6 = KOMAdditionVariable }
	custom_effect_tooltip = KOM_shafarevich_influence_decrease_random_tt
}

KOM_taboritsky_influence_change = {
	add_to_variable = { KOM_start_pops^9 = KOM_pop_temp }
	set_temp_variable = { KOMRightPowerTemp = KOM_pop_temp }
	divide_temp_variable = { KOMRightPowerTemp = 2 }
	round_temp_variable = KOMRightPowerTemp
	add_to_variable = { KOMRightPower = KOMRightPowerTemp }
	if = {
		limit = {
			check_variable = { KOM_pop_temp < 0 }
		}
		multiply_temp_variable = { KOM_pop_temp = -1 }
		custom_effect_tooltip = KOM_taboritsky_influence_decrease_tt
	}
	else = {
		custom_effect_tooltip = KOM_taboritsky_influence_increase_tt
	}
}

KOM_taboritsky_influence_increase_random = {
	set_temp_variable = { KOMAdditionVariable = 1 }
	randomize_temp_variable = {
		var = KOMAdditionVariable
		distribution = uniform
		min = 1
		max = 5
	}
	round_temp_variable = KOMAdditionVariable
	set_temp_variable = { KOMRightPowerTemp = KOMAdditionVariable }
	divide_temp_variable = { KOMRightPowerTemp = 2 }
	round_temp_variable = KOMRightPowerTemp
	add_to_variable = { KOMRightPower = KOMRightPowerTemp }
	add_to_variable = { KOM_start_pops^9 = KOMAdditionVariable }
	custom_effect_tooltip = KOM_taboritsky_influence_increase_random_tt
}

KOM_taboritsky_influence_decrease_random = {
	set_temp_variable = { KOMAdditionVariable = 1 }
	randomize_temp_variable = {
		var = KOMAdditionVariable
		distribution = uniform
		min = 1
		max = 5
	}
	round_temp_variable = KOMAdditionVariable
	set_temp_variable = { KOMRightPowerTemp = KOMAdditionVariable }
	divide_temp_variable = { KOMRightPowerTemp = 2 }
	round_temp_variable = KOMRightPowerTemp
	subtract_from_variable = { KOMRightPower = KOMRightPowerTemp }
	subtract_from_variable = { KOM_start_pops^9 = KOMAdditionVariable }
	custom_effect_tooltip = KOM_taboritsky_influence_decrease_random_tt
}

KOM_zhdanov_influence_change = {
	add_to_variable = { KOM_start_pops^1 = KOM_pop_temp }
	set_temp_variable = { KOMLeftPowerTemp = KOM_pop_temp }
	divide_temp_variable = { KOMLeftPowerTemp = 2 }
	round_temp_variable = KOMLeftPowerTemp
	add_to_variable = { KOMLeftPower = KOMLeftPowerTemp }
	if = {
		limit = {
			check_variable = { KOM_pop_temp < 0 }
		}
		multiply_temp_variable = { KOM_pop_temp = -1 }
		custom_effect_tooltip = KOM_zhdanov_influence_decrease_tt
	}
	else = {
		custom_effect_tooltip = KOM_zhdanov_influence_increase_tt
	}
}

KOM_zhdanov_influence_increase_random = {
	set_temp_variable = { KOMAdditionVariable = 1 }
	randomize_temp_variable = {
		var = KOMAdditionVariable
		distribution = uniform
		min = 1
		max = 5
	}
	round_temp_variable = KOMAdditionVariable
	set_temp_variable = { KOMLeftPowerTemp = KOMAdditionVariable }
	divide_temp_variable = { KOMLeftPowerTemp = 2 }
	round_temp_variable = KOMLeftPowerTemp
	add_to_variable = { KOMLeftPower = KOMLeftPowerTemp }
	add_to_variable = { KOM_start_pops^1 = KOMAdditionVariable }
	custom_effect_tooltip = KOM_zhdanov_influence_increase_random_tt
}

KOM_zhdanov_influence_decrease_random = {
	set_temp_variable = { KOMAdditionVariable = 1 }
	randomize_temp_variable = {
		var = KOMAdditionVariable
		distribution = uniform
		min = 1
		max = 5
	}
	round_temp_variable = KOMAdditionVariable
	set_temp_variable = { KOMLeftPowerTemp = KOMAdditionVariable }
	divide_temp_variable = { KOMLeftPowerTemp = 2 }
	round_temp_variable = KOMLeftPowerTemp
	subtract_from_variable = { KOMLeftPower = KOMLeftPowerTemp }
	subtract_from_variable = { KOM_start_pops^1 = KOMAdditionVariable }
	custom_effect_tooltip = KOM_zhdanov_influence_decrease_random_tt
}

KOM_suslov_influence_change = {
	add_to_variable = { KOM_start_pops^0 = KOM_pop_temp }
	set_temp_variable = { KOMLeftPowerTemp = KOM_pop_temp }
	divide_temp_variable = { KOMLeftPowerTemp = 2 }
	round_temp_variable = KOMLeftPowerTemp
	add_to_variable = { KOMLeftPower = KOMLeftPowerTemp }
	if = {
		limit = {
			check_variable = { KOM_pop_temp < 0 }
		}
		multiply_temp_variable = { KOM_pop_temp = -1 }
		custom_effect_tooltip = KOM_suslov_influence_decrease_tt
	}
	else = {
		custom_effect_tooltip = KOM_suslov_influence_increase_tt
	}
}

KOM_suslov_influence_increase_random = {
	set_temp_variable = { KOMAdditionVariable = 1 }
	randomize_temp_variable = {
		var = KOMAdditionVariable
		distribution = uniform
		min = 1
		max = 5
	}
	round_temp_variable = KOMAdditionVariable
	set_temp_variable = { KOMLeftPowerTemp = KOMAdditionVariable }
	divide_temp_variable = { KOMLeftPowerTemp = 2 }
	round_temp_variable = KOMLeftPowerTemp
	add_to_variable = { KOMLeftPower = KOMLeftPowerTemp }
	add_to_variable = { KOM_start_pops^0 = KOMAdditionVariable }
	custom_effect_tooltip = KOM_suslov_influence_increase_random_tt
}

KOM_suslov_influence_decrease_random = {
	set_temp_variable = { KOMAdditionVariable = 1 }
	randomize_temp_variable = {
		var = KOMAdditionVariable
		distribution = uniform
		min = 1
		max = 5
	}
	round_temp_variable = KOMAdditionVariable
	set_temp_variable = { KOMLeftPowerTemp = KOMAdditionVariable }
	divide_temp_variable = { KOMLeftPowerTemp = 2 }
	round_temp_variable = KOMLeftPowerTemp
	subtract_from_variable = { KOMLeftPower = KOMLeftPowerTemp }
	subtract_from_variable = { KOM_start_pops^0 = KOMAdditionVariable }
	custom_effect_tooltip = KOM_suslov_influence_decrease_random_tt
}

KOM_bukharina_influence_change = {
	add_to_variable = { KOM_start_pops^2 = KOM_pop_temp }
	set_temp_variable = { KOMLeftPowerTemp = KOM_pop_temp }
	divide_temp_variable = { KOMLeftPowerTemp = 2 }
	round_temp_variable = KOMLeftPowerTemp
	add_to_variable = { KOMLeftPower = KOMLeftPowerTemp }
	if = {
		limit = {
			check_variable = { KOM_pop_temp < 0 }
		}
		multiply_temp_variable = { KOM_pop_temp = -1 }
		custom_effect_tooltip = KOM_bukharina_influence_decrease_tt
	}
	else = {
		custom_effect_tooltip = KOM_bukharina_influence_increase_tt
	}
}

KOM_bukharina_influence_increase_random = {
	set_temp_variable = { KOMAdditionVariable = 1 }
	randomize_temp_variable = {
		var = KOMAdditionVariable
		distribution = uniform
		min = 1
		max = 5
	}
	round_temp_variable = KOMAdditionVariable
	set_temp_variable = { KOMLeftPowerTemp = KOMAdditionVariable }
	divide_temp_variable = { KOMLeftPowerTemp = 2 }
	round_temp_variable = KOMLeftPowerTemp
	add_to_variable = { KOMLeftPower = KOMLeftPowerTemp }
	add_to_variable = { KOM_start_pops^2 = KOMAdditionVariable }
	custom_effect_tooltip = KOM_bukharina_influence_increase_random_tt
}

KOM_bukharina_influence_decrease_random = {
	set_temp_variable = { KOMAdditionVariable = 1 }
	randomize_temp_variable = {
		var = KOMAdditionVariable
		distribution = uniform
		min = 1
		max = 5
	}
	round_temp_variable = KOMAdditionVariable
	set_temp_variable = { KOMLeftPowerTemp = KOMAdditionVariable }
	divide_temp_variable = { KOMLeftPowerTemp = 2 }
	round_temp_variable = KOMLeftPowerTemp
	subtract_from_variable = { KOMLeftPower = KOMLeftPowerTemp }
	subtract_from_variable = { KOM_start_pops^2 = KOMAdditionVariable }
	custom_effect_tooltip = KOM_bukharina_influence_decrease_random_tt
}

KOM_morozov_influence_change = {
	add_to_variable = { KOM_start_pops^4 = KOM_pop_temp }
	set_temp_variable = { KOMCenterPowerTemp = KOM_pop_temp }
	divide_temp_variable = { KOMCenterPowerTemp = 2 }
	round_temp_variable = KOMCenterPowerTemp
	add_to_variable = { KOMCenterPower = KOMCenterPowerTemp }
	if = {
		limit = {
			check_variable = { KOM_pop_temp < 0 }
		}
		multiply_temp_variable = { KOM_pop_temp = -1 }
		custom_effect_tooltip = KOM_morozov_influence_decrease_tt
	}
	else = {
		custom_effect_tooltip = KOM_morozov_influence_increase_tt
	}
}

KOM_morozov_influence_increase_random = {
	set_temp_variable = { KOMAdditionVariable = 1 }
	randomize_temp_variable = {
		var = KOMAdditionVariable
		distribution = uniform
		min = 1
		max = 5
	}
	round_temp_variable = KOMAdditionVariable
	set_temp_variable = { KOMCenterPowerTemp = KOMAdditionVariable }
	divide_temp_variable = { KOMCenterPowerTemp = 2 }
	round_temp_variable = KOMCenterPowerTemp
	add_to_variable = { KOMCenterPower = KOMCenterPowerTemp }
	add_to_variable = { KOM_start_pops^4 = KOMAdditionVariable }
	custom_effect_tooltip = KOM_morozov_influence_increase_random_tt
}

KOM_morozov_influence_decrease_random = {
	set_temp_variable = { KOMAdditionVariable = 1 }
	randomize_temp_variable = {
		var = KOMAdditionVariable
		distribution = uniform
		min = 1
		max = 5
	}
	round_temp_variable = KOMAdditionVariable
	set_temp_variable = { KOMCenterPowerTemp = KOMAdditionVariable }
	divide_temp_variable = { KOMCenterPowerTemp = 2 }
	round_temp_variable = KOMCenterPowerTemp
	subtract_from_variable = { KOMCenterPower = KOMCenterPowerTemp }
	subtract_from_variable = { KOM_start_pops^4 = KOMAdditionVariable }
	custom_effect_tooltip = KOM_morozov_influence_decrease_random_tt
}

KOM_voznesensky_influence_change = {
	add_to_variable = { KOM_start_pops^3 = KOM_pop_temp }
	set_temp_variable = { KOMCenterPowerTemp = KOM_pop_temp }
	divide_temp_variable = { KOMCenterPowerTemp = 2 }
	round_temp_variable = KOMCenterPowerTemp
	add_to_variable = { KOMCenterPower = KOMCenterPowerTemp }
	if = {
		limit = {
			check_variable = { KOM_pop_temp < 0 }
		}
		multiply_temp_variable = { KOM_pop_temp = -1 }
		custom_effect_tooltip = KOM_voznesensky_influence_decrease_tt
	}
	else = {
		custom_effect_tooltip = KOM_voznesensky_influence_increase_tt
	}
}

KOM_voznesensky_influence_increase_random = {
	set_temp_variable = { KOMAdditionVariable = 1 }
	randomize_temp_variable = {
		var = KOMAdditionVariable
		distribution = uniform
		min = 1
		max = 5
	}
	round_temp_variable = KOMAdditionVariable
	set_temp_variable = { KOMCenterPowerTemp = KOMAdditionVariable }
	divide_temp_variable = { KOMCenterPowerTemp = 2 }
	round_temp_variable = KOMCenterPowerTemp
	add_to_variable = { KOMCenterPower = KOMCenterPowerTemp }
	add_to_variable = { KOM_start_pops^3 = KOMAdditionVariable }
	custom_effect_tooltip = KOM_voznesensky_influence_increase_random_tt
}

KOM_voznesensky_influence_decrease_random = {
	set_temp_variable = { KOMAdditionVariable = 1 }
	randomize_temp_variable = {
		var = KOMAdditionVariable
		distribution = uniform
		min = 1
		max = 5
	}
	round_temp_variable = KOMAdditionVariable
	set_temp_variable = { KOMCenterPowerTemp = KOMAdditionVariable }
	divide_temp_variable = { KOMCenterPowerTemp = 2 }
	round_temp_variable = KOMCenterPowerTemp
	subtract_from_variable = { KOMCenterPower = KOMCenterPowerTemp }
	subtract_from_variable = { KOM_start_pops^3 = KOMAdditionVariable }
	custom_effect_tooltip = KOM_voznesensky_influence_decrease_random_tt
}

KOM_stalina_influence_change = {
	add_to_variable = { KOM_start_pops^5 = KOM_pop_temp }
	set_temp_variable = { KOMCenterPowerTemp = KOM_pop_temp }
	divide_temp_variable = { KOMCenterPowerTemp = 2 }
	round_temp_variable = KOMCenterPowerTemp
	add_to_variable = { KOMCenterPower = KOMCenterPowerTemp }
	if = {
		limit = {
			check_variable = { KOM_pop_temp < 0 }
		}
		multiply_temp_variable = { KOM_pop_temp = -1 }
		custom_effect_tooltip = KOM_stalina_influence_decrease_tt
	}
	else = {
		custom_effect_tooltip = KOM_stalina_influence_increase_tt
	}
}

KOM_stalina_influence_increase_random = {
	set_temp_variable = { KOMAdditionVariable = 1 }
	randomize_temp_variable = {
		var = KOMAdditionVariable
		distribution = uniform
		min = 1
		max = 5
	}
	round_temp_variable = KOMAdditionVariable
	set_temp_variable = { KOMCenterPowerTemp = KOMAdditionVariable }
	divide_temp_variable = { KOMCenterPowerTemp = 2 }
	round_temp_variable = KOMCenterPowerTemp
	add_to_variable = { KOMCenterPower = KOMCenterPowerTemp }
	add_to_variable = { KOM_start_pops^5 = KOMAdditionVariable }
	custom_effect_tooltip = KOM_stalina_influence_increase_random_tt
}

KOM_stalina_influence_decrease_random = {
	set_temp_variable = { KOMAdditionVariable = 1 }
	randomize_temp_variable = {
		var = KOMAdditionVariable
		distribution = uniform
		min = 1
		max = 5
	}
	round_temp_variable = KOMAdditionVariable
	set_temp_variable = { KOMCenterPowerTemp = KOMAdditionVariable }
	divide_temp_variable = { KOMCenterPowerTemp = 2 }
	round_temp_variable = KOMCenterPowerTemp
	subtract_from_variable = { KOMCenterPower = KOMCenterPowerTemp }
	subtract_from_variable = { KOM_start_pops^5 = KOMAdditionVariable }
	custom_effect_tooltip = KOM_stalina_influence_decrease_random_tt
}

KOM_generate_coup = {
	clr_country_flag = KOM_COUP_TICKER_RUN
	set_variable = { KOMCoupTicker = 1 }
	KOM_shuffle_couped_politician = yes
	if = {
		limit = {
			OR = {
				has_government = liberalism
				has_government = progressivism
				has_government = liberal_conservatism
				has_government = conservatism
				AND = {
					has_government = despotism
					has_country_leader = {
						character = KOM_Svetlana_Stalina
						ruling_only = yes
					}
				}
			}
		}
		if = {
			limit = {
				check_variable = { KOMLeftPower > KOMRightPower }
				NOT = {
					has_country_flag = KOM_leftist_coup
				}
			}
			country_event = {
				id = komicoup.1
				days = 3
			}
		}
		else_if = {
			limit = {
				check_variable = { KOMRightPower > KOMLeftPower }
				NOT = {
					has_country_flag = KOM_rightist_coup
				}
			}
			country_event = {
				id = komicoup.2
				days = 3
			}
		}
		else_if = {
			limit = {
				has_country_flag = KOM_rightist_coup
				has_country_flag = KOM_leftist_coup
			}
			country_event = {
				id = komicoup.20
				days = 3
			}
		}
		else_if = {
			limit = {
				check_variable = { KOMRightPower = KOMLeftPower }
				NOT = {
					has_country_flag = KOM_rightist_coup
				}
			}
			country_event = {
				id = komicoup.2
				days = 3
			}
		}
		else_if = {
			limit = {
				check_variable = { KOMRightPower = KOMLeftPower }
				has_country_flag = KOM_rightist_coup
			}
			country_event = {
				id = komicoup.1
				days = 3
			}
		}
		else = {
			country_event = {
				id = komicoup.20
				days = 3
			}
		}
	}
	if = {
		limit = {
			OR = {
				has_government = socialist
				has_government = communist
			}
		}
		if = {
			limit = {
				check_variable = { KOMCenterPower > KOMRightPower }
				NOT = {
					has_country_flag = KOM_democratic_coup
				}
			}
			KOM_get_most_likely_coupist_center = yes
		}
		else_if = {
			limit = {
				check_variable = { KOMRightPower > KOMCenterPower }
				NOT = {
					has_country_flag = KOM_rightist_coup
				}
				NOT = {
					has_country_flag = KOM_rightist_coup
				}
			}
			country_event = {
				id = komicoup.2
				days = 3
			}
		}
		else_if = {
			limit = {
				has_country_flag = KOM_rightist_coup
				has_country_flag = KOM_democratic_coup
			}
			country_event = {
				id = komicoup.20
				days = 3
			}
		}
		else_if = {
			limit = {
				check_variable = { KOMCenterPower = KOMRightPower }
				NOT = {
					has_country_flag = KOM_democratic_coup
				}
			}
			KOM_get_most_likely_coupist_center = yes
		}
		else_if = {
			limit = {
				check_variable = { KOMCenterPower = KOMRightPower }
				has_country_flag = KOM_democratic_coup
			}
			country_event = {
				id = komicoup.2
				days = 3
			}
		}
		else = {
			country_event = {
				id = komicoup.20
				days = 3
			}
		}
	}
	if = {
		limit = {
			OR = {
				has_government = fascism
				has_government = national_socialism
				has_government = ultranationalism
				has_government = despotism
			}
		}
		if = {
			limit = {
				check_variable = { KOMLeftPower > KOMCenterPower }
				NOT = {
					has_country_flag = KOM_leftist_coup
				}
			}
			country_event = {
				id = komicoup.1
				days = 3
			}
		}
		else_if = {
			limit = {
				check_variable = { KOMCenterPower > KOMLeftPower }
				NOT = {
					has_country_flag = KOM_democratic_coup
				}
			}
			KOM_get_most_likely_coupist_center = yes
		}
		else_if = {
			limit = {
				has_country_flag = KOM_leftist_coup
				has_country_flag = KOM_democratic_coup
			}
			country_event = {
				id = komicoup.20
				days = 3
			}
		}
		else_if = {
			limit = {
				check_variable = { KOMCenterPower = KOMLeftPower }
				NOT = {
					has_country_flag = KOM_democratic_coup
				}
			}
			KOM_get_most_likely_coupist_center = yes
		}
		else_if = {
			limit = {
				check_variable = { KOMCenterPower = KOMLeftPower }
				has_country_flag = KOM_democratic_coup
			}
			country_event = {
				id = komicoup.1
				days = 3
			}
		}
		else = {
			country_event = {
				id = komicoup.20
				days = 3
			}
		}
	}
}

KOM_get_most_likely_coupist_center = {
	if = {
		limit = {
			AND = {
				OR = {
					AND = {
						check_variable = { KOM_start_pops^5 > KOM_start_pops^3 }
						check_variable = { KOM_start_pops^5 > KOM_start_pops^4 }
					}
					has_country_flag = KOM_democratic_coup
				}
				NOT = {
					check_variable = { KOM_leader_status^5 = 0 }
					check_variable = { KOM_leader_status^5 = 1 }
					check_variable = { KOM_leader_status^5 = 2 }
					has_country_flag = KOM_stalina_coup
				}
			}
		}
		country_event = {
			id = komicoup.3
			days = 3
		}
	}
	else_if = {
		limit = {
			NOT = {
				AND = {
					OR = {
						check_variable = { KOM_leader_status^3 = 0 }
						check_variable = { KOM_leader_status^3 = 1 }
						check_variable = { KOM_leader_status^3 = 2 }
					}
					OR = {
						check_variable = { KOM_leader_status^4 = 0 }
						check_variable = { KOM_leader_status^4 = 1 }
						check_variable = { KOM_leader_status^4 = 2 }
					}
				}
				has_country_flag = KOM_democratic_coup
			}
		}
		country_event = {
			id = komicoup.4
			days = 3
		}
	}
	else = {
		KOM_generate_coup = yes
	}
}

KOM_shuffle_couped_politician = {
	if = {
		limit = {
			has_country_leader = {
				character = KOM_Svetlana_Bukharina
				ruling_only = yes
			}
		}
		divide_variable = {
			KOM_start_pops^2 = 2
		}
	}
	else_if = {
		limit = {
			has_country_leader = {
				character = KOM_Sergey_Taboritsky
				ruling_only = yes
			}
		}
		divide_variable = {
			KOM_start_pops^9 = 2
		}
	}
	else_if = {
		limit = {
			has_country_leader = {
				character = KOM_Lev_Gumilyov
				ruling_only = yes
			}
		}
		divide_variable = {
			KOM_start_pops^7 = 2
		}
	}
	else_if = {
		limit = {
			has_country_leader = {
				character = KOM_Boris_Ponomaryov
				ruling_only = yes
			}
		}
		divide_variable = {
			KOM_start_pops^0 = 2
		}
	}
	else_if = {
		limit = {
			has_country_leader = {
				character = KOM_Mikhail_Suslov
				ruling_only = yes
			}
		}
		divide_variable = {
			KOM_start_pops^0 = 2
		}
	}
	else_if = {
		limit = {
			has_country_leader = {
				character = KOM_Ivan_Morozov
				ruling_only = yes
			}
		}
		divide_variable = {
			KOM_start_pops^4 = 2
		}
	}
	else_if = {
		limit = {
			has_country_leader = {
				character = KOM_Svetlana_Stalina
				ruling_only = yes
			}
		}
		divide_variable = {
			KOM_start_pops^5 = 2
		}
	}
	else_if = {
		limit = {
			has_country_leader = {
				character = KOM_Ivan_Serov
				ruling_only = yes
			}
		}
		divide_variable = {
			KOM_start_pops^8 = 2
		}
	}
	else_if = {
		limit = {
			has_country_leader = {
				character = KOM_Andrei_Zhdanov
				ruling_only = yes
			}
		}
		divide_variable = {
			KOM_start_pops^1 = 2
		}
	}
}

KOM_clear_cosmetics = {
	if = {
		limit = {
			has_cosmetic_tag = KOM_FASCIST
		}
		drop_cosmetic_tag = yes
	}
	if = {
		limit = {
			has_cosmetic_tag = KOM_DEMOCRATIC
		}
		drop_cosmetic_tag = yes
	}
	if = {
		limit = {
			has_cosmetic_tag = KOM_LIBSOC
		}
		drop_cosmetic_tag = yes
	}
	if = {
		limit = {
			has_cosmetic_tag = KOM_ULTRANAT
		}
		drop_cosmetic_tag = yes
	}
	if = {
		limit = {
			has_cosmetic_tag = KOM_AUTHSOC
		}
		drop_cosmetic_tag = yes
	}
}

KOM_generate_random_event = {
	set_variable = { KOM_komi_coup_random_event = 1 }
	hidden_effect = {
		if = {
			limit = {
				OR = {
					has_government = progressivism
					has_government = liberalism
					has_government = conservatism
					has_government = liberal_conservatism
					AND = {
						has_government = despotism
						has_country_leader = {
							character = KOM_Svetlana_Stalina
							ruling_only = yes
						}
					}
				}
			}
			random_list = {
				20 = {
				}
				10 = {
					country_event = {
						id = KOM_coups.1
						days = 1
						random_hours = 10
					}
				}
				10 = {
					country_event = {
						id = KOM_coups.2
						days = 1
						random_hours = 10
					}
				}
				10 = {
					country_event = {
						id = KOM_coups.3
						days = 1
						random_hours = 10
					}
				}
				10 = {
					country_event = {
						id = KOM_coups.4
						days = 1
						random_hours = 10
					}
				}
				10 = {
					country_event = {
						id = KOM_coups.5
						days = 1
						random_hours = 10
					}
				}
				10 = {
					country_event = {
						id = KOM_coups.6
						days = 1
						random_hours = 10
					}
				}
				10 = {
					country_event = {
						id = KOM_coups.7
						days = 1
						random_hours = 10
					}
				}
				10 = {
					country_event = {
						id = KOM_coups.8
						days = 1
						random_hours = 10
					}
				}
			}
		}
		if = {
			limit = {
				OR = {
					has_country_leader = {
						character = KOM_Passionariyy_Organization
						ruling_only = yes
					}
					has_country_leader = {
						character = KOM_Igor_Shafarevich
						ruling_only = yes
					}
					has_country_leader = {
						character = KOM_Lev_Gumilyov
						ruling_only = yes
					}
					has_country_leader = {
						character = KOM_Ivan_Serov
						ruling_only = yes
					}
					has_country_leader = {
						character = KOM_Sergey_Taboritsky
						ruling_only = yes
					}
				}
			}
			random_list = {
				20 = {
				}
				10 = {
					country_event = {
						id = KOM_coups.9
						days = 1
						random_hours = 10
					}
				}
				10 = {
					country_event = {
						id = KOM_coups.10
						days = 1
						random_hours = 10
					}
				}
				10 = {
					country_event = {
						id = KOM_coups.11
						days = 1
						random_hours = 10
					}
				}
				10 = {
					country_event = {
						id = KOM_coups.12
						days = 1
						random_hours = 10
					}
				}
				10 = {
					country_event = {
						id = KOM_coups.13
						days = 1
						random_hours = 10
					}
				}
				10 = {
					country_event = {
						id = KOM_coups.14
						days = 1
						random_hours = 10
					}
				}
				10 = {
					country_event = {
						id = KOM_coups.15
						days = 1
						random_hours = 10
					}
				}
				10 = {
					country_event = {
						id = KOM_coups.16
						days = 1
						random_hours = 10
					}
				}
			}
		}
		if = {
			limit = {
				OR = {
					has_government = socialist
					has_government = communist
				}
			}
			random_list = {
				20 = {
				}
				10 = {
					country_event = {
						id = KOM_coups.17
						days = 1
						random_hours = 10
					}
				}
				10 = {
					country_event = {
						id = KOM_coups.18
						days = 1
						random_hours = 10
					}
				}
				10 = {
					country_event = {
						id = KOM_coups.19
						days = 1
						random_hours = 10
					}
				}
				10 = {
					country_event = {
						id = KOM_coups.20
						days = 1
						random_hours = 10
					}
				}
				10 = {
					country_event = {
						id = KOM_coups.21
						days = 1
						random_hours = 10
					}
				}
				10 = {
					country_event = {
						id = KOM_coups.22
						days = 1
						random_hours = 10
					}
				}
				10 = {
					country_event = {
						id = KOM_coups.23
						days = 1
						random_hours = 10
					}
				}
				10 = {
					country_event = {
						id = KOM_coups.24
						days = 1
						random_hours = 10
					}
				}
			}
		}
	}
}

KOM_upgrade_anarchy = {
	if = {
		limit = {
			NOT = {
				has_idea = KOM_anarchy_1
				has_idea = KOM_anarchy_2
				has_idea = KOM_anarchy_3
				has_idea = KOM_anarchy_4
				has_idea = KOM_anarchy_5
				has_idea = KOM_anarchy_6
				has_idea = KOM_anarchy_7
				has_idea = KOM_anarchy_8
			}
		}
		add_ideas = KOM_anarchy_1
	}
	else_if = {
		limit = {
			has_idea = KOM_anarchy_1
		}
		swap_ideas = {
			remove_idea = KOM_anarchy_1
			add_idea = KOM_anarchy_2
		}
	}
	else_if = {
		limit = {
			has_idea = KOM_anarchy_2
		}
		swap_ideas = {
			remove_idea = KOM_anarchy_2
			add_idea = KOM_anarchy_3
		}
	}
	else_if = {
		limit = {
			has_idea = KOM_anarchy_3
		}
		swap_ideas = {
			remove_idea = KOM_anarchy_3
			add_idea = KOM_anarchy_4
		}
	}
	else_if = {
		limit = {
			has_idea = KOM_anarchy_4
		}
		swap_ideas = {
			remove_idea = KOM_anarchy_4
			add_idea = KOM_anarchy_5
		}
	}
	else_if = {
		limit = {
			has_idea = KOM_anarchy_5
		}
		swap_ideas = {
			remove_idea = KOM_anarchy_5
			add_idea = KOM_anarchy_6
		}
	}
	else_if = {
		limit = {
			has_idea = KOM_anarchy_6
		}
		swap_ideas = {
			remove_idea = KOM_anarchy_6
			add_idea = KOM_anarchy_7
		}
	}
	else_if = {
		limit = {
			has_idea = KOM_anarchy_7
		}
		swap_ideas = {
			remove_idea = KOM_anarchy_7
			add_idea = KOM_anarchy_8
		}
	}
}

KOM_remove_anarchy = {
	if = {
		limit = {
			has_idea = KOM_anarchy_1
		}
		remove_ideas = KOM_anarchy_1
	}
	else_if = {
		limit = {
			has_idea = KOM_anarchy_2
		}
		remove_ideas = KOM_anarchy_2
	}
	else_if = {
		limit = {
			has_idea = KOM_anarchy_3
		}
		remove_ideas = KOM_anarchy_3
	}
	else_if = {
		limit = {
			has_idea = KOM_anarchy_4
		}
		remove_ideas = KOM_anarchy_4
	}
	else_if = {
		limit = {
			has_idea = KOM_anarchy_5
		}
		remove_ideas = KOM_anarchy_5
	}
	else_if = {
		limit = {
			has_idea = KOM_anarchy_6
		}
		remove_ideas = KOM_anarchy_6
	}
	else_if = {
		limit = {
			has_idea = KOM_anarchy_7
		}
		remove_ideas = KOM_anarchy_7
	}
	else_if = {
		limit = {
			has_idea = KOM_anarchy_8
		}
		remove_ideas = KOM_anarchy_8
	}
}

KOM_add_leftist_generals = {
	hidden_effect = {
		KOM = {
			every_unit_leader = {
				set_nationality = ZZZ
			}
		}
		ZZZ = {
			KOM_Nikolay_Oplesnin = {
				set_nationality = KOM
			}
			KOM_Valentin_Varennikov = {
				set_nationality = KOM
			}
			KOM_Fritz_Schmenkel = {
				set_nationality = KOM
			}
			KOM_Vladimir_Bushin = {
				set_nationality = KOM
			}
			KOM_Mikhail_Titov = {
				set_nationality = KOM
			}
			KOM_Nikolay_Gabov = {
				set_nationality = KOM
			}
			KOM_Viktor_Lobanov = {
				set_nationality = KOM
			}
		}
	}
}

KOM_add_centrist_generals = {
	hidden_effect = {
		KOM = {
			every_unit_leader = {
				set_nationality = ZZZ
			}
		}
		ZZZ = {
			KOM_Avgustin_Vernikovsky = {
				set_nationality = KOM
			}
			KOM_Petro_Grigorenko = {
				set_nationality = KOM
			}
			KOM_Dmitry_Panin = {
				set_nationality = KOM
			}
			KOM_Alexander_Baluashvili = {
				set_nationality = KOM
			}
			KOM_Felix_Serebrov = {
				set_nationality = KOM
			}
			KOM_Ivan_Korolkov = {
				set_nationality = KOM
			}
			KOM_Yakov_Pokus = {
				set_nationality = KOM
			}
			KOM_Nikolay_Gabov = {
				set_nationality = KOM
			}
			KOM_Viktor_Lobanov = {
				set_nationality = KOM
			}
		}
	}
}

KOM_add_rightist_generals = {
	hidden_effect = {
		KOM = {
			every_unit_leader = {
				set_nationality = ZZZ
			}
		}

		ZZZ = {
			KOM_Viktor_Larionov = {
				set_nationality = KOM
			}
			KOM_Gleb_Sluchenkov = {
				set_nationality = KOM
			}
			KOM_Alexander_Prokhanov = {
				set_nationality = KOM
			}
			KOM_Vladimir_Poremsky = {
				set_nationality = KOM
			}
			KOM_Aleksandr_Korotkov = {
				set_nationality = KOM
			}
			KOM_Ivan_Melkikh = {
				set_nationality = KOM
			}
			KOM_Nikolay_Gorokhov = {
				set_nationality = KOM
			}
			KOM_Yuri_Evtukovich = {
				set_nationality = KOM
			}
		}
	}
}

KOM_tabby_set_laws = {
	if = { ## Slavery ##
		limit = {
			NOT = { has_idea = tno_slavery_institutionalized }
		}
		tno_slavery_clear = yes
		add_ideas = tno_slavery_institutionalized
		TNO_worsen_slavery_policy_effectiveness_med = yes
	}
	if = { ## Public Meetings ##
		limit = {
			NOT = { has_idea = tno_public_meetings_outlawed }
		}
		tno_public_meetings_clear = yes
		add_ideas = tno_public_meetings_outlawed
		TNO_worsen_public_meetings_policy_effectiveness_med = yes
	}
	if = { ## Press Rights ##
		limit = {
			NOT = { has_idea = tno_press_rights_propaganda_press }
		}
		tno_press_rights_clear = yes
		add_ideas = tno_press_rights_propaganda_press
		TNO_worsen_press_rights_policy_effectiveness_med = yes
	}
	if = { ## Voting Rights ##
		limit = {
			NOT = { has_idea = tno_vote_franchise_no_voting }
		}
		tno_vote_franchise_clear = yes
		add_ideas = tno_vote_franchise_no_voting
		TNO_worsen_vote_franchise_policy_effectiveness_med = yes
	}
	if = { ## Workday ##
		limit = {
			NOT = { has_idea = tno_max_workhours_unlimited_work_day }
		}
		tno_max_workhours_clear = yes
		add_ideas = tno_max_workhours_unlimited_work_day
		TNO_worsen_max_workhours_policy_effectiveness_med = yes
	}
	if = { ## Minimum Wage ##
		limit = {
			NOT = { has_idea = tno_minimum_wage_no_minimum_wage }
		}
		tno_minimum_wage_clear = yes
		add_ideas = tno_minimum_wage_no_minimum_wage
		TNO_worsen_minimum_wage_policy_effectiveness_med = yes
	}
	if = { ## Pensions ##
		limit = {
			NOT = { has_idea = tno_pensions_no_pensions }
		}
		tno_pensions_clear = yes
		add_ideas = tno_pensions_no_pensions
		TNO_worsen_pensions_policy_effectiveness_med = yes
	}
	if = { ## Unemplyoment Subsidies ##
		limit = {
			NOT = { has_idea = tno_unemployment_no_subsidies }
		}
		tno_unemployment_clear = yes
		add_ideas = tno_unemployment_no_subsidies
		TNO_worsen_unemployment_policy_effectiveness_med = yes
	}
	if = { ## Health Care ##
		limit = {
			NOT = { has_idea = tno_health_care_no_government_support }
		}
		tno_health_care_clear = yes
		add_ideas = tno_health_care_no_government_support
		TNO_worsen_health_care_policy_effectiveness_med = yes
	}
}

KOM_tabby_hour_forward_1 = {
	if = {
		limit = {
			check_variable = { KOM_tabby_time_hours < 24 }
		}
		add_to_variable = { KOM_tabby_time_hours = 1 }
		KOM_tabby_fire_journal_event = yes
		custom_effect_tooltip = KOM_tabby_hour_forward_1_tt
	}
}
KOM_tabby_hour_forward_2 = {
	if = {
		limit = {
			check_variable = { KOM_tabby_time_hours < 23 }
		}
		add_to_variable = { KOM_tabby_time_hours = 2 }
		KOM_tabby_fire_journal_event = yes
		custom_effect_tooltip = KOM_tabby_hour_forward_2_tt
	}
	else_if = {
		limit = {
			check_variable = { KOM_tabby_time_hours < 24 }
		}
		add_to_variable = { KOM_tabby_time_hours = 1 }
		KOM_tabby_fire_journal_event = yes
		custom_effect_tooltip = KOM_tabby_hour_forward_1_tt
	}
}
KOM_tabby_hour_forward_3 = {
	if = {
		limit = {
			check_variable = { KOM_tabby_time_hours < 22 }
		}
		add_to_variable = { KOM_tabby_time_hours = 3 }
		KOM_tabby_fire_journal_event = yes
		custom_effect_tooltip = KOM_tabby_hour_forward_3_tt
	}
	else_if = {
		limit = {
			check_variable = { KOM_tabby_time_hours < 23 }
		}
		add_to_variable = { KOM_tabby_time_hours = 2 }
		KOM_tabby_fire_journal_event = yes
		custom_effect_tooltip = KOM_tabby_hour_forward_2_tt
	}
	else_if = {
		limit = {
			check_variable = { KOM_tabby_time_hours < 24 }
		}
		add_to_variable = { KOM_tabby_time_hours = 1 }
		KOM_tabby_fire_journal_event = yes
		custom_effect_tooltip = KOM_tabby_hour_forward_1_tt
	}
}
KOM_tabby_hour_backwards_1 = {
	if = {
		limit = {
			check_variable = { KOM_tabby_time_hours > 1 }
		}
		add_to_variable = { KOM_tabby_time_hours = -1 }
		custom_effect_tooltip = KOM_tabby_hour_backward_1_tt
	}
}
KOM_tabby_hour_backwards_2 = {
	if = {
		limit = {
			check_variable = { KOM_tabby_time_hours > 2 }
		}
		add_to_variable = { KOM_tabby_time_hours = -2 }
		custom_effect_tooltip = KOM_tabby_hour_backward_2_tt
	}
	else_if = {
		limit = {
			check_variable = { KOM_tabby_time_hours > 1 }
		}
		add_to_variable = { KOM_tabby_time_hours = -1 }
		custom_effect_tooltip = KOM_tabby_hour_backward_1_tt
	}
}
KOM_tabby_hour_backwards_3 = {
	if = {
		limit = {
			check_variable = { KOM_tabby_time_hours > 3 }
		}
		add_to_variable = { KOM_tabby_time_hours = -3 }
		custom_effect_tooltip = KOM_tabby_hour_backward_3_tt
	}
	else_if = {
		limit = {
			check_variable = { KOM_tabby_time_hours > 2 }
		}
		add_to_variable = { KOM_tabby_time_hours = -2 }
		custom_effect_tooltip = KOM_tabby_hour_backward_2_tt
	}
	else_if = {
		limit = {
			check_variable = { KOM_tabby_time_hours > 1 }
		}
		add_to_variable = { KOM_tabby_time_hours = -1 }
		custom_effect_tooltip = KOM_tabby_hour_backward_1_tt
	}
}

KOM_tabby_ticker_forward_5 = {
	custom_effect_tooltip = KOM_tabby_ticker_forward_tt
	add_to_variable = { KOM_tabby_time_progress = 5 }
}
KOM_tabby_ticker_forward_10 = {
	custom_effect_tooltip = KOM_tabby_ticker_forward_tt
	add_to_variable = { KOM_tabby_time_progress = 10 }
}
KOM_tabby_ticker_forward_15 = {
	custom_effect_tooltip = KOM_tabby_ticker_forward_tt
	add_to_variable = { KOM_tabby_time_progress = 15 }
}
KOM_tabby_ticker_forward_30 = {
	custom_effect_tooltip = KOM_tabby_ticker_forward_tt
	add_to_variable = { KOM_tabby_time_progress = 30 }
}
KOM_tabby_ticker_forward_40 = {
	custom_effect_tooltip = KOM_tabby_ticker_forward_tt
	add_to_variable = { KOM_tabby_time_progress = 40 }
}
KOM_tabby_ticker_forward_45 = {
	custom_effect_tooltip = KOM_tabby_ticker_forward_tt
	add_to_variable = { KOM_tabby_time_progress = 45 }
}
KOM_tabby_ticker_backward_5 = {
	custom_effect_tooltip = KOM_tabby_ticker_backward_tt
	add_to_variable = { KOM_tabby_time_progress = -5 }
}
KOM_tabby_ticker_backward_10 = {
	custom_effect_tooltip = KOM_tabby_ticker_backward_tt
	add_to_variable = { KOM_tabby_time_progress = -10 }
}
KOM_tabby_ticker_backward_15 = {
	custom_effect_tooltip = KOM_tabby_ticker_backward_tt
	add_to_variable = { KOM_tabby_time_progress = -15 }
}
KOM_tabby_ticker_backward_30 = {
	custom_effect_tooltip = KOM_tabby_ticker_backward_tt
	add_to_variable = { KOM_tabby_time_progress = -30 }
}
KOM_tabby_ticker_backward_40 = {
	custom_effect_tooltip = KOM_tabby_ticker_backward_tt
	add_to_variable = { KOM_tabby_time_progress = -40 }
}
KOM_tabby_ticker_backward_45 = {
	custom_effect_tooltip = KOM_tabby_ticker_backward_tt
	add_to_variable = { KOM_tabby_time_progress = -45 }
}

KOM_tabby_fire_journal_event = {
	set_temp_variable = { KOM_tabby_time_event_temp = KOM_tabby_time_hours }
	add_to_temp_variable = { KOM_tabby_time_event_temp = 2 }
	clamp_temp_variable = { var = KOM_tabby_time_event_temp min = 4 max = 26 }
	meta_effect = {
		text = {
			country_event = {
				id = komi_clockworks.[getTimeEvent]
				hours = 1
			}
		}
		getTimeEvent = "[?KOM_tabby_time_event_temp]"
	}
}

KOM_Ordosocialist_Increase_Left = {
	add_popularity = {
		ideology = communist
		popularity = 0.025
	}
	if = {
		limit = {
			has_idea = KOM_ordosocialist_party_left
		}
		remove_ideas = KOM_ordosocialist_party_left
		add_ideas = KOM_ordosocialist_party_far_left
		add_to_variable = { KOMOrdosocialistLean = 1 }
	}
	else_if = {
		limit = {
			has_idea = KOM_ordosocialist_party_left_lean
		}
		remove_ideas = KOM_ordosocialist_party_left_lean
		add_ideas = KOM_ordosocialist_party_left
		add_to_variable = { KOMOrdosocialistLean = 1 }
	}
	else_if = {
		limit = {
			has_idea = KOM_ordosocialist_party_center
		}
		remove_ideas = KOM_ordosocialist_party_center
		add_ideas = KOM_ordosocialist_party_left_lean
		add_to_variable = { KOMOrdosocialistLean = 1 }
	}
	else_if = {
		limit = {
			has_idea = KOM_ordosocialist_party_right_lean
		}
		remove_ideas = KOM_ordosocialist_party_right_lean
		add_ideas = KOM_ordosocialist_party_center
		add_to_variable = { KOMOrdosocialistLean = 1 }
	}
	else_if = {
		limit = {
			has_idea = KOM_ordosocialist_party_right
		}
		remove_ideas = KOM_ordosocialist_party_right
		add_ideas = KOM_ordosocialist_party_right_lean
		add_to_variable = { KOMOrdosocialistLean = 1 }
	}
	else_if = {
		limit = {
			has_idea = KOM_ordosocialist_party_far_right
		}
		remove_ideas = KOM_ordosocialist_party_far_right
		add_ideas = KOM_ordosocialist_party_right
		add_to_variable = { KOMOrdosocialistLean = 1 }
	}
}

KOM_Ordosocialist_Increase_Right = {
	add_popularity = {
		ideology = fascism
		popularity = 0.025
	}
	if = {
		limit = {
			has_idea = KOM_ordosocialist_party_right
		}
		remove_ideas = KOM_ordosocialist_party_right
		add_ideas = KOM_ordosocialist_party_far_right
		add_to_variable = { KOMOrdosocialistLean = -1 }
	}
	else_if = {
		limit = {
			has_idea = KOM_ordosocialist_party_right_lean
		}
		remove_ideas = KOM_ordosocialist_party_right_lean
		add_ideas = KOM_ordosocialist_party_right
		add_to_variable = { KOMOrdosocialistLean = -1 }
	}
	else_if = {
		limit = {
			has_idea = KOM_ordosocialist_party_center
		}
		remove_ideas = KOM_ordosocialist_party_center
		add_ideas = KOM_ordosocialist_party_right_lean
		add_to_variable = { KOMOrdosocialistLean = -1 }
	}
	else_if = {
		limit = {
			has_idea = KOM_ordosocialist_party_left_lean
		}
		remove_ideas = KOM_ordosocialist_party_left_lean
		add_ideas = KOM_ordosocialist_party_center
		add_to_variable = { KOMOrdosocialistLean = -1 }
	}
	else_if = {
		limit = {
			has_idea = KOM_ordosocialist_party_left
		}
		remove_ideas = KOM_ordosocialist_party_left
		add_ideas = KOM_ordosocialist_party_left_lean
		add_to_variable = { KOMOrdosocialistLean = -1 }
	}
	else_if = {
		limit = {
			has_idea = KOM_ordosocialist_party_far_left
		}
		remove_ideas = KOM_ordosocialist_party_far_left
		add_ideas = KOM_ordosocialist_party_left
		add_to_variable = { KOMOrdosocialistLean = -1 }
	}
}

###PSD Effects
KOM_PSD_empower_right_low = {
	custom_effect_tooltip = KOM_PSD_empower_right_low_tt
	add_to_variable = { KOM_PSD_leaning = -2 }
	add_to_variable = { KOM_PSD_right_power = 2 }
	subtract_from_variable = { KOM_PSD_left_power = 1 }
	subtract_from_variable = { KOM_PSD_unity = 1 }
}

KOM_PSD_empower_right_med = {
	custom_effect_tooltip = KOM_PSD_empower_right_med_tt
	add_to_variable = { KOM_PSD_leaning = -5 }
	add_to_variable = { KOM_PSD_right_power = 5 }
	subtract_from_variable = { KOM_PSD_left_power = 3 }
	subtract_from_variable = { KOM_PSD_unity = 3 }
}

KOM_PSD_empower_right_high = {
	custom_effect_tooltip = KOM_PSD_empower_right_high_tt
	add_to_variable = { KOM_PSD_leaning = -10 }
	add_to_variable = { KOM_PSD_right_power = 10 }
	subtract_from_variable = { KOM_PSD_left_power = 7 }
	subtract_from_variable = { KOM_PSD_unity = 5 }
}

KOM_PSD_empower_left_low = {
	custom_effect_tooltip = KOM_PSD_empower_left_low_tt
	add_to_variable = { KOM_PSD_leaning = 2 }
	add_to_variable = { KOM_PSD_left_power = 2 }
	subtract_from_variable = { KOM_PSD_right_power = 1 }
	subtract_from_variable = { KOM_PSD_unity = 1 }
}

KOM_PSD_empower_left_med = {
	custom_effect_tooltip = KOM_PSD_empower_left_med_tt
	add_to_variable = { KOM_PSD_leaning = 5 }
	add_to_variable = { KOM_PSD_left_power = 5 }
	subtract_from_variable = { KOM_PSD_right_power = 3 }
	subtract_from_variable = { KOM_PSD_unity = 3 }
}

KOM_PSD_empower_left_high = {
	custom_effect_tooltip = KOM_PSD_empower_left_high_tt
	add_to_variable = { KOM_PSD_leaning = 10 }
	add_to_variable = { KOM_PSD_left_power = 10 }
	subtract_from_variable = { KOM_PSD_right_power = 7 }
	subtract_from_variable = { KOM_PSD_unity = 5 }
}

KOM_PSD_increase_unity_low = {
	custom_effect_tooltip = KOM_PSD_increase_unity_low_tt
	add_to_variable = { KOM_PSD_unity = 2 }
}

KOM_PSD_increase_unity_med = {
	custom_effect_tooltip = KOM_PSD_increase_unity_med_tt
	add_to_variable = { KOM_PSD_unity = 5 }
}

KOM_PSD_increase_unity_high = {
	custom_effect_tooltip = KOM_PSD_increase_unity_high_tt
	add_to_variable = { KOM_PSD_unity = 10 }
}

KOM_PSD_decrease_unity_low = {
	custom_effect_tooltip = KOM_PSD_decrease_unity_low_tt
	subtract_from_variable = { KOM_PSD_unity = 2 }
}

KOM_PSD_decrease_unity_med = {
	custom_effect_tooltip = KOM_PSD_decrease_unity_med_tt
	subtract_from_variable = { KOM_PSD_unity = 5 }
}

KOM_PSD_decrease_unity_high = {
	custom_effect_tooltip = KOM_PSD_decrease_unity_high_tt
	subtract_from_variable = { KOM_PSD_unity = 10 }
}

### Eurasian Dream ###
KOM_eurasia_increase_legitimacy_5 = {
	custom_effect_tooltip = gummy_increase_legitimacy_5_tt
	add_to_variable = { KOMEurasiaLegitimacy = 5 }
	clamp_variable = { var = KOMEurasiaLegitimacy min = 0 max = 100 }
}

KOM_eurasia_increase_legitimacy_10 = {
	custom_effect_tooltip = gummy_increase_legitimacy_10_tt
	add_to_variable = { KOMEurasiaLegitimacy = 10 }
	clamp_variable = { var = KOMEurasiaLegitimacy min = 0 max = 100 }
}

KOM_eurasia_increase_legitimacy_15 = {
	custom_effect_tooltip = gummy_increase_legitimacy_15_tt
	add_to_variable = { KOMEurasiaLegitimacy = 15 }
	clamp_variable = { var = KOMEurasiaLegitimacy min = 0 max = 100 }
}

KOM_eurasia_increase_legitimacy_20 = {
	custom_effect_tooltip = gummy_increase_legitimacy_20_tt
	add_to_variable = { KOMEurasiaLegitimacy = 20 }
	clamp_variable = { var = KOMEurasiaLegitimacy min = 0 max = 100 }
}

KOM_eurasia_increase_legitimacy_40 = {
	custom_effect_tooltip = gummy_increase_legitimacy_40_tt
	add_to_variable = { KOMEurasiaLegitimacy = 40 }
	clamp_variable = { var = KOMEurasiaLegitimacy min = 0 max = 100 }
}

KOM_eurasia_decrease_legitimacy_5 = {
	custom_effect_tooltip = gummy_decrease_legitimacy_5_tt
	subtract_from_variable = { KOMEurasiaLegitimacy = 5 }
	clamp_variable = { var = KOMEurasiaLegitimacy min = 0 max = 100 }
}

KOM_eurasia_decrease_legitimacy_10 = {
	custom_effect_tooltip = gummy_decrease_legitimacy_10_tt
	subtract_from_variable = { KOMEurasiaLegitimacy = 10 }
	clamp_variable = { var = KOMEurasiaLegitimacy min = 0 max = 100 }
}

KOM_eurasia_decrease_legitimacy_15 = {
	custom_effect_tooltip = gummy_decrease_legitimacy_15_tt
	subtract_from_variable = { KOMEurasiaLegitimacy = 15 }
	clamp_variable = { var = KOMEurasiaLegitimacy min = 0 max = 100 }
}

KOM_eurasia_decrease_legitimacy_20 = {
	custom_effect_tooltip = gummy_decrease_legitimacy_20_tt
	subtract_from_variable = { KOMEurasiaLegitimacy = 20 }
	clamp_variable = { var = KOMEurasiaLegitimacy min = 0 max = 100 }
}

KOM_eurasia_decrease_legitimacy_40 = {
	custom_effect_tooltip = gummy_decrease_legitimacy_40_tt
	subtract_from_variable = { KOMEurasiaLegitimacy = 40 }
	clamp_variable = { var = KOMEurasiaLegitimacy min = 0 max = 100 }
}

## pacifica and john forgive me for what I must yabadadoo

#KOM_purity_check = {

#}

KOM_ultravisionary_culture_test = {
	random_owned_controlled_state = {
		set_variable = { nationality = 364 }
	}
	random_owned_controlled_state = {
		set_variable = { nationality = 364 }
	}
	random_owned_controlled_state = {
		set_variable = { nationality = 364 }
	}
	random_owned_controlled_state = {
		set_variable = { nationality = 364 }
	}
	random_owned_controlled_state = {
		set_variable = { nationality = 364 }
	}
	random_owned_controlled_state = {
		set_variable = { nationality = 364 }
	}
	random_owned_controlled_state = {
		set_variable = { nationality = 364 }
	}
	random_owned_controlled_state = {
		set_variable = { nationality = 364 }
	}
	random_owned_controlled_state = {
		set_variable = { nationality = 364 }
	}
	random_owned_controlled_state = {
		set_variable = { nationality = 364 }
	}
	random_owned_controlled_state = {
		set_variable = { nationality = 364 }
	}
}

#Event Generator
generate_party_dynamic_event = {
	meta_effect = {
		text = {
			country_event = {
				id = komi_dynamic_[KOMDynEventParty].[KOMDynEventID]
				hours = 3
			}
		}
		KOMDynEventParty = "[THIS.GetKOMDynEventParty]"
		KOMDynEventID = "[?dynamic_event_id_temp]"
	}
	log = "[GetDateText]: [Root.GetName]: Effect generate_party_dynamic_event - Event Fired - komi_dynamic_[GetKOMDynEventParty].[?dynamic_event_id_temp]"
}
