############
# Commands #
############

# Preface:
# If you wish to access the individual faction powers, use the following variables only:
# Kido -			JAP_Diet_Faction_Power^1
# Takagi -			JAP_Diet_Faction_Power^2
# Miki -			JAP_Diet_Faction_Power^3
# Ino/Ikeda -		JAP_Diet_Faction_Power^4
# Kaya -			JAP_Diet_Faction_Power^5
# DO NOT CHANGE THE SEATS MANUALLY, this system handles it much better.

### PRIME MINISTER ###

JAP_PM_increase_power_mini = {
	if = { 
		limit = { check_variable = { JAP_prime_minister = 4 } }
		JAP_Ino_increase_power_mini = yes
	}
	else_if = {
		limit = { check_variable = { JAP_prime_minister = 2 } }
		JAP_Takagi_increase_power_mini = yes
	}
	else_if = {
		limit = { check_variable = { JAP_prime_minister = 5 } }
		JAP_Kaya_increase_power_mini = yes
	}	
	else_if = {
		limit = { check_variable = { JAP_prime_minister = 1 } }
		JAP_Kido_increase_power_mini = yes
	}
}

JAP_PM_increase_power_small = {
	if = { 
		limit = { check_variable = { JAP_prime_minister = 4 } }
		JAP_Ino_increase_power_small = yes
	}
	else_if = {
		limit = { check_variable = { JAP_prime_minister = 2 } }
		JAP_Takagi_increase_power_small = yes
	}
	else_if = {
		limit = { check_variable = { JAP_prime_minister = 5 } }
		JAP_Kaya_increase_power_small = yes
	}
	else_if = {
		limit = { check_variable = { JAP_prime_minister = 1 } }
		JAP_Kido_increase_power_small = yes
	}
}

JAP_PM_increase_power_avg = {
	if = { 
		limit = { check_variable = { JAP_prime_minister = 4 } }
		JAP_Ino_increase_power_avg = yes
	}
	else_if = {
		limit = { check_variable = { JAP_prime_minister = 2 } }
		JAP_Takagi_increase_power_avg = yes
	}
	else_if = {
		limit = { check_variable = { JAP_prime_minister = 5 } }
		JAP_Kaya_increase_power_avg = yes
	}
	else_if = {
		limit = { check_variable = { JAP_prime_minister = 1 } }
		JAP_Kido_increase_power_avg = yes
	}
}

JAP_PM_increase_power_subst = {
	if = { 
		limit = { check_variable = { JAP_prime_minister = 4 } }
		JAP_Ino_increase_power_subst = yes
	}
	else_if = {
		limit = { check_variable = { JAP_prime_minister = 2 } }
		JAP_Takagi_increase_power_subst = yes
	}
	else_if = {
		limit = { check_variable = { JAP_prime_minister = 5 } }
		JAP_Kaya_increase_power_subst = yes
	}
	else_if = {
		limit = { check_variable = { JAP_prime_minister = 1 } }
		JAP_Kido_increase_power_subst = yes
	}
}

JAP_PM_increase_power_overwhel = {
	if = { 
		limit = { check_variable = { JAP_prime_minister = 4 } }
		JAP_Ino_increase_power_overwhel = yes
	}
	else_if = {
		limit = { check_variable = { JAP_prime_minister = 2 } }
		JAP_Takagi_increase_power_overwhel = yes
	}
	else_if = {
		limit = { check_variable = { JAP_prime_minister = 5 } }
		JAP_Kaya_increase_power_overwhel = yes
	}
	else_if = {
		limit = { check_variable = { JAP_prime_minister = 1 } }
		JAP_Kido_increase_power_overwhel = yes
	}
}

JAP_PM_decrease_power_mini = {
	if = { 
		limit = { check_variable = { JAP_prime_minister = 4 } }
		JAP_Ino_decrease_power_mini = yes
	}
	else_if = {
		limit = { check_variable = { JAP_prime_minister = 2 } }
		JAP_Takagi_decrease_power_mini = yes
	}
	else_if = {
		limit = { check_variable = { JAP_prime_minister = 5 } }
		JAP_Kaya_decrease_power_mini = yes
	}	
	else_if = {
		limit = { check_variable = { JAP_prime_minister = 1 } }
		JAP_Kido_decrease_power_mini = yes
	}
}

JAP_PM_decrease_power_small = {
	if = { 
		limit = { check_variable = { JAP_prime_minister = 4 } }
		JAP_Ino_decrease_power_small = yes
	}
	else_if = {
		limit = { check_variable = { JAP_prime_minister = 2 } }
		JAP_Takagi_decrease_power_small = yes
	}
	else_if = {
		limit = { check_variable = { JAP_prime_minister = 5 } }
		JAP_Kaya_decrease_power_small = yes
	}
	else_if = {
		limit = { check_variable = { JAP_prime_minister = 1 } }
		JAP_Kido_decrease_power_small = yes
	}
}

JAP_PM_decrease_power_avg = {
	if = { 
		limit = { check_variable = { JAP_prime_minister = 4 } }
		JAP_Ino_decrease_power_avg = yes
	}
	else_if = {
		limit = { check_variable = { JAP_prime_minister = 2 } }
		JAP_Takagi_decrease_power_avg = yes
	}
	else_if = {
		limit = { check_variable = { JAP_prime_minister = 5 } }
		JAP_Kaya_decrease_power_avg = yes
	}
	else_if = {
		limit = { check_variable = { JAP_prime_minister = 1 } }
		JAP_Kido_decrease_power_avg = yes
	}
}

JAP_PM_decrease_power_subst = {
	if = { 
		limit = { check_variable = { JAP_prime_minister = 4 } }
		JAP_Ino_decrease_power_subst = yes
	}
	else_if = {
		limit = { check_variable = { JAP_prime_minister = 2 } }
		JAP_Takagi_decrease_power_subst = yes
	}
	else_if = {
		limit = { check_variable = { JAP_prime_minister = 5 } }
		JAP_Kaya_decrease_power_subst = yes
	}
	else_if = {
		limit = { check_variable = { JAP_prime_minister = 1 } }
		JAP_Kido_decrease_power_subst = yes
	}
}

JAP_PM_decrease_power_overwhel = {
	if = { 
		limit = { check_variable = { JAP_prime_minister = 4 } }
		JAP_Ino_decrease_power_overwhel = yes
	}
	else_if = {
		limit = { check_variable = { JAP_prime_minister = 2 } }
		JAP_Takagi_decrease_power_overwhel = yes
	}
	else_if = {
		limit = { check_variable = { JAP_prime_minister = 5 } }
		JAP_Kaya_decrease_power_overwhel = yes
	}
	else_if = {
		limit = { check_variable = { JAP_prime_minister = 1 } }
		JAP_Kido_decrease_power_overwhel = yes
	}
}

#### KIDO ####
JAP_Kido_change_power = {
	if = {
		limit = {
			check_variable = { JAP_Requested_Power_Change > 0 }
			check_variable = { JAP_Diet_Faction_Power^1 > 0.75 }
		}
		custom_effect_tooltip = Kido_too_powerful
	}
	else_if = {
		limit = {
			check_variable = { JAP_Requested_Power_Change < 0 }
			check_variable = { JAP_Diet_Faction_Power^1 < 0.025 }
		}
		custom_effect_tooltip = Kido_too_weak
	}
	else = {
		set_variable = { JAP_power_change = JAP_Requested_Power_Change }
		set_country_flag = JAP_Kido_power_change
		set_temp_variable = { PowerChangeFaction = 1 }
		JAP_diet_factions_power_effect = yes
	}
}

JAP_Kido_increase_power_mini = {
	set_temp_variable = { JAP_Requested_Power_Change = 0.01 }
	custom_effect_tooltip = Kido_increase_mini
	JAP_Kido_change_power = yes
}

JAP_Kido_increase_power_small = {
	set_temp_variable = { JAP_Requested_Power_Change = 0.025 }
	custom_effect_tooltip = Kido_increase_small
	JAP_Kido_change_power = yes
}

JAP_Kido_increase_power_avg = {
	set_temp_variable = { JAP_Requested_Power_Change = 0.05 }
	custom_effect_tooltip = Kido_increase_avg
	JAP_Kido_change_power = yes
}

JAP_Kido_increase_power_subst = {
	set_temp_variable = { JAP_Requested_Power_Change = 0.075 }
	custom_effect_tooltip = Kido_increase_subst
	JAP_Kido_change_power = yes
}

JAP_Kido_increase_power_overwhel = {
	set_temp_variable = { JAP_Requested_Power_Change = 0.1 }
	custom_effect_tooltip = Kido_increase_overwhel
	JAP_Kido_change_power = yes
}

JAP_Kido_decrease_power_mini = {
	set_temp_variable = { JAP_Requested_Power_Change = -0.01 }
	custom_effect_tooltip = Kido_decrease_mini
	JAP_Kido_change_power = yes
}

JAP_Kido_decrease_power_small = {
	set_temp_variable = { JAP_Requested_Power_Change = -0.025 }
	custom_effect_tooltip = Kido_decrease_small
	JAP_Kido_change_power = yes
}

JAP_Kido_decrease_power_avg = {
	set_temp_variable = { JAP_Requested_Power_Change = -0.05 }
	custom_effect_tooltip = Kido_decrease_avg
	JAP_Kido_change_power = yes
}

JAP_Kido_decrease_power_subst = {
	set_temp_variable = { JAP_Requested_Power_Change = -0.075 }
	custom_effect_tooltip = Kido_decrease_subst
	JAP_Kido_change_power = yes
}

JAP_Kido_decrease_power_overwhel = {
	set_temp_variable = { JAP_Requested_Power_Change = -0.1 }
	custom_effect_tooltip = Kido_decrease_overwhel
	JAP_Kido_change_power = yes
}

#### TAKAGI ####
JAP_Takagi_change_power = {
	if = {
		limit = {
			check_variable = { JAP_Requested_Power_Change > 0 }
			check_variable = { JAP_Diet_Faction_Power^2 > 0.75 }
		}
		custom_effect_tooltip = Takagi_too_powerful
	}
	else_if = {
		limit = {
			check_variable = { JAP_Requested_Power_Change < 0 }
			check_variable = { JAP_Diet_Faction_Power^2 < 0.025 }
		}
		custom_effect_tooltip = Takagi_too_weak
	}
	else = {
		set_variable = { JAP_power_change = JAP_Requested_Power_Change }
		set_country_flag = JAP_Takagi_power_change
		set_temp_variable = { PowerChangeFaction = 2 }
		JAP_diet_factions_power_effect = yes
	}
}

JAP_Takagi_increase_power_mini = {
	set_temp_variable = { JAP_Requested_Power_Change = 0.01 }
	custom_effect_tooltip = Takagi_increase_mini
	JAP_Takagi_change_power = yes
}

JAP_Takagi_increase_power_small = {
	set_temp_variable = { JAP_Requested_Power_Change = 0.025 }
	custom_effect_tooltip = Takagi_increase_small
	JAP_Takagi_change_power = yes
}

JAP_Takagi_increase_power_avg = {
	set_temp_variable = { JAP_Requested_Power_Change = 0.05 }
	custom_effect_tooltip = Takagi_increase_avg
	JAP_Takagi_change_power = yes
}

JAP_Takagi_increase_power_subst = {
	set_temp_variable = { JAP_Requested_Power_Change = 0.075 }
	custom_effect_tooltip = Takagi_increase_subst
	JAP_Takagi_change_power = yes
}

JAP_Takagi_increase_power_overwhel = {
	set_temp_variable = { JAP_Requested_Power_Change = 0.1 }
	custom_effect_tooltip = Takagi_increase_overwhel
	JAP_Takagi_change_power = yes
}

JAP_Takagi_decrease_power_mini = {
	set_temp_variable = { JAP_Requested_Power_Change = -0.01 }
	custom_effect_tooltip = Takagi_decrease_mini
	JAP_Takagi_change_power = yes
}

JAP_Takagi_decrease_power_small = {
	set_temp_variable = { JAP_Requested_Power_Change = -0.025 }
	custom_effect_tooltip = Takagi_decrease_small
	JAP_Takagi_change_power = yes
}

JAP_Takagi_decrease_power_avg = {
	set_temp_variable = { JAP_Requested_Power_Change = -0.05 }
	custom_effect_tooltip = Takagi_decrease_avg
	JAP_Takagi_change_power = yes
}

JAP_Takagi_decrease_power_subst = {
	set_temp_variable = { JAP_Requested_Power_Change = -0.075 }
	custom_effect_tooltip = Takagi_decrease_subst
	JAP_Takagi_change_power = yes
}

JAP_Takagi_decrease_power_overwhel = {
	set_temp_variable = { JAP_Requested_Power_Change = -0.1 }
	custom_effect_tooltip = Takagi_decrease_overwhel
	JAP_Takagi_change_power = yes
}

#### MIKI ####
JAP_Miki_change_power = {
	if = {
		limit = {
			check_variable = { JAP_Requested_Power_Change > 0 }
			check_variable = { JAP_Diet_Faction_Power^3 > 0.75 }
		}
		custom_effect_tooltip = Miki_too_powerful
	}
	else_if = {
		limit = {
			check_variable = { JAP_Requested_Power_Change < 0 }
			check_variable = { JAP_Diet_Faction_Power^3 < 0.025 }
		}
		custom_effect_tooltip = Miki_too_weak
	}
	else = {
		set_variable = { JAP_power_change = JAP_Requested_Power_Change }
		set_country_flag = JAP_Miki_power_change
		set_temp_variable = { PowerChangeFaction = 3 }
		JAP_diet_factions_power_effect = yes
	}
}

JAP_Miki_increase_power_mini = {
	set_temp_variable = { JAP_Requested_Power_Change = 0.01 }
	custom_effect_tooltip = Miki_increase_mini
	JAP_Miki_change_power = yes
}

JAP_Miki_increase_power_small = {
	set_temp_variable = { JAP_Requested_Power_Change = 0.025 }
	custom_effect_tooltip = Miki_increase_small
	JAP_Miki_change_power = yes
}

JAP_Miki_increase_power_avg = {
	set_temp_variable = { JAP_Requested_Power_Change = 0.05 }
	custom_effect_tooltip = Miki_increase_avg
	JAP_Miki_change_power = yes
}

JAP_Miki_increase_power_subst = {
	set_temp_variable = { JAP_Requested_Power_Change = 0.075 }
	custom_effect_tooltip = Miki_increase_subst
	JAP_Miki_change_power = yes
}

JAP_Miki_increase_power_overwhel = {
	set_temp_variable = { JAP_Requested_Power_Change = 0.1 }
	custom_effect_tooltip = Miki_increase_overwhel
	JAP_Miki_change_power = yes
}

JAP_Miki_decrease_power_mini = {
	set_temp_variable = { JAP_Requested_Power_Change = -0.01 }
	custom_effect_tooltip = Miki_decrease_mini
	JAP_Miki_change_power = yes
}

JAP_Miki_decrease_power_small = {
	set_temp_variable = { JAP_Requested_Power_Change = -0.025 }
	custom_effect_tooltip = Miki_decrease_small
	JAP_Miki_change_power = yes
}

JAP_Miki_decrease_power_avg = {
	set_temp_variable = { JAP_Requested_Power_Change = -0.05 }
	custom_effect_tooltip = Miki_decrease_avg
	JAP_Miki_change_power = yes
}

JAP_Miki_decrease_power_subst = {
	set_temp_variable = { JAP_Requested_Power_Change = -0.075 }
	custom_effect_tooltip = Miki_decrease_subst
	JAP_Miki_change_power = yes
}

JAP_Miki_decrease_power_overwhel = {
	set_temp_variable = { JAP_Requested_Power_Change = -0.1 }
	custom_effect_tooltip = Miki_decrease_overwhel
	JAP_Miki_change_power = yes
}

#### INO/IKEDA ####
JAP_Ino_change_power = {
	if = {
		limit = {
			check_variable = { JAP_Requested_Power_Change > 0 }
			check_variable = { JAP_Diet_Faction_Power^4 > 0.75 }
		}
		custom_effect_tooltip = Ino_too_powerful
	}
	else_if = {
		limit = {
			check_variable = { JAP_Requested_Power_Change < 0 }
			check_variable = { JAP_Diet_Faction_Power^4 < 0.025 }
		}
		custom_effect_tooltip = Ino_too_weak
	}
	else = {
		set_variable = { JAP_power_change = JAP_Requested_Power_Change }
		set_country_flag = JAP_Ino_power_change
		set_temp_variable = { PowerChangeFaction = 4 }
		JAP_diet_factions_power_effect = yes
	}
}

JAP_Ino_increase_power_mini = {
	set_temp_variable = { JAP_Requested_Power_Change = 0.01 }
	custom_effect_tooltip = Ino_increase_mini
	JAP_Ino_change_power = yes
}

JAP_Ino_increase_power_small = {
	set_temp_variable = { JAP_Requested_Power_Change = 0.025 }
	custom_effect_tooltip = Ino_increase_small
	JAP_Ino_change_power = yes
}

JAP_Ino_increase_power_avg = {
	set_temp_variable = { JAP_Requested_Power_Change = 0.05 }
	custom_effect_tooltip = Ino_increase_avg
	JAP_Ino_change_power = yes
}

JAP_Ino_increase_power_subst = {
	set_temp_variable = { JAP_Requested_Power_Change = 0.075 }
	custom_effect_tooltip = Ino_increase_subst
	JAP_Ino_change_power = yes
}

JAP_Ino_increase_power_overwhel = {
	set_temp_variable = { JAP_Requested_Power_Change = 0.1 }
	custom_effect_tooltip = Ino_increase_overwhel
	JAP_Ino_change_power = yes
}

JAP_Ino_decrease_power_mini = {
	set_temp_variable = { JAP_Requested_Power_Change = -0.01 }
	custom_effect_tooltip = Ino_decrease_mini
	JAP_Ino_change_power = yes
}

JAP_Ino_decrease_power_small = {
	set_temp_variable = { JAP_Requested_Power_Change = -0.025 }
	custom_effect_tooltip = Ino_decrease_small
	JAP_Ino_change_power = yes
}

JAP_Ino_decrease_power_avg = {
	set_temp_variable = { JAP_Requested_Power_Change = -0.05 }
	custom_effect_tooltip = Ino_decrease_avg
	JAP_Ino_change_power = yes
}

JAP_Ino_decrease_power_subst = {
	set_temp_variable = { JAP_Requested_Power_Change = -0.075 }
	custom_effect_tooltip = Ino_decrease_subst
	JAP_Ino_change_power = yes
}

JAP_Ino_decrease_power_overwhel = {
	set_temp_variable = { JAP_Requested_Power_Change = -0.1 }
	custom_effect_tooltip = Ino_decrease_overwhel
	JAP_Ino_change_power = yes
}

#### KAYA ####
JAP_Kaya_change_power = {
	if = {
		limit = {
			check_variable = { JAP_Requested_Power_Change > 0 }
			check_variable = { JAP_Diet_Faction_Power^5 > 0.75 }
		}
		custom_effect_tooltip = Kaya_too_powerful
	}
	else_if = {
		limit = {
			check_variable = { JAP_Requested_Power_Change < 0 }
			check_variable = { JAP_Diet_Faction_Power^5 < 0.025 }
		}
		custom_effect_tooltip = Kaya_too_weak
	}
	else = {
		set_variable = { JAP_power_change = JAP_Requested_Power_Change }
		set_country_flag = JAP_Kaya_power_change
		set_temp_variable = { PowerChangeFaction = 5 }
		JAP_diet_factions_power_effect = yes
	}
}

JAP_Kaya_increase_power_mini = {
	set_temp_variable = { JAP_Requested_Power_Change = 0.01 }
	custom_effect_tooltip = Kaya_increase_mini
	JAP_Kaya_change_power = yes
}

JAP_Kaya_increase_power_small = {
	set_temp_variable = { JAP_Requested_Power_Change = 0.025 }
	custom_effect_tooltip = Kaya_increase_small
	JAP_Kaya_change_power = yes
}

JAP_Kaya_increase_power_avg = {
	set_temp_variable = { JAP_Requested_Power_Change = 0.05 }
	custom_effect_tooltip = Kaya_increase_avg
	JAP_Kaya_change_power = yes
}

JAP_Kaya_increase_power_subst = {
	set_temp_variable = { JAP_Requested_Power_Change = 0.075 }
	custom_effect_tooltip = Kaya_increase_subst
	JAP_Kaya_change_power = yes
}

JAP_Kaya_increase_power_overwhel = {
	set_temp_variable = { JAP_Requested_Power_Change = 0.1 }
	custom_effect_tooltip = Kaya_increase_overwhel
	JAP_Kaya_change_power = yes
}

JAP_Kaya_decrease_power_mini = {
	set_temp_variable = { JAP_Requested_Power_Change = -0.01 }
	custom_effect_tooltip = Kaya_decrease_mini
	JAP_Kaya_change_power = yes
}

JAP_Kaya_decrease_power_small = {
	set_temp_variable = { JAP_Requested_Power_Change = -0.025 }
	custom_effect_tooltip = Kaya_decrease_small
	JAP_Kaya_change_power = yes
}

JAP_Kaya_decrease_power_avg = {
	set_temp_variable = { JAP_Requested_Power_Change = -0.05 }
	custom_effect_tooltip = Kaya_decrease_avg
	JAP_Kaya_change_power = yes
}

JAP_Kaya_decrease_power_subst = {
	set_temp_variable = { JAP_Requested_Power_Change = -0.075 }
	custom_effect_tooltip = Kaya_decrease_subst
	JAP_Kaya_change_power = yes
}

JAP_Kaya_decrease_power_overwhel = {
	set_temp_variable = { JAP_Requested_Power_Change = -0.1 }
	custom_effect_tooltip = Kaya_decrease_overwhel
	JAP_Kaya_change_power = yes
}

#### HOUSE OF PEERS SUPPORT ####
# Increase
JAP_HoP_support_increase_small = {
	add_to_variable = { JAP_Peers_support = 0.025 }
	custom_effect_tooltip = JAP_Peers_support_increase_small
	clamp_variable = {
		var = JAP_Peers_support
		min = 0
		max = 1
	}
	JAP_calc_government_stability = yes
}

JAP_HoP_support_increase_med = {
	add_to_variable = { JAP_Peers_support = 0.05 }
	custom_effect_tooltip = JAP_Peers_support_increase_med
	clamp_variable = {
		var = JAP_Peers_support
		min = 0
		max = 1
	}
	JAP_calc_government_stability = yes
}

JAP_HoP_support_increase_big = {
	add_to_variable = { JAP_Peers_support = 0.1 }
	custom_effect_tooltip = JAP_Peers_support_increase_big
	clamp_variable = {
		var = JAP_Peers_support
		min = 0
		max = 1
	}
	JAP_calc_government_stability = yes
}

JAP_HoP_support_increase_huge = {
	add_to_variable = { JAP_Peers_support = 0.2 }
	custom_effect_tooltip = JAP_Peers_support_increase_huge
	clamp_variable = {
		var = JAP_Peers_support
		min = 0
		max = 1
	}
	JAP_calc_government_stability = yes
}

# Decrease
JAP_HoP_support_decrease_small = {
	subtract_from_variable = { JAP_Peers_support = 0.025 }
	custom_effect_tooltip = JAP_Peers_support_decrease_small
	clamp_variable = {
		var = JAP_Peers_support
		min = 0
		max = 1
	}
	JAP_calc_government_stability = yes
}

JAP_HoP_support_decrease_med = {
	subtract_from_variable = { JAP_Peers_support = 0.05 }
	custom_effect_tooltip = JAP_Peers_support_decrease_med
	clamp_variable = {
		var = JAP_Peers_support
		min = 0
		max = 1
	}
	JAP_calc_government_stability = yes
}

JAP_HoP_support_decrease_big = {
	subtract_from_variable = { JAP_Peers_support = 0.1 }
	custom_effect_tooltip = JAP_Peers_support_decrease_big
	clamp_variable = {
		var = JAP_Peers_support
		min = 0
		max = 1
	}
	JAP_calc_government_stability = yes
}

JAP_HoP_support_decrease_huge = {
	subtract_from_variable = { JAP_Peers_support = 0.2 }
	custom_effect_tooltip = JAP_Peers_support_decrease_huge
	clamp_variable = {
		var = JAP_Peers_support
		min = 0
		max = 1
	}
	JAP_calc_government_stability = yes
}

#### PUBLIC APPROVAL ####
# Increase
JAP_PA_support_increase_small = {
	add_to_variable = { JAP_Public_support = 0.025 }
	custom_effect_tooltip = JAP_Public_support_increase_small
	clamp_variable = {
		var = JAP_Public_support
		min = 0
		max = 1
	}
}

JAP_PA_support_increase_med = {
	add_to_variable = { JAP_Public_support = 0.05 }
	custom_effect_tooltip = JAP_Public_support_increase_med
	clamp_variable = {
		var = JAP_Public_support
		min = 0
		max = 1
	}
}

JAP_PA_support_increase_big = {
	add_to_variable = { JAP_Public_support = 0.1 }
	custom_effect_tooltip = JAP_Public_support_increase_big
	clamp_variable = {
		var = JAP_Public_support
		min = 0
		max = 1
	}
}

JAP_PA_support_increase_huge = {
	add_to_variable = { JAP_Public_support = 0.2 }
	custom_effect_tooltip = JAP_Public_support_increase_huge
	clamp_variable = {
		var = JAP_Public_support
		min = 0
		max = 1
	}
}

# Decrease
JAP_PA_support_decrease_small = {
	subtract_from_variable = { JAP_Public_support = 0.025 }
	custom_effect_tooltip = JAP_Public_support_decrease_small
	clamp_variable = {
		var = JAP_Public_support
		min = 0
		max = 1
	}
}

JAP_PA_support_decrease_med = {
	subtract_from_variable = { JAP_Public_support = 0.05 }
	custom_effect_tooltip = JAP_Public_support_decrease_med
	clamp_variable = {
		var = JAP_Public_support
		min = 0
		max = 1
	}
}

JAP_PA_support_decrease_big = {
	subtract_from_variable = { JAP_Public_support = 0.1 }
	custom_effect_tooltip = JAP_Public_support_decrease_big
	clamp_variable = {
		var = JAP_Public_support
		min = 0
		max = 1
	}
}

JAP_PA_support_decrease_huge = {
	subtract_from_variable = { JAP_Public_support = 0.2 }
	custom_effect_tooltip = JAP_Public_support_decrease_huge
	clamp_variable = {
		var = JAP_Public_support
		min = 0
		max = 1
	}
}

######### PRIME MINISTER SWITCHERS #########
#Use these whenever a prime minister is switched for another. Necessary for the GUI to work properly.

JAP_Takagi_PM_initialize = {
	for_each_loop = {
		array = JAP_Diet_Leadership
		value = status
		index = i

		if = {
			limit = {
				check_variable = { status = 2 }				#We're checking who the current PM is.
			}
			set_variable = { JAP_Diet_Leadership^i = 1 }		#And we set that poor sod to an opposition faction.

		}
	}
	set_variable = { JAP_Diet_Leadership^2 = 2 }				#Then, since we know Takagi's diet leadership index is 2, we set that to 2 to signify his status as being the government faction now.
	set_variable = { JAP_prime_minister = 2 }
	set_variable = { JAP_government_stability_base = 75 } #KD's Notes - Please tell me this unfucks the GUI
	JAP_New_PM_balance = yes
}

JAP_InoIkeda_PM_initialize = {
	for_each_loop = {
		array = JAP_Diet_Leadership
		value = status
		index = i

		if = {
			limit = {
				check_variable = { status = 2 }				#We're checking who the current PM is.
			}
			set_variable = { JAP_Diet_Leadership^i = 1 }		#And we set that poor sod to an opposition faction.

		}
	}
	set_variable = { JAP_Diet_Leadership^4 = 2 }				#Then, since we know Ino's/Ikeda's diet leadership index is 4, we set that to 2 to signify his status as being the government faction now.
	if = {
		limit = { JAP = { has_country_flag = JAP_Ino_deposed } } # Only want to balance Ikeda, Ino already has a majority at game start
		JAP_New_PM_balance = yes
	}
	set_variable = { JAP_prime_minister = 4 }
	set_variable = { JAP_government_stability_base = 75 }
}

JAP_Kaya_PM_initialize = {
	for_each_loop = {
		array = JAP_Diet_Leadership
		value = status
		index = i

		if = {
			limit = {
				check_variable = { status = 2 }				#We're checking who the current PM is.
			}
			set_variable = { JAP_Diet_Leadership^i = 1 }		#And we set that poor sod to an opposition faction.

		}
	}
	set_variable = { JAP_Diet_Leadership^5 = 2 }				#Then, since we know Kayas diet leadership index is 5, we set that to 2 to signify his status as being the government faction now.
	set_variable = { JAP_prime_minister = 5 }
	set_variable = { JAP_government_stability_base = 65 }
	JAP_New_PM_balance = yes
	JAP_hardliner_influence_check = yes
}

JAP_Shiina_PM_initalize = {
	for_each_loop = {
		array = JAP_Diet_Leadership
		value = status
		index = i

		if = {
			limit = {
				check_variable = { status = 2 }				#We're checking who the current PM is.
			}
			set_variable = { JAP_Diet_Leadership^i = 1 }		#And we set that poor sod to an opposition faction.

		}
	}
	set_variable = { JAP_Diet_Leadership^4 = 2 }				# Shiina used ^4 for the fascists
	set_variable = { JAP_prime_minister = 4 }

	set_variable = { tempTechnocrats = JAP_Diet_Faction_Power^5 }
	set_variable = { JAP_Diet_Faction_Power^5 = JAP_Diet_Faction_Power^4 }
	set_variable = { JAP_Diet_Faction_Power^4 = tempTechnocrats }
	JAP_diet_factions_power_updater = yes
}

JAP_Fukuda_PM_initalize = {
	for_each_loop = {
		array = JAP_Diet_Leadership
		value = status
		index = i

		if = {
			limit = {
				check_variable = { status = 2 }				#We're checking who the current PM is.
			}
			set_variable = { JAP_Diet_Leadership^i = 1 }		#And we set that poor sod to an opposition faction.

		}
	}
	set_variable = { JAP_Diet_Leadership^1 = 2 }				# Fukuda uses ^1 for the AuthDem
	set_variable = { JAP_prime_minister = 1 }

	set_variable = { tempTechnocrats = JAP_Diet_Faction_Power^5 }
	set_variable = { JAP_Diet_Faction_Power^5 = JAP_Diet_Faction_Power^1 }
	set_variable = { JAP_Diet_Faction_Power^1 = tempTechnocrats }
	JAP_diet_factions_power_updater = yes
}

# Hey, let's give the new PM a majority!
JAP_New_PM_balance = {
	log = "[GetDateText]: [Root.GetName]: JAP_New_PM_balance; Executing"
	for_each_loop = { # Find out who the current PM is
		array = JAP_Diet_Leadership
		value = status
		index = i

		if = {
			limit = {
				check_variable = { status = 2 }	# 2 is the value standing for the government leader, which we're looking for.
			}
			set_variable = { JAP_leader_i = i }	# We save the index where we found the government leader status.
		}
	}

	log = "[GetDateText]: [Root.GetName]: JAP_New_PM_balance; Current Leader's Power (Before Buff): [?JAP_Diet_faction_Power^JAP_leader_i]"
	# Perliminary work; Want to increase popularity just a little bit, but also note the majority wanted based on the new PM
	set_temp_variable = { tempWantedPercentage = 0.32 }
	if = {
		limit = { check_variable = { JAP_leader_i = 2 } } # Takagi
		JAP_Takagi_increase_power_avg = yes
	}
	else_if = {
		limit = { check_variable = { JAP_leader_i = 4 } } # Ino/Ikeda
		JAP_Ino_increase_power_avg = yes
	}
	else_if = {
		limit = { check_variable = { JAP_leader_i = 5 } } # Kaya
		JAP_Kaya_increase_power_avg = yes
	}

	# THIS IS BRUTALLY INEFFICIENT, PLUS I THINK IT CAUSES SOME ERRORS; FIX!!! #KD's Notes - Even more brutually inefficient but heeeeey
	log = "[GetDateText]: [Root.GetName]: JAP_New_PM_balance; Increased current Leader's power, now: [?JAP_Diet_faction_Power^JAP_leader_i]"
	while_loop_effect = {
		limit = { check_variable = { JAP_Diet_faction_Power^JAP_leader_i < tempWantedPercentage } }
		if = {
			limit = { check_variable = { JAP_leader_i = 2 } } # Takagi
			JAP_Takagi_increase_power_avg = yes
		}
		else_if = {
			limit = { check_variable = { JAP_leader_i = 4 } } # Ino/Ikeda
			JAP_Ino_increase_power_avg = yes
		}
		else_if = {
			limit = { check_variable = { JAP_leader_i = 5 } } # Kaya
			JAP_Kaya_increase_power_avg = yes
		}
		log = "[GetDateText]: [Root.GetName]: JAP_New_PM_balance; Increased current Leader's power, now: [?JAP_Diet_faction_Power^JAP_leader_i]"
	}
	log = "[GetDateText]: [Root.GetName]: JAP_New_PM_balance; Current Leader's Power (After Buff): [?JAP_Diet_faction_Power^JAP_leader_i]"

	# Only get the effects if you are ai now, you are a player, you can manage yourself
	if = {
		limit = { is_ai = yes }
		JAP_PA_support_increase_huge = yes
		JAP_HoP_support_increase_huge = yes
	}
	else_if = {
		limit = {
			check_variable = { JAP_leader_i = 5 }
		}
		set_variable = { JAP_Public_support = 0.35 }
	}

	JAP_calc_government_stability = yes
	JAP_calc_total_guarenteed_mps = yes
	
	log = "[GetDateText]: [Root.GetName]: JAP_New_PM_balance; Finished"
}

######## IJA/IJN/TENSION ########
JAP_IJA_increase_small = {
	add_to_variable = { JAP_IJA_support = 2.5 }
	custom_effect_tooltip = JAP_IJA_support_inc_small_tt
	JAP_IJAIJNTension_clamp = yes
}

JAP_IJA_increase_med = {
	add_to_variable = { JAP_IJA_support = 5 }
	custom_effect_tooltip = JAP_IJA_support_inc_med_tt
	JAP_IJAIJNTension_clamp = yes
}

JAP_IJA_increase_big = {
	add_to_variable = { JAP_IJA_support = 10 }
	custom_effect_tooltip = JAP_IJA_support_inc_big_tt
	JAP_IJAIJNTension_clamp = yes
}

JAP_IJA_decrease_small = {
	subtract_from_variable = { JAP_IJA_support = 2.5 }
	custom_effect_tooltip = JAP_IJA_support_dec_small_tt
	JAP_IJAIJNTension_clamp = yes
}

JAP_IJA_decrease_med = {
	subtract_from_variable = { JAP_IJA_support = 5 }
	custom_effect_tooltip = JAP_IJA_support_dec_med_tt
	JAP_IJAIJNTension_clamp = yes
}

JAP_IJA_decrease_big = {
	subtract_from_variable = { JAP_IJA_support = 10 }
	custom_effect_tooltip = JAP_IJA_support_dec_big_tt
	JAP_IJAIJNTension_clamp = yes
}

JAP_IJN_increase_small = {
	add_to_variable = { JAP_IJN_support = 2.5 }
	custom_effect_tooltip = JAP_IJN_support_inc_small_tt
	JAP_IJAIJNTension_clamp = yes
}

JAP_IJN_increase_med = {
	add_to_variable = { JAP_IJN_support = 5 }
	custom_effect_tooltip = JAP_IJN_support_inc_med_tt
	JAP_IJAIJNTension_clamp = yes
}

JAP_IJN_increase_big = {
	add_to_variable = { JAP_IJN_support = 10 }
	custom_effect_tooltip = JAP_IJN_support_inc_big_tt
	JAP_IJAIJNTension_clamp = yes
}

JAP_IJN_decrease_small = {
	subtract_from_variable = { JAP_IJN_support = 2.5 }
	custom_effect_tooltip = JAP_IJN_support_dec_small_tt
	JAP_IJAIJNTension_clamp = yes
}

JAP_IJN_decrease_med = {
	subtract_from_variable = { JAP_IJN_support = 5 }
	custom_effect_tooltip = JAP_IJN_support_dec_med_tt
	JAP_IJAIJNTension_clamp = yes
}

JAP_IJN_decrease_big = {
	subtract_from_variable = { JAP_IJN_support = 10 }
	custom_effect_tooltip = JAP_IJN_support_dec_big_tt
	JAP_IJAIJNTension_clamp = yes
}

JAP_Tension_increase_small = {
	add_to_variable = { JAP_Tension = 2.5 }
	custom_effect_tooltip = JAP_Tension_inc_small_tt
	JAP_IJAIJNTension_clamp = yes
}

JAP_Tension_increase_med = {
	add_to_variable = { JAP_Tension = 5 }
	custom_effect_tooltip = JAP_Tension_inc_med_tt
	JAP_IJAIJNTension_clamp = yes
}

JAP_Tension_increase_big = {
	add_to_variable = { JAP_Tension = 10 }
	custom_effect_tooltip = JAP_Tension_inc_big_tt
	JAP_IJAIJNTension_clamp = yes
}

JAP_Tension_decrease_small = {
	subtract_from_variable = { JAP_Tension = 2.5 }
	custom_effect_tooltip = JAP_Tension_dec_small_tt
	JAP_IJAIJNTension_clamp = yes
}

JAP_Tension_decrease_med = {
	subtract_from_variable = { JAP_Tension = 5 }
	custom_effect_tooltip = JAP_Tension_dec_med_tt
	JAP_IJAIJNTension_clamp = yes
}

JAP_Tension_decrease_big = {
	subtract_from_variable = { JAP_Tension = 10 }
	custom_effect_tooltip = JAP_Tension_dec_big_tt
	JAP_IJAIJNTension_clamp = yes
}


##########
# Pulses #
##########
JAP_diet_monthly_pulse = {
	JAP_diet_pop_wheel_translator = yes
	JAP_HoP_monthly_pulse = yes
	JAP_IJAIJN_check_balance = yes
	JAP_diet_check_plurality = yes
}

#################
# Military Code #
#################

#The entire goal of this little "system" is going to be tracking three variables:
# JAP_IJA_support
# JAP_IJN_support
# JAP_Tension

JAP_IJAIJN_check_balance = {
	log = "[GetDateText]: [Root.GetName]: JAP_IJAIJN_check_balance; Executing"

	clamp_variable = {
		var = JAP_IJA_support
		min = 0
		max = 100
	}
	if = {
		limit = {
			check_variable = { JAP_IJA_support < 30 }
			OR = {
				has_game_rule = {
					rule = JAP_GOVERNMENT_STABILITY
					option = JAP_GOVERNMENT_STABILITY_STABLE
				}
				AND = {
					has_game_rule = {
						rule = JAP_GOVERNMENT_STABILITY
						option = JAP_GOVERNMENT_STABILITY_COLLAPSE
					}
					NOT = {
						has_country_flag = JAP_resignation_has_happened
					}
					OR = {
						AND = {
							has_country_flag = JAP_Ikeda_Prime_Minister
							NOT = {
								AND = {
									has_completed_focus = JAP_ikeda_reconstruction_as_good_as_new
									check_variable = { JAP_bill_id = 0 }
								}
							}
						}
						AND = {
							has_country_flag = JAP_Takagi_Prime_Minister
							NOT = {
								AND = {
									has_country_flag = JAP_Takagi_ending_one
									OR = {
										has_country_flag = JAP_Takagi_ending_two
										AND = {
											has_completed_focus = JAP_TakagiRecon_Present_To_The_Diet
											NOT = {
												has_country_flag = JAP_north_borneo_bill_passed
											}
										}
									}
									has_country_flag = JAP_Takagi_ending_three
									OR = {
										has_completed_focus = JAP_TakagiRecon_The_Triumph_Of_Enterprise
										has_completed_focus = JAP_TakagiRecon_Triumph_Of_Moderation
									}
									has_completed_focus = JAP_TakagiRecon_Japanisation_Continues
									has_completed_focus = JAP_TakagiRecon_A_Soft_Victory
									has_completed_focus = JAP_TakagiRecon_The_Steel_Sun_Rises
									check_variable = { JAP_bill_id = 0 }
								}
							}
						}
						AND = {
							check_variable = { JAP_prime_minister = 5 }
							OR = {
								AND = {
									has_game_rule = {
										rule = JAP_KAYA_SUCCESSOR
										option = JAP_KAYA_SUCCESSOR_NONE
									}
									NOT = {
										has_country_flag = JAP_Kaya_ending
									}
								}
								has_game_rule = {
									rule = JAP_KAYA_SUCCESSOR
									option = JAP_KAYA_SUCCESSOR_FUKUDA
								}
								has_game_rule = {
									rule = JAP_KAYA_SUCCESSOR
									option = JAP_KAYA_SUCCESSOR_SHIINA
								}
							}
						}
					}
				}
			}
		}
		set_variable = { JAP_IJA_support = 30 }
	}
	clamp_variable = {
		var = JAP_IJN_support
		min = 0
		max = 100
	}
	if = {
		limit = {
			check_variable = { JAP_IJN_support < 30 }
			OR = {
				has_game_rule = {
					rule = JAP_GOVERNMENT_STABILITY
					option = JAP_GOVERNMENT_STABILITY_STABLE
				}
				AND = {
					has_game_rule = {
						rule = JAP_GOVERNMENT_STABILITY
						option = JAP_GOVERNMENT_STABILITY_COLLAPSE
					}
					NOT = {
						has_country_flag = JAP_resignation_has_happened
					}
					OR = {
						AND = {
							has_country_flag = JAP_Ikeda_Prime_Minister
							NOT = {
								AND = {
									has_completed_focus = JAP_ikeda_reconstruction_as_good_as_new
									check_variable = { JAP_bill_id = 0 }
								}
							}
						}
						AND = {
							has_country_flag = JAP_Takagi_Prime_Minister
							NOT = {
								AND = {
									has_country_flag = JAP_Takagi_ending_one
									OR = {
										has_country_flag = JAP_Takagi_ending_two
										AND = {
											has_completed_focus = JAP_TakagiRecon_Present_To_The_Diet
											NOT = {
												has_country_flag = JAP_north_borneo_bill_passed
											}
										}
									}
									has_country_flag = JAP_Takagi_ending_three
									OR = {
										has_completed_focus = JAP_TakagiRecon_The_Triumph_Of_Enterprise
										has_completed_focus = JAP_TakagiRecon_Triumph_Of_Moderation
									}
									has_completed_focus = JAP_TakagiRecon_Japanisation_Continues
									has_completed_focus = JAP_TakagiRecon_A_Soft_Victory
									has_completed_focus = JAP_TakagiRecon_The_Steel_Sun_Rises
									check_variable = { JAP_bill_id = 0 }
								}
							}
						}
						AND = {
							check_variable = { JAP_prime_minister = 5 }
							OR = {
								AND = {
									has_game_rule = {
										rule = JAP_KAYA_SUCCESSOR
										option = JAP_KAYA_SUCCESSOR_NONE
									}
									NOT = {
										has_country_flag = JAP_Kaya_ending
									}
								}
								has_game_rule = {
									rule = JAP_KAYA_SUCCESSOR
									option = JAP_KAYA_SUCCESSOR_FUKUDA
								}
								has_game_rule = {
									rule = JAP_KAYA_SUCCESSOR
									option = JAP_KAYA_SUCCESSOR_SHIINA
								}
							}
						}
					}
				}
			}
		}
		set_variable = { JAP_IJN_support = 30 }
	}

	log = "[GetDateText]: [Root.GetName]: JAP_IJAIJN_check_balance; IJA Support [?JAP_IJA_support] IJN Support [?JAP_IJN_Support]"

	set_temp_variable = { tempIJA = JAP_IJA_support }
	set_temp_variable = { tempIJN = JAP_IJN_support }

	subtract_from_temp_variable = { tempIJA = tempIJN }

	set_variable = { JAP_Army_Balance = tempIJA }

	log = "[GetDateText]: [Root.GetName]: JAP_IJAIJN_check_balance; JAP Army Balance [?JAP_Army_Balance]"

	#Checking if the value is greater than 0.1 or -0.1

	if = {
		limit = {
			check_variable = { JAP_Army_Balance > 0 }				#If the difference is positive, we know that the IJA is the more powerful faction due to the equation being IJA Power - IJN Power.
			NOT = { check_variable = { JAP_Army_Balance < 0.1 } }	#Checking if the difference is at 0.1 or larger.
		}
		log = "[GetDateText]: [Root.GetName]: JAP_IJAIJN_check_balance; The IJA is more powerful."
		set_country_flag = JAP_tension_escalating
		divide_temp_variable = { tempIJA = 10 }
		log = "[GetDateText]: [Root.GetName]: JAP_IJAIJN_check_balance; Adding [?tempIJA] to Tension"
		add_to_variable = { JAP_Tension = tempIJA }				#Adding unto tension. Value is anything from 1-10.
		log = "[GetDateText]: [Root.GetName]: JAP_IJAIJN_check_balance; Tension post-addition [?JAP_Tension]"
	}
	else_if = {
		limit = {
			check_variable = { JAP_Army_Balance < 0 }				#If the difference is negative, we know that the IJN is the more powerful faction due to the equation being IJA Power - IJN Power.
			NOT = { check_variable = { JAP_Army_Balance > -0.1 } }
		}
		log = "[GetDateText]: [Root.GetName]: JAP_IJAIJN_check_balance; The IJN is more powerful."
		set_country_flag = JAP_tension_escalating
		multiply_temp_variable = { tempIJA = -1 }					#Making it positive for the rest of the equation to work well.
		divide_temp_variable = { tempIJA = 10 }
		log = "[GetDateText]: [Root.GetName]: JAP_IJAIJN_check_balance; Adding [?tempIJA] to Tension"
		add_to_variable = { JAP_Tension = tempIJA }
		log = "[GetDateText]: [Root.GetName]: JAP_IJAIJN_check_balance; Tension post-addition [?JAP_Tension]"
	}
	else = {
		clr_country_flag = JAP_tension_escalating
	}

	# Tension Balancing
	if = {
		limit = { 												# Monthly decrease in order for Tension to (hopefully) not spike up to 100
			NOT = { has_country_flag = JAP_dlc_investigation_activated } 
			check_variable = { JAP_Tension > 75 }
		}
		log = "[GetDateText]: [Root.GetName]: JAP_IJAIJN_check_balance; DLC is not going on, tension is high: [?JAP_Tension]. Let's all just calm down..."
		clr_country_flag = JAP_tension_escalating
		subtract_from_variable = { JAP_Tension = 10 }
		log = "[GetDateText]: [Root.GetName]: JAP_IJAIJN_check_balance; DLC is not going on, tension decreased, now [?JAP_Tension]."
	}
	else_if = {
		limit = {												# Tension spiked up for whatever reason, shove it back down
			NOT = { has_country_flag = JAP_dlc_investigation_activated } 
			check_variable = { JAP_Tension > 90 }
		}
		log = "[GetDateText]: [Root.GetName]: JAP_IJAIJN_check_balance; DLC is not going on, tension is at [?JAP_Tension]. Shove it down!"
		clr_country_flag = JAP_tension_escalating
		subtract_from_variable = { JAP_Tension = 50 }
		log = "[GetDateText]: [Root.GetName]: JAP_IJAIJN_check_balance; DLC is not going on, tension decreased, now [?JAP_Tension]."
	}

	# Gekokujo Events
	if = {
		limit = {
			has_country_flag = JAP_dlc_investigation_activated
			check_variable = {
				var = JAP_Tension
				value = 100
				compare = greater_than_or_equals
			}
			NOT = { has_variable = Jap_DLC_solved }
		}
		country_event = { id = japdlc.700 days = 1 }
	}

	# Government Collapse due to Low Support
	if = { #Navy Collapses
		limit = {
			check_variable = { JAP_IJN_support < 30 }	
		}
		#Takagi is buddy-buddy with the Navy and does not get a collapse from them
		if = { #Kaya
			limit = { has_country_flag = JAP_Kaya_Prime_Minister }
			country_event = { id = jap_acg.3 days = 1 }
		}
		else_if = { #Ikeda
			limit = { has_country_flag = JAP_Ikeda_Prime_Minister }
			country_event = { id = jap_acg.5 days = 1 }
		}
	}

	if = { #Army Collapses
		limit = {
			check_variable = { JAP_IJA_support < 30 }	
		}
		if = { #Takagi
			limit = { has_country_flag = JAP_Takagi_Prime_Minister }
			country_event = { id = jap_acg.1 days = 1 }
		}
		else_if = { #Kaya
			limit = { has_country_flag = JAP_Kaya_Prime_Minister }
			country_event = { id = jap_acg.2 days = 1 }
		}
		else_if = { #Ikeda
			limit = { has_country_flag = JAP_Ikeda_Prime_Minister }
			country_event = { id = jap_acg.4 days = 1 }
		}
	}

	log = "[GetDateText]: [Root.GetName]: JAP_IJAIJN_check_balance; completed execution."
}

JAP_IJAIJNTension_clamp = {
	clamp_variable = {
		var = JAP_IJA_support
		min = 0
		max = 100
	}
	clamp_variable = {
		var = JAP_IJN_support
		min = 0
		max = 100
	}
	clamp_variable = {
		var = JAP_Tension
		min = 0
		max = 100
	}
}

JAP_IJA_increase_budget = {
	add_to_variable = { JAP_IJA_support = 5 }
	subtract_from_variable = { JAP_IJN_support = 2.5 }
	add_to_variable = { JAP_Tension = 1.5 }
	JAP_IJAIJNTension_clamp = yes
}

JAP_IJA_promote_officers = {
	army_experience = -10
	add_to_variable = { JAP_IJA_support = 10 }
	subtract_from_variable = { JAP_IJN_support = 5 }
	add_to_variable = { JAP_Tension = 1.5 }
	JAP_IJAIJNTension_clamp = yes
}

JAP_IJA_demote_officers = {
	army_experience = -5
	subtract_from_variable = { JAP_IJA_support = 10 }
	add_to_variable = { JAP_IJN_support = 5 }
	add_to_variable = { JAP_Tension = 1.5 }
	JAP_IJAIJNTension_clamp = yes
}

JAP_IJA_decrease_budget = {
	subtract_from_variable = { JAP_IJA_support = 5 }
	add_to_variable = { JAP_IJN_support = 2.5 }
	add_to_variable = { JAP_Tension = 1.5 }
	JAP_IJAIJNTension_clamp = yes
}

JAP_IJN_increase_budget = {
	add_to_variable = { JAP_IJN_support = 5 }
	subtract_from_variable = { JAP_IJA_support = 2.5 }
	add_to_variable = { JAP_Tension = 1.5 }
	JAP_IJAIJNTension_clamp = yes
}

JAP_IJN_promote_officers = {
	navy_experience = -10
	add_to_variable = { JAP_IJN_support = 10 }
	subtract_from_variable = { JAP_IJA_support = 5 }
	add_to_variable = { JAP_Tension = 1.5 }
	JAP_IJAIJNTension_clamp = yes
}

JAP_IJN_demote_officers = {
	navy_experience = -5
	subtract_from_variable = { JAP_IJN_support = 10 }
	add_to_variable = { JAP_IJA_support = 5 }
	add_to_variable = { JAP_Tension = 1.5 }
	JAP_IJAIJNTension_clamp = yes
}

JAP_IJN_decrease_budget = {
	subtract_from_variable = { JAP_IJN_support = 5 }
	add_to_variable = { JAP_IJA_support = 2.5 }
	add_to_variable = { JAP_Tension = 1.5 }
	JAP_IJAIJNTension_clamp = yes
}

JAP_Tension_interservice_programs = {
	subtract_from_variable = { JAP_Tension = 5 }
	add_to_variable = { JAP_IJA_support = 2.5 }
	add_to_variable = { JAP_IJN_support = 2.5 }
	JAP_IJAIJNTension_clamp = yes
}

JAP_Tension_encourage_wargames = {
	subtract_from_variable = { JAP_Tension = 25 }
	add_to_variable = { JAP_IJA_support = 5 }
	add_to_variable = { JAP_IJN_support = 5 }
	JAP_IJAIJNTension_clamp = yes
}

JAP_Tension_remove_command_role = {
	subtract_from_variable = { JAP_Tension = 40 }
	subtract_from_variable = { JAP_IJA_support = 25 }
	subtract_from_variable = { JAP_IJN_support = 25 }
	JAP_IJAIJNTension_clamp = yes
}

JAP_Tension_fight_corruption = {
	subtract_from_variable = { JAP_Tension = 10 }
	subtract_from_variable = { JAP_IJA_support = 10 }
	subtract_from_variable = { JAP_IJN_support = 10 }
	JAP_IJAIJNTension_clamp = yes
}

##############
# Peers Code #
##############
JAP_HoP_support_check = { #This is to check whether the leading faction has lost its plurality, and the effects this causes on the House of Peer's opinion.
	log = "[GetDateText]: [Root.GetName]: JAP_HoP_support_check; Executing"

	#The general principle here is that we first try to find the leading faction's index and save it in the JAP_leader_i variable for later usage.

	# for_each_loop = {
	# 	array = JAP_Diet_Leadership
	# 	value = status
	# 	index = i

	# 	if = {
	# 		limit = {
	# 			check_variable = { status = 2 }	#2 is the value standing for the government leader, which we're looking for.
	# 		}
	# 		set_variable = { JAP_leader_i = i }	#We save the index where we found the government leader status.

	# 		log = "[GetDateText]: [Root.GetName]: JAP_HoP_support_check; JAP_Diet_Leadership array; JAP_leader_i [?JAP_leader_i]"
	# 	}
	# }

	# for_each_loop = {
	# 	array = JAP_Diet_Faction_Power
	# 	value = faction_power
	# 	index = i

	# 	if = {
	# 		limit = {
	# 			check_variable = { i > 0 }
	# 			check_variable = { i < 6 }
	# 			NOT = { check_variable = { i = JAP_leader_i } }
	# 		}

	# 		add_to_array = { JAP_opposition = faction_power }		#We create an array consisting of the factions in the opposition of the House of Representatives.

	# 	}
	# }

	# if = {
	# 	limit = {
	# 		OR = {
	# 			check_variable = { JAP_opposition^0 > JAP_Diet_Faction_Power^JAP_leader_i }	#If any of the opposition factions has become larger than the government faction, they're fucked.
	# 			check_variable = { JAP_opposition^1 > JAP_Diet_Faction_Power^JAP_leader_i }
	# 			check_variable = { JAP_opposition^2 > JAP_Diet_Faction_Power^JAP_leader_i }
	# 			check_variable = { JAP_opposition^3 > JAP_Diet_Faction_Power^JAP_leader_i }
	# 		}
	# 	}
	# 	set_country_flag = JAP_government_collapse	#We set the country flag to signal that the government is collapsing.

	# 	set_temp_variable = { tempPerc = 0.1 }
	# 	multiply_temp_variable = { tempPerc = JAP_Peers_support }
	# 	subtract_from_variable = { JAP_Peers_support = tempPerc }

	# 	clamp_variable = {
	# 		var = JAP_Peers_support
	# 		min = 0
	# 		max = 1
	# 	}

	# 	country_event = {							#This event is our ticker, and replaces the ticker function of JAP_HoP_monthly_pulse in this regard.
	# 		id = japdietgui.1
	# 		days = 7
	# 	}
	# }

	if = {
		limit = {
			any_of = {
				array = JAP_Diet_Faction_Power
				check_variable = { JAP_Diet_Faction_Power^i > JAP_Diet_Faction_Power^JAP_prime_minister }
			}
		}
		set_country_flag = JAP_government_collapse	#We set the country flag to signal that the government is collapsing.

		set_temp_variable = { tempPerc = 0.1 }
		multiply_temp_variable = { tempPerc = JAP_Peers_support }
		subtract_from_variable = { JAP_Peers_support = tempPerc }

		clamp_variable = {
			var = JAP_Peers_support
			min = 0
			max = 1
		}

		country_event = {							#This event is our ticker, and replaces the ticker function of JAP_HoP_monthly_pulse in this regard.
			id = japdietgui.1
			days = 7
		}
	}

	# clear_array = JAP_opposition
	# clear_variable = JAP_leader_i
	log = "[GetDateText]: [Root.GetName]: JAP_HoP_support_check; completed execution."
}

JAP_HoP_monthly_pulse = {
	#This is to make House of Peers support tank if the ruling faction falls below a plurality within the House of Representatives	
	if = {
		limit = {
			NOT = { has_country_flag = JAP_government_collapse }
			NOT = { check_variable = { JAP_resigning_pm > 0 } } # Both must be true, if a PM has already resigned it's back to normal
		}
		JAP_HoP_support_check = yes
	}

	#This is to check the political power growth and weekly stability boni you get from how big your public approval and HoP support are.

	##Public Approval##
	clamp_variable = {
		var = JAP_Public_support
		min = 0
		max = 1
	}
	if = {
		limit = {
			NOT = { check_variable = { JAP_Public_support < 0.3 } }	#If your public approval is at least 30%, things are okay.
		}
		set_temp_variable = { tempSupport = 1 }
		subtract_from_temp_variable = { tempSupport = JAP_Public_support }
		multiply_temp_variable = { tempSupport = 0.05 }
		divide_temp_variable = { tempSupport = 4 }
		set_variable = { JAP_Public_stab = tempSupport }
	}
	else_if = {
		limit = {
			check_variable = { JAP_Public_support < 0.3 }	#However, if it is below 0.3, bad things start to happen. You get negative weekly stability.
		}
		set_temp_variable = { tempSupport = 1 }
		subtract_from_temp_variable = { tempSupport = JAP_Public_support }
		multiply_temp_variable = { tempSupport = -0.25 }
		divide_temp_variable = { tempSupport = 2 }
		set_variable = { JAP_Public_stab = tempSupport }

		log = "[GetDateText]: [Root.GetName]: JAP_HoP_monthly_pulse; tempSupport [?tempSupport]"

		#Diet seats loss stuff

		set_variable = { JAP_power_change = tempSupport }
		set_country_flag = JAP_Diet_Public_Approval_Loss

		JAP_diet_factions_power_effect = yes
	}
	
	if = { # If either IJN or IJA become too weak you will begin to lose support. It's a bit rough but it works for now
		limit = {
			OR = {
				check_variable = { JAP_IJA_support < 20 }
				check_variable = { JAP_IJN_support < 20 }
			}
		}

		set_variable = { JAP_power_change = 0.2 }
		set_country_flag = JAP_Diet_Public_Approval_Loss
		JAP_diet_factions_power_effect = yes
	}

	##House of Peers Support##
	clamp_variable = {
		var = JAP_Peers_support
		min = 0
		max = 1
	}
	if = {
		limit = {
			NOT = { check_variable = { JAP_Peers_support < 0.5 } }	#If your HoP support is atleast 50%, things are okay.
		}
		set_temp_variable = { tempSupport = 0.75 }
		subtract_from_temp_variable = { tempSupport = JAP_Peers_support }
		multiply_temp_variable = { tempSupport = -0.1 }
		divide_temp_variable = { tempSupport = 2 }
		set_variable = { JAP_Peers_pp = tempSupport }
		
		if = {
		limit = { check_variable = { JAP_Peers_support > 0.65 } }
		add_to_variable = { JAP_government_stability_base = 0.25 }
		clamp_variable = { var = JAP_government_stability_base max = 100 }
		JAP_calc_government_stability = yes
		}
	}

	else = {	#Very bad things start to happen if you slip below 50%.

		# Modifier stuff
		set_temp_variable = { tempSupport = 0.75 }
		subtract_from_temp_variable = { tempSupport = JAP_Peers_support }
		multiply_temp_variable = { tempSupport = -0.1 }
		divide_temp_variable = { tempSupport = 2 }
		set_variable = { JAP_Peers_pp = tempSupport }

		subtract_from_variable = { JAP_government_stability_base = 1.5 }
		clamp_variable = { var = JAP_government_stability_base min = 0 }	
		JAP_calc_government_stability = yes	
	}

	
	if = {
		limit = {
			check_variable = { JAP_government_stability < 20 }
		}
		# Last chance to avoid a collapse. This time for realsies
		if = {
			limit = {
				NOT = {
					has_active_mission = JAP_government_collapse_mission
					has_country_flag = JAP_resignation_has_happened
				}
				OR = {
					has_country_flag = JAP_Ikeda_Prime_Minister
					has_country_flag = JAP_Takagi_Prime_Minister
					has_country_flag = JAP_Kaya_Prime_Minister
				}
			}
			activate_mission = JAP_government_collapse_mission

			if = {
				limit = { has_country_flag = JAP_Ikeda_Prime_Minister }
				country_event = { id = japresignation.1 }
			}
			else_if = {
				limit = { has_country_flag = JAP_Takagi_Prime_Minister }
				country_event = { id = japresignation.2 }
			}
			else_if = {
				limit = { has_country_flag = JAP_Kaya_Prime_Minister }
				country_event = { id = japresignation.3 }
			}
		}
	}
}

#########################################
# Representatives Factions Interactions #
#########################################

JAP_diet_action_1_effect = {

	# Kido
	if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 1 }
			NOT = { check_variable = { JAP_Diet_Leadership^1 = 2 } }
			check_variable = { JAP_Diet_Faction_Power^1 < JAP_Diet_Faction_Power^JAP_prime_minister }
		}
		jap_hop_support_Decrease_small = yes
		JAP_Kido_decrease_power_mini = yes
		custom_effect_tooltip = JAP_diet_decrease_action_less_effective_tt
	}
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 1 }
			NOT = { check_variable = { JAP_Diet_Leadership^1 = 2 } }
		}
		jap_hop_support_Decrease_small = yes
		JAP_Kido_decrease_power_small = yes
	}
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 1 }
			check_variable = { JAP_Diet_Leadership^1 = 2 }
			check_variable = { JAP_Diet_Faction_Power^1 > 0.5 }
		}
		jap_hop_support_Decrease_small = yes
		JAP_Kido_increase_power_mini = yes
		custom_effect_tooltip = JAP_diet_action_less_effective_tt
	}
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 1 }
			check_variable = { JAP_Diet_Leadership^1 = 2 }
		}
		jap_hop_support_Decrease_small = yes
		JAP_Kido_increase_power_small = yes
	}
	
	# Reformists
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 2 }
			NOT = { check_variable = { JAP_Diet_Leadership^2 = 2 } }
			check_variable = { JAP_Diet_Faction_Power^2 < JAP_Diet_Faction_Power^JAP_prime_minister }
		}
		jap_hop_support_Decrease_small = yes
		JAP_Takagi_decrease_power_mini = yes
		custom_effect_tooltip = JAP_diet_decrease_action_less_effective_tt
	}
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 2 }
			NOT = { check_variable = { JAP_Diet_Leadership^2 = 2 } }
		}
		jap_hop_support_Decrease_small = yes
		JAP_Takagi_decrease_power_small = yes
	}
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 2 }
			check_variable = { JAP_Diet_Leadership^2 = 2 }
			check_variable = { JAP_Diet_Faction_Power^2 > 0.5 }
		}
		jap_hop_support_Decrease_small = yes
		JAP_Takagi_increase_power_mini = yes
		custom_effect_tooltip = JAP_diet_action_less_effective_tt
	}
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 2 }
			check_variable = { JAP_Diet_Leadership^2 = 2 }
		}
		jap_hop_support_Decrease_small = yes
		JAP_Takagi_increase_power_small = yes
	}

	# Indeps
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 3 }
			NOT = { check_variable = { JAP_Diet_Leadership^3 = 2 } }
			check_variable = { JAP_Diet_Faction_Power^3 < JAP_Diet_Faction_Power^JAP_prime_minister }
		}
		jap_hop_support_Decrease_small = yes
		JAP_Miki_decrease_power_mini = yes
		custom_effect_tooltip = JAP_diet_decrease_action_less_effective_tt
	}
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 3 }
			NOT = { check_variable = { JAP_Diet_Leadership^3 = 2 } }
		}
		jap_hop_support_Decrease_small = yes
		JAP_Miki_decrease_power_small = yes
	}
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 3 }
			check_variable = { JAP_Diet_Leadership^3 = 2 }
			check_variable = { JAP_Diet_Faction_Power^3 > 0.5 }
		}
		jap_hop_support_Decrease_small = yes
		JAP_Miki_increase_power_mini = yes
		custom_effect_tooltip = JAP_diet_action_less_effective_tt
	}
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 3 }
			check_variable = { JAP_Diet_Leadership^3 = 2 }
		}
		jap_hop_support_Decrease_small = yes
		JAP_Miki_increase_power_small = yes
	}

	# Conservatives
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 4 }
			NOT = { check_variable = { JAP_Diet_Leadership^4 = 2 } }
			check_variable = { JAP_Diet_Faction_Power^4 < JAP_Diet_Faction_Power^JAP_prime_minister }
		}
		jap_hop_support_Decrease_small = yes
		JAP_Ino_decrease_power_mini = yes
		custom_effect_tooltip = JAP_diet_decrease_action_less_effective_tt
	}
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 4 }
			NOT = { check_variable = { JAP_Diet_Leadership^4 = 2 } }
		}
		jap_hop_support_Decrease_small = yes
		JAP_Ino_decrease_power_small = yes
	}
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 4 }
			check_variable = { JAP_Diet_Leadership^4 = 2 }
			check_variable = { JAP_Diet_Faction_Power^4 > 0.5 }
		}
		jap_hop_support_Decrease_small = yes
		JAP_Ino_increase_power_mini = yes
		custom_effect_tooltip = JAP_diet_action_less_effective_tt
	}
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 4 }
			check_variable = { JAP_Diet_Leadership^4 = 2 }
		}
		jap_hop_support_Decrease_small = yes
		JAP_Ino_increase_power_small = yes
	}

	# Technocrats
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 5 }
			NOT = { check_variable = { JAP_Diet_Leadership^5 = 2 } }
			check_variable = { JAP_Diet_Faction_Power^5 < JAP_Diet_Faction_Power^JAP_prime_minister }
		}
		jap_hop_support_Decrease_small = yes
		JAP_Kaya_decrease_power_mini = yes
		custom_effect_tooltip = JAP_diet_decrease_action_less_effective_tt
	}
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 5 }
			NOT = { check_variable = { JAP_Diet_Leadership^5 = 2 } }
		}
		jap_hop_support_Decrease_small = yes
		JAP_Kaya_decrease_power_small = yes
	}
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 5 }
			check_variable = { JAP_Diet_Leadership^5 = 2 }
			check_variable = { JAP_Diet_Faction_Power^5 > 0.5 }
		}
		jap_hop_support_Decrease_small = yes
		JAP_Kaya_increase_power_mini = yes
		custom_effect_tooltip = JAP_diet_action_less_effective_tt
	}
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 5 }
			check_variable = { JAP_Diet_Leadership^5 = 2 }
		}
		jap_hop_support_Decrease_small = yes
		JAP_Kaya_increase_power_small = yes
	}
	hidden_effect = {
		add_political_power = -25
	}
}

JAP_diet_action_2_effect = {

	# Kidoites
	if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 1 }
			NOT = { check_variable = { JAP_Diet_Leadership^1 = 2 } }
			check_variable = { JAP_Diet_Faction_Power^1 < JAP_Diet_Faction_Power^JAP_prime_minister }
		}
		JAP_PA_support_decrease_small = yes
		JAP_Kido_decrease_power_mini = yes
		custom_effect_tooltip = JAP_diet_decrease_action_less_effective_tt
	}
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 1 }
			NOT = { check_variable = { JAP_Diet_Leadership^1 = 2 } }
		}
		JAP_PA_support_decrease_small = yes
		JAP_Kido_decrease_power_small = yes
	}
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 1 }
			check_variable = { JAP_Diet_Leadership^1 = 2 }
			check_variable = { JAP_Diet_Faction_Power^1 > 0.5 }
		}
		JAP_PA_support_decrease_small = yes
		JAP_Kido_increase_power_mini = yes
		custom_effect_tooltip = JAP_diet_action_less_effective_tt
	}
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 1 }
			check_variable = { JAP_Diet_Leadership^1 = 2 }
		}
		JAP_PA_support_decrease_small = yes
		JAP_Kido_increase_power_small = yes
	}

	# Reformists
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 2 }
			NOT = { check_variable = { JAP_Diet_Leadership^2 = 2 } }
			check_variable = { JAP_Diet_Faction_Power^2 < JAP_Diet_Faction_Power^JAP_prime_minister }
		}
		JAP_PA_support_decrease_small = yes
		JAP_Takagi_decrease_power_mini = yes
		custom_effect_tooltip = JAP_diet_decrease_action_less_effective_tt
	}
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 2 }
			NOT = { check_variable = { JAP_Diet_Leadership^2 = 2 } }
		}
		JAP_PA_support_decrease_small = yes
		JAP_Takagi_decrease_power_small = yes
	}
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 2 }
			check_variable = { JAP_Diet_Leadership^2 = 2 }
			check_variable = { JAP_Diet_Faction_Power^2 > 0.5 }
		}
		JAP_PA_support_decrease_small = yes
		JAP_Takagi_increase_power_mini = yes
		custom_effect_tooltip = JAP_diet_action_less_effective_tt
	}
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 2 }
			check_variable = { JAP_Diet_Leadership^2 = 2 }
		}
		JAP_PA_support_decrease_small = yes
		JAP_Takagi_increase_power_small = yes
	}

	# Indeps
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 3 }
			NOT = { check_variable = { JAP_Diet_Leadership^3 = 2 } }
			check_variable = { JAP_Diet_Faction_Power^3 < JAP_Diet_Faction_Power^JAP_prime_minister }
		}
		JAP_PA_support_decrease_small = yes
		JAP_Miki_decrease_power_mini = yes
		custom_effect_tooltip = JAP_diet_decrease_action_less_effective_tt
	}
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 3 }
			NOT = { check_variable = { JAP_Diet_Leadership^3 = 2 } }
		}
		JAP_PA_support_decrease_small = yes
		JAP_Miki_decrease_power_small = yes
	}
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 3 }
			check_variable = { JAP_Diet_Leadership^3 = 2 }
			check_variable = { JAP_Diet_Faction_Power^3 > 0.5 }
		}
		JAP_PA_support_decrease_small = yes
		JAP_Miki_increase_power_mini = yes
		custom_effect_tooltip = JAP_diet_action_less_effective_tt
	}
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 3 }
			check_variable = { JAP_Diet_Leadership^3 = 2 }
		}
		JAP_PA_support_decrease_small = yes
		JAP_Miki_increase_power_small = yes
	}

	# Conservatives
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 4 }
			NOT = { check_variable = { JAP_Diet_Leadership^4 = 2 } }
			check_variable = { JAP_Diet_Faction_Power^4 < JAP_Diet_Faction_Power^JAP_prime_minister }
		}
		JAP_PA_support_decrease_small = yes
		JAP_Ino_decrease_power_mini = yes
		custom_effect_tooltip = JAP_diet_decrease_action_less_effective_tt
	}
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 4 }
			NOT = { check_variable = { JAP_Diet_Leadership^4 = 2 } }
		}
		JAP_PA_support_decrease_small = yes
		JAP_Ino_decrease_power_small = yes
	}
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 4 }
			check_variable = { JAP_Diet_Leadership^4 = 2 }
			check_variable = { JAP_Diet_Faction_Power^4 > 0.5 }
		}
		JAP_PA_support_decrease_small = yes
		JAP_Ino_increase_power_mini = yes
		custom_effect_tooltip = JAP_diet_action_less_effective_tt
	}
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 4 }
			check_variable = { JAP_Diet_Leadership^4 = 2 }
		}
		JAP_PA_support_decrease_small = yes
		JAP_Ino_increase_power_small = yes
	}

	# Technocrats
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 5 }
			NOT = { check_variable = { JAP_Diet_Leadership^5 = 2 } }
			check_variable = { JAP_Diet_Faction_Power^5 < JAP_Diet_Faction_Power^JAP_prime_minister }
		}
		JAP_PA_support_decrease_small = yes
		JAP_Kaya_decrease_power_mini = yes
		custom_effect_tooltip = JAP_diet_decrease_action_less_effective_tt
	}
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 5 }
			NOT = { check_variable = { JAP_Diet_Leadership^5 = 2 } }
		}
		JAP_PA_support_decrease_small = yes
		JAP_Kaya_decrease_power_small = yes
	}
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 5 }
			check_variable = { JAP_Diet_Leadership^5 = 2 }
			check_variable = { JAP_Diet_Faction_Power^5 > 0.5 }
		}
		JAP_PA_support_decrease_small = yes
		JAP_Kaya_increase_power_mini = yes
		custom_effect_tooltip = JAP_diet_action_less_effective_tt
	}
	else_if = {
		limit = {
			check_variable = { JAP_selected_diet_faction = 5 }
			check_variable = { JAP_Diet_Leadership^5 = 2 }
		}
		JAP_PA_support_decrease_small = yes
		JAP_Kaya_increase_power_small = yes
	}
	hidden_effect = {
		add_political_power = -25
	}
}

JAP_diet_action_3_effect = {
	add_political_power = -50
	set_temp_variable = { temp_econ_spending_amount = 0.005 }
	econ_spend_money_once_effect_raw_money = yes
	add_to_variable = { JAP_Peers_support = 0.03 }
	clamp_variable = {
		var = JAP_Peers_support
		min = 0
		max = 1
	}
	add_to_variable = { JAP_Public_support = 0.03 }
	clamp_variable = {
		var = JAP_Public_support
		min = 0
		max = 1
	}
}

########################
# Representatives Code #
########################

JAP_diet_check_plurality = {
	if = {
		limit = {
			any_of = {
				array = JAP_Diet_Faction_Power
				check_variable = { JAP_Diet_Faction_Power^i > JAP_Diet_Faction_Power^JAP_prime_minister }
			}
		}
		set_variable = { JAP_PM_has_pluarlity = 0 }
	}
	else = {
		set_variable = { JAP_PM_has_pluarlity = 1 }
	}
}

JAP_diet_pop_wheel_translator = {
	# Here we use the data from the Diet GUI to create and update Japan's party popularity wheel.
	set_temp_variable = { tempAuthDem = JAP_Diet_Faction_Power^1 }
	multiply_temp_variable = { tempAuthDem = 100 }
	set_temp_variable = { tempConDem = JAP_Diet_Faction_Power^2 }
	multiply_temp_variable = { tempConDem = 100 }
	set_temp_variable = { tempLibDem = JAP_Diet_Faction_Power^3 }
	multiply_temp_variable = { tempLibDem = 100 }
	set_temp_variable = { tempFascist = JAP_Diet_Faction_Power^4 }
	multiply_temp_variable = { tempFascist = 100 }
	set_temp_variable = { tempDespot = JAP_Diet_Faction_Power^5 }
	multiply_temp_variable = { tempDespot = 100 }

	hidden_effect = {
		if = { #Special case for Kaya
			limit = { has_country_flag = JAP_Kaya_Prime_Minister }

			if = { # Shiina
				limit = { has_country_flag = JAP_shiina_successor }
				set_temp_variable = { tempNatSoc = tempFascist }
				multiply_temp_variable = { tempNatSoc = 0.35 }
				subtract_from_temp_variable = { tempFascist = tempNatSoc }
			}

			else = { # Kaya or Fukuda
				set_temp_variable = { tempNatSoc = tempDespot }
				multiply_temp_variable = { tempNatSoc = JAP_hardliner_influence }
				subtract_from_temp_variable = { tempDespot = tempNatSoc }
			}

			set_popularities = {
				despotism = tempDespot
				paternalism = tempAuthDem
				conservatism = tempConDem
				fascism = tempFascist
				national_socialism = tempNatSoc
				liberalism = tempLibDem
			}
		}
		else_if = { # as long as you haven't failed DLC everything is normal
			limit = { NOT = { has_country_flag = JAP_dlc_failed } }
			set_popularities = {
				despotism = tempDespot
				paternalism = tempAuthDem
				conservatism = tempConDem
				fascism = tempFascist
				liberalism = tempLibDem
			}
		}
	}
}

JAP_diet_factions_power_effect = {	
	# This is only to facilitate the scripted effect for the power increasements/decreasements
	set_temp_variable = { tempPower = JAP_power_change }

	if = {							# Clamps the maximum a power a faction can reach to 80%
		limit = {
			check_variable = { tempPower > 0 }
		}
		set_temp_variable = { tempPowerChangeClamp = 0.8 }
		subtract_from_temp_variable = { tempPowerChangeClamp = JAP_Diet_Faction_Power^PowerChangeFaction }
		clamp_temp_variable = { var = tempPower max = tempPowerChangeClamp }

		divide_temp_variable = { tempPower = 4 }
	}
	else = {						# Clamps the minimum a power a faction can reach is 2%
		set_temp_variable = { tempPowerChangeClamp = 0.02 }
		subtract_from_temp_variable = { tempPowerChangeClamp = JAP_Diet_Faction_Power^PowerChangeFaction }
		clamp_temp_variable = { var = tempPower min = tempPowerChangeClamp }

		divide_temp_variable = { tempPower = 4 }
	}

	if = {
		limit = {
			has_country_flag = JAP_Kido_power_change
		}

		for_each_loop = {
			array = JAP_Diet_Faction_Power
			index = i
			value = val
			if = {
				limit = {
					NOT = { check_variable = { i = 1 } }						#Kido is index 1, therefore don't touch.
					check_variable = { tempPower > 0 }						#This is for positive addition.
					check_variable = { i > 0 }
					check_variable = { i < 6 }
					check_variable = { JAP_Diet_Faction_Power^i > 0.025 }		#If the index's power is below 2.5%, don't touch. We don't want factions to simply disappear willy-nilly.
				}
				subtract_from_variable = { JAP_Diet_Faction_Power^i = tempPower }
				add_to_variable = { JAP_Diet_Faction_Power^1 = tempPower }
			}

			else_if = {
				limit = {
					NOT = { check_variable = { i = 1 } }						#Kido is index 1, therefore don't touch.
					check_variable = { tempPower < 0 }						#This is for negative addition.
					check_variable = { i > 0 }
					check_variable = { i < 6 }
					check_variable = { JAP_Diet_Faction_Power^i < 0.75 }		#If the index's power is at or bigger than 75%, don't touch.
				}
				subtract_from_variable = { JAP_Diet_Faction_Power^i = tempPower }
				add_to_variable = { JAP_Diet_Faction_Power^1 = tempPower }
			}
		}
	}

	else_if = {
		limit = {
			has_country_flag = JAP_Takagi_power_change
		}

		for_each_loop = {
			array = JAP_Diet_Faction_Power
			index = i
			value = val

			if = {
				limit = {
					NOT = { check_variable = { i = 2 } }						#Takagi is index 2, therefore don't touch.
					check_variable = { tempPower > 0 }						#This is for positive addition.
					check_variable = { i > 0 }
					check_variable = { i < 6 }
					check_variable = { JAP_Diet_Faction_Power^i > 0.025 }		#If the index's power is below 2.5%, don't touch. We don't want factions to simply disappear willy-nilly.
				}
				subtract_from_variable = { JAP_Diet_Faction_Power^i = tempPower }
				add_to_variable = { JAP_Diet_Faction_Power^2 = tempPower }
			}

			else_if = {
				limit = {
					NOT = { check_variable = { i = 2 } }						#Takagi is index 2, therefore don't touch.
					check_variable = { tempPower < 0 }						#This is for negative addition.
					check_variable = { i > 0 }
					check_variable = { i < 6 }
					check_variable = { JAP_Diet_Faction_Power^i < 0.75 }		#If the index's power is at or bigger than 75%, don't touch.
				}
				subtract_from_variable = { JAP_Diet_Faction_Power^i = tempPower }
				add_to_variable = { JAP_Diet_Faction_Power^2 = tempPower }
			}
		}
	}

	else_if = {
		limit = {
			has_country_flag = JAP_Miki_power_change
		}

		for_each_loop = {
			array = JAP_Diet_Faction_Power
			index = i
			value = val

			if = {
				limit = {
					NOT = { check_variable = { i = 3 } }						#Miki is index 3, therefore don't touch.
					check_variable = { tempPower > 0 }						#This is for positive addition.
					check_variable = { i > 0 }
					check_variable = { i < 6 }
					check_variable = { JAP_Diet_Faction_Power^i > 0.025 }		#If the index's power is below 2.5%, don't touch. We don't want factions to simply disappear willy-nilly.
				}
				subtract_from_variable = { JAP_Diet_Faction_Power^i = tempPower }
				add_to_variable = { JAP_Diet_Faction_Power^3 = tempPower }
			}

			else_if = {
				limit = {
					NOT = { check_variable = { i = 3 } }						#Miki is index 3, therefore don't touch.
					check_variable = { tempPower < 0 }						#This is for negative addition.
					check_variable = { i > 0 }
					check_variable = { i < 6 }
					check_variable = { JAP_Diet_Faction_Power^i < 0.75 }		#If the index's power is at or bigger than 75%, don't touch.
				}
				subtract_from_variable = { JAP_Diet_Faction_Power^i = tempPower }
				add_to_variable = { JAP_Diet_Faction_Power^3 = tempPower }
			}
		}
	}

	else_if = {
		limit = {
			has_country_flag = JAP_Ino_power_change
		}

		for_each_loop = {
			array = JAP_Diet_Faction_Power
			index = i
			value = val

			if = {
				limit = {
					NOT = { check_variable = { i = 4 } }						#Ino is index 4, therefore don't touch.
					check_variable = { tempPower > 0 }						#This is for positive addition.
					check_variable = { i > 0 }
					check_variable = { i < 6 }
					check_variable = { JAP_Diet_Faction_Power^i > 0.025 }		#If the index's power is below 2.5%, don't touch. We don't want factions to simply disappear willy-nilly.
				}
				subtract_from_variable = { JAP_Diet_Faction_Power^i = tempPower }
				add_to_variable = { JAP_Diet_Faction_Power^4 = tempPower }
			}

			else_if = {
				limit = {
					NOT = { check_variable = { i = 4 } }						#Ino is index 4, therefore don't touch.
					check_variable = { tempPower < 0 }						#This is for negative addition.
					check_variable = { i > 0 }
					check_variable = { i < 6 }
					check_variable = { JAP_Diet_Faction_Power^i < 0.75 }		#If the index's power is at or bigger than 75%, don't touch.
				}
				subtract_from_variable = { JAP_Diet_Faction_Power^i = tempPower }
				add_to_variable = { JAP_Diet_Faction_Power^4 = tempPower }
			}
		}
	}

	else_if = {
		limit = {
			has_country_flag = JAP_Kaya_power_change
		}

		for_each_loop = {
			array = JAP_Diet_Faction_Power
			index = i
			value = val

			if = {
				limit = {
					NOT = { check_variable = { i = 5 } }						#Kaya is index 5, therefore don't touch.
					check_variable = { tempPower > 0 }						#This is for positive addition.
					check_variable = { i > 0 }
					check_variable = { i < 6 }
					check_variable = { JAP_Diet_Faction_Power^i > 0.025 }		#If the index's power is below 2.5%, don't touch. We don't want factions to simply disappear willy-nilly.
				}
				subtract_from_variable = { JAP_Diet_Faction_Power^i = tempPower }
				add_to_variable = { JAP_Diet_Faction_Power^5 = tempPower }
			}

			else_if = {
				limit = {
					NOT = { check_variable = { i = 5 } }						#Kaya is index 5, therefore don't touch.
					check_variable = { tempPower < 0 }						#This is for negative addition.
					check_variable = { i > 0 }
					check_variable = { i < 6 }
					check_variable = { JAP_Diet_Faction_Power^i < 0.75 }		#If the index's power is at or bigger than 75%, don't touch.
				}
				subtract_from_variable = { JAP_Diet_Faction_Power^i = tempPower }
				add_to_variable = { JAP_Diet_Faction_Power^5 = tempPower }
			}
		}
	}

	else_if = {	#This is a special one, as it kicks in only when public approval has sunk below 30%. As such, it works differently.
		limit = {
			has_country_flag = JAP_Diet_Public_Approval_Loss
		}

		log = "[GetDateText]: [Root.GetName]: JAP_diet_factions_power_effect; Special Case PUBLIC APPROVAL LOSS Executing"

		for_each_loop = {	#We start off with using the JAP_Diet_Leadership array as we're trying to find who's currently leading the government (value: 2).
			array = JAP_Diet_Leadership
			value = status
			index = i

			if = {
				limit = {
					check_variable = { status = 2 }
				}

				log = "[GetDateText]: [Root.GetName]: JAP_diet_factions_power_effect; JAP_Diet_Leadership Array; i [?i] status [?status]; JAP_Diet_Faction_Power^i pre-addition [?JAP_Diet_Faction_Power^i]"

				set_temp_variable = { tempAdjustedPower = tempPower }
				multiply_temp_variable = { tempAdjustedPower = 4 }					#Because of PDX engine's flimsiness in regards to rounding, we have to continue using tempPower instead of switching back to JAP_power_change for this.

				add_to_variable = { JAP_Diet_Faction_Power^i = tempAdjustedPower }
				set_temp_variable = { faction_i = i }									#And we're keeping the index at which we found this value for later purposes.

				log = "[GetDateText]: [Root.GetName]: JAP_diet_factions_power_effect; JAP_Diet_Leadership Array; diet_i [?diet_i]; JAP_Diet_Faction_Power^i post-addition [?JAP_Diet_Faction_Power^i]"

				for_each_loop = {
					array = JAP_Diet_Faction_Power
					index = i
					value = val

					if = {
						limit = {
							NOT = { check_variable = { i = faction_i } }				#We check for this arrays index to NOT be the same index at which we found the leading faction, since we want to add power to others.
							check_variable = { i > 0 }
							check_variable = { i < 6 }
							check_variable = { JAP_Diet_Faction_Power^i < 0.75 }	#If the index's power is at or bigger than 75%, don't touch.
						}

						log = "[GetDateText]: [Root.GetName]: JAP_diet_factions_power_effect; JAP_Diet_Faction_Power Array; i [?i]; JAP_Diet_Faction_Power^i pre-addition [?JAP_Diet_Faction_Power^i]"

						subtract_from_variable = { JAP_Diet_Faction_Power^i = tempPower }	#Adding the temp power to the remaining factions.

						log = "[GetDateText]: [Root.GetName]: JAP_diet_factions_power_effect; JAP_Diet_Faction_Power Array; i [?i]; JAP_Diet_Faction_Power^i post-addition [?JAP_Diet_Faction_Power^i]"
					}
				}
			}
		}

		log = "[GetDateText]: [Root.GetName]: JAP_diet_factions_power_effect; Special Case PUBLIC APPROVAL LOSS completed execution."
	}

	clear_variable = JAP_power_change

	#Special flags
	clr_country_flag = JAP_Diet_Public_Approval_Loss

	#Ordinary flags
	clr_country_flag = JAP_Kido_power_change
	clr_country_flag = JAP_Takagi_power_change
	clr_country_flag = JAP_Miki_power_change
	clr_country_flag = JAP_Ino_power_change
	clr_country_flag = JAP_Kaya_power_change

	JAP_diet_check_plurality = yes
	JAP_diet_factions_power_updater = yes
	JAP_calc_government_stability = yes
	JAP_calc_total_guarenteed_mps = yes
}

JAP_diet_factions_power_updater = {
	log = "[GetDateText]: [Root.GetName]: JAP_diet_factions_power_updater; Executing"

	#The goal here is to use the JAP_Diet_Faction_Power array as the data set by which the JAP_Diet_Seats array is updated.

	JAP_diet_factions_power_equalizer = yes

	for_each_loop = {
		array = JAP_Diet_Faction_Power
		index = i
		value = val

		if = {
			limit = {
				check_variable = { i > 0 }
				check_variable = { i < 6 }
			}
			set_temp_variable = { tempSeats = totalSeats }
			multiply_temp_variable = { tempSeats = JAP_Diet_Faction_Power^i }
			round_temp_variable = tempSeats
			set_variable = { JAP_Diet_Seats^i = tempSeats }
			clamp_variable = {
				var = JAP_Diet_Seats^i
				min = 0
				max = totalSeats
			}
		}

	}

	log = "[GetDateText]: [Root.GetName]: JAP_diet_factions_power_updater; completed execution."

	JAP_diet_display_generator = yes

	#if = { #If Kaya is PM we update the influence calcs
	#	limit = { has_country_flag = JAP_Kaya_Prime_Minister }
	#	JAP_kaya_seats_changed_influence_update = yes
	#	JAP_kaya_calculate_clique_influences = yes
	#}

	JAP_diet_pop_wheel_translator = yes
}

JAP_diet_factions_power_equalizer = {
	log = "[GetDateText]: [Root.GetName]: JAP_diet_factions_power_equalizer; Executing"

	set_variable = { JAP_factions_power_sum = 0 }

	for_each_loop = { #To get the sum of all faction powers
		array = JAP_Diet_Faction_Power
		index = i
		value = val

		if = {
			limit = {
				check_variable = { i < 6 }
			}
			add_to_variable = { JAP_factions_power_sum = JAP_Diet_Faction_Power^i }
		}
	}

	if = {
		limit = {
			check_variable = { JAP_factions_power_sum < 1 }
		}

		log = "[GetDateText]: [Root.GetName]: JAP_diet_factions_power_equalizer; JAP_factions_power_sum [?JAP_factions_power_sum]"

		set_variable = { JAP_factions_power_sum = 0 }

		#This is an extremely stupid workaround of the fact that pdx code seemingly rounds numbers with more dps than 3 to 0 whenever it can.
		#Every faction power is multiplied by 100, then rounded, upon which JAP_factions_power_sum is recalculated to figure the remainder of the calculation out.

		for_each_loop = {
			array = JAP_Diet_Faction_Power
			index = i
			value = val

			if = {
				limit = {
					check_variable = { i > 0 }
					check_variable = { i < 6 }
				}

				log = "[GetDateText]: [Root.GetName]: JAP_diet_factions_power_equalizer; JAP_Diet_Faction_Power pre_multiplication [?JAP_Diet_Faction_Power^i]"

				multiply_variable = { JAP_Diet_Faction_Power^i = 100 }
				round_variable = JAP_Diet_Faction_Power^i
				add_to_variable = { JAP_factions_power_sum = JAP_Diet_Faction_Power^i }

				log = "[GetDateText]: [Root.GetName]: JAP_diet_factions_power_equalizer; JAP_Diet_Faction_Power post-multiplication [?JAP_Diet_Faction_Power^i]"
			}
		}

		log = "[GetDateText]: [Root.GetName]: JAP_diet_factions_power_equalizer; JAP_factions_power_sum [?JAP_factions_power_sum]"

		set_variable = { tempSum = 100 }
		subtract_from_variable = { tempSum = JAP_factions_power_sum }

		log = "[GetDateText]: [Root.GetName]: JAP_diet_factions_power_equalizer; tempSum [?tempSum]"

		divide_variable = { tempSum = 5 }

		log = "[GetDateText]: [Root.GetName]: JAP_diet_factions_power_equalizer; tempSum/5 [?tempSum]" #There are 5 factions.

		set_variable = { JAP_Factions_power_sum = 0 }

		for_each_loop = {
			array = JAP_Diet_Faction_Power
			index = i
			value = val

			if = {
				limit = {
					check_variable = { i > 0 }
					check_variable = { i < 6 }
				}

				log = "[GetDateText]: [Root.GetName]: JAP_diet_factions_power_equalizer; JAP_Diet_Faction_Power pre-equalization [?JAP_Diet_Faction_Power^i]"

				add_to_variable = { JAP_Diet_Faction_Power^i = tempSum } #Redistribute the needed faction power to everyone.
				multiply_variable = { JAP_Diet_Faction_Power^i = 0.01 }	#To get them back to decimals, blame PDX code being dumb.
				add_to_variable = { JAP_Factions_power_sum = JAP_Diet_Faction_Power^i }

				log = "[GetDateText]: [Root.GetName]: JAP_diet_factions_power_equalizer; JAP_Diet_Faction_Power post-equalization [?JAP_Diet_Faction_Power^i]"
			}
		}

		log = "[GetDateText]: [Root.GetName]: JAP_diet_factions_power_equalizer; JAP_factions_power_sum [?JAP_factions_power_sum]"

	}

	if = {
		limit = {
			check_variable = { JAP_factions_power_sum > 1 }
		}

		set_variable = { JAP_factions_power_sum = 0 }

		#This is an extremely stupid workaround of the fact that pdx code seemingly rounds numbers with more dps than 3 to 0 whenever it can.
		#Every faction power is multiplied by 100, then rounded, upon which JAP_factions_power_sum is recalculated to figure the remainder of the calculation out.

		for_each_loop = {
			array = JAP_Diet_Faction_Power
			index = i
			value = val

			if = {
				limit = {
					check_variable = { i > 0 }
					check_variable = { i < 6 }
				}

				log = "[GetDateText]: [Root.GetName]: JAP_diet_factions_power_equalizer; JAP_Diet_Faction_Power pre_multiplication [?JAP_Diet_Faction_Power^i]"

				multiply_variable = { JAP_Diet_Faction_Power^i = 100 }
				round_variable = JAP_Diet_Faction_Power^i
				add_to_variable = { JAP_factions_power_sum = JAP_Diet_Faction_Power^i }

				log = "[GetDateText]: [Root.GetName]: JAP_diet_factions_power_equalizer; JAP_Diet_Faction_Power post-multiplication [?JAP_Diet_Faction_Power^i]"
			}
		}

		log = "[GetDateText]: [Root.GetName]: JAP_diet_factions_power_equalizer; JAP_factions_power_sum [?JAP_factions_power_sum]"

		set_variable = { tempSum = JAP_factions_power_sum }
		subtract_from_variable = { tempSum = 100 }

		log = "[GetDateText]: [Root.GetName]: JAP_diet_factions_power_equalizer; tempSum [?tempSum]"

		divide_variable = { tempSum = 5 }

		log = "[GetDateText]: [Root.GetName]: JAP_diet_factions_power_equalizer; tempSum/5 [?tempSum]" #There are 5 factions.

		set_variable = { JAP_Factions_power_sum = 0 }

		for_each_loop = {
			array = JAP_Diet_Faction_Power
			index = i
			value = val

			if = {
				limit = {
					check_variable = { i > 0 }
					check_variable = { i < 6 }
				}

				log = "[GetDateText]: [Root.GetName]: JAP_diet_factions_power_equalizer; JAP_Diet_Faction_Power pre-equalization [?JAP_Diet_Faction_Power^i]"

				subtract_from_variable = { JAP_Diet_Faction_Power^i = tempSum } #Subtract the excess faction power from everyone.
				multiply_variable = { JAP_Diet_Faction_Power^i = 0.01 }	#To get them back to decimals, blame PDX code being dumb.
				add_to_variable = { JAP_Factions_power_sum = JAP_Diet_Faction_Power^i }

				log = "[GetDateText]: [Root.GetName]: JAP_diet_factions_power_equalizer; JAP_Diet_Faction_Power post-equalization [?JAP_Diet_Faction_Power^i]"
			}
		}
	}

	log = "[GetDateText]: [Root.GetName]: JAP_diet_factions_power_equalizer; completed execution."
}

# JAP_diet_factions_power_check = {	#Only for the initial powers
# 	log = "[GetDateText]: [Root.GetName]: JAP_diet_factions_power_check; Executing"

# 	clear_array = JAP_Diet_Faction_Power

# 	for_each_loop = {
# 		array = JAP_Diet_Seats
# 		index = i
# 		value = val

# 		if = {
# 			limit = {
# 				#check_variable = { i > 1 }
# 				check_variable = { i < 6 }
# 			}
# 			set_variable = { tempFactionSeats = JAP_Diet_Seats^i }
# 			log = "[GetDateText]: [Root.GetName]: JAP_diet_factions_power_check; temp Faction Seats [?tempFactionSeats]"
# 			divide_variable = { tempFactionSeats = totalSeats }
# 			log = "[GetDateText]: [Root.GetName]: JAP_diet_factions_power_check; temp Faction Power [?tempFactionSeats]"
# 			add_to_array = { JAP_Diet_Faction_Power = tempFactionSeats }
# 		}
# 	}


# 	log = "[GetDateText]: [Root.GetName]: JAP_diet_factions_power_check; Kido Power [?JAP_Diet_Faction_Power^1]"
# 	log = "[GetDateText]: [Root.GetName]: JAP_diet_factions_power_check; Takagi Power [?JAP_Diet_Faction_Power^2]"
# 	log = "[GetDateText]: [Root.GetName]: JAP_diet_factions_power_check; Miki Power [?JAP_Diet_Faction_Power^3]"
# 	log = "[GetDateText]: [Root.GetName]: JAP_diet_factions_power_check; Ino Power [?JAP_Diet_Faction_Power^4]"
# 	log = "[GetDateText]: [Root.GetName]: JAP_diet_factions_power_check; Kaya Power [?JAP_Diet_Faction_Power^5]"

# 	JAP_diet_factions_power_updater = yes

# }

#Big thanks to Calph, who made the British Parliament GUI where much of this code comes from in one way or another

JAP_diet_arrays_initialization = { 
	# Percentages here are based on how they used to be in the diary (lol)
	log = "[GetDateText]: [Root.GetName]: JAP_diet_arrays_initialization; Executing"

	#IJA/IJN/Tension things

	country_event = {		#This is our ticker for clearing the flags.
		id = japdietgui.5
		days = 30
	}

	set_variable = { JAP_IJA_support = 40 }
	set_variable = { JAP_IJN_support = 75 }
	set_variable = { JAP_Tension = 30 }

	JAP_IJAIJN_check_balance = yes

	# House of Peers stuff
	set_variable = { JAP_Peers_support = 0.62 }
	add_dynamic_modifier = { modifier = JAP_peers_support_dynamic_modifier }

	# Public Approval stuff
	set_variable = { JAP_Public_support = 0.35 }
	add_dynamic_modifier = { modifier = JAP_public_support_dynamic_modifier }

	#House of Parliament stuff

	set_variable = { totalSeats = 465 }

	#NULL - FILLERS; DO NOT CHANGE

	add_to_array = { JAP_Diet_Faction = 1 }
	add_to_array = { JAP_Diet_Seats = 0 }
	add_to_array = { JAP_Diet_Faction_Power = 0 }
	add_to_array = { JAP_Diet_Leadership = 0 }

	#ROYALISTS - KIDO (6.2%)

	add_to_array = { JAP_Diet_Faction = 2 }
	add_to_array = { JAP_Diet_Seats = 30 }
	add_to_array = { JAP_Diet_Faction_Power = 0.062 }
	add_to_array = { JAP_Diet_Leadership = 1 }

	#REFORMISTS - TAKAGI (17.3%)

	add_to_array = { JAP_Diet_Faction = 3 }
	add_to_array = { JAP_Diet_Seats = 80 }
	add_to_array = { JAP_Diet_Faction_Power = 0.173 }
	add_to_array = { JAP_Diet_Leadership = 1 }

	#INDEPENDENTS - MIKI (25%)

	add_to_array = { JAP_Diet_Faction = 4 }
	add_to_array = { JAP_Diet_Seats = 116 }
	add_to_array = { JAP_Diet_Faction_Power = 0.25 }
	add_to_array = { JAP_Diet_Leadership = 1 }

	#CONSERVATIVES - INO (31.5%)

	add_to_array = { JAP_Diet_Faction = 5 }
	add_to_array = { JAP_Diet_Seats = 146 }
	add_to_array = { JAP_Diet_Faction_Power = 0.315 }
	add_to_array = { JAP_Diet_Leadership = 2 }

	#TECHNOCRATS - KAYA (20%)

	add_to_array = { JAP_Diet_Faction = 6 }
	add_to_array = { JAP_Diet_Seats = 93 }
	add_to_array = { JAP_Diet_Faction_Power = 0.2 }
	add_to_array = { JAP_Diet_Leadership = 1 }

	log = "[GetDateText]: [Root.GetName]: JAP_diet_arrays_initialization; Execution complete."

	JAP_diet_display_generator = yes
	#JAP_diet_factions_power_check = yes
	JAP_diet_factions_power_updater = yes

	JAP_InoIkeda_PM_initialize = yes
	JAP_diet_check_plurality = yes
}

JAP_diet_display_generator = {
	log = "[GetDateText]: [Root.GetName]: JAP_diet_display_generator; Executing"

	## Init
	resize_array = { JAP_Diet_Seats_display = totalSeats }
	set_variable = { diet_i = 0 }

	# Bug-checking log:
	log = "[GetDateText]: [Root.GetName]: JAP_diet_display_generator diet_i [?diet_i]"

	## Loop
	log = "[GetDateText]: [Root.GetName]: JAP_diet_display_generator; Loop Beginning,"
	log = "[GetDateText]: [Root.GetName]: JAP_diet_display_generator; Loop; (index, status, sn, id)"
	for_each_loop = {
		array = JAP_Diet_Leadership
		value = status
		index = i

		log = "[GetDateText]: [Root.GetName]: JAP_diet_display_generator; Loop; (diet_i, [?diet_i])"

		if = {
			limit = { always = yes } # Needs changing

			set_temp_variable = { sn = JAP_Diet_Seats^i }

			log = "[GetDateText]: [Root.GetName]: JAP_diet_display_generator; Loop; ([?i],[?status],[?sn],[?JAP_Diet_Leadership^i])"

			if = {
				limit = { check_variable = { status = 1 } } # Non-ruling factions

				# Add SeatNum # of Identity values to JAP_Diet_Seats_display
				while_loop_effect = {
					limit = { check_variable = { sn > 0 } }

					set_variable = { JAP_Diet_Seats_display^diet_i = JAP_Diet_Faction^i }

					add_to_variable = { diet_i = 1 }
					subtract_from_temp_variable = { sn = 1 }
				}
			}

			else_if = {
				limit = {
					check_variable = { status = 2 } # Ruling faction
				}

				# Add SeatNum # of Identity values to JAP_Diet_Seats_display
				while_loop_effect = {
					limit = { check_variable = { sn > 0 } }

					set_variable = { JAP_Diet_Seats_display^diet_i = JAP_Diet_Faction^i }

					add_to_variable = { diet_i = 1 }
					subtract_from_temp_variable = { sn = 1 }
				}
			}

			log = "[GetDateText]: [Root.GetName]: JAP_diet_display_generator; Loop; (diet_i, [?diet_i])"
		}
	}
	log = "[GetDateText]: [Root.GetName]: JAP_diet_display_generator; Loop Ended."
	log = "[GetDateText]: [Root.GetName]: JAP_diet_display_generator; (diet_i, [?diet_i])"

	## Clear
	clear_variable = diet_i

	log = "[GetDateText]: [Root.GetName]: JAP_diet_display_generator; Completed execution"
}

# effect to help the AI not constantly collapse
JAP_diet_AI_helper = {
	if = {
		limit = {
			NOT = { check_variable = { JAP_Diet_Faction_Power^JAP_prime_minister > 0.6 } }
		}
		JAP_PM_increase_power_avg = yes
	}
	if = {
		limit = {
			OR = {
				check_variable = { JAP_Peers_support < 0.6 }
				check_variable = { JAP_Public_support < 0.6 }
			}
		}
		JAP_PA_support_increase_small = yes
		JAP_HoP_support_increase_small = yes
	}
}

#Made by Moyme on behalf of Japan team
#And Battlefrog right up to release because Moyme went back to neu Berlin to be a speertard ;)
#And willm for Toolbox Theory
#KD here, added stuff for the facelift. Enjoy Asia!