#	US Elections effects by Yard1

# Senators:
# 0 - empty
# 1 - RDC Republican
# 2 - RDC Democrat
# 3 - NPP Left
# 4 - NPP Center
# 5 - NPP Right (Yockey)
# 6 - NPP Far Right

#Constants
@BONUS_POPULARITY_PRES_MULTIPLIER = 0.3
@PRESIDENT_INCUMBENCY_BONUS_POPULARITY = 0.05
@MAXIMUM_UNITY = 30
@MINIMUM_UNITY = 0.001
@SENATE_SITTING_PRESIDENT_PENALTY = -0.1 #USED TO BE 0.05, testing is done by LAZER 2. april 2020
@SENATE_INCUMBENCY_BONUS_MULTIPLIER_1 = 2
@SENATE_INCUMBENCY_BONUS_MULTIPLIER_2 = 0.001
@SENATE_OPPOSITION_BONUS_ADDER = 0.05
@SENATE_TIEBREAKER_ADDER = 0.05
@CAMPAIGNING_GREAT_SUCCESS_BOOST = 0.2
@CAMPAIGNING_GOOD_SUCCESS_BOOST = 0.1
@CAMPAIGNING_NEUTRAL_BOOST = 0.05
@CAMPAIGNING_BAD_BOOST = 0.025
@POPULARITY_CLAMP_MIN = 0.001
@POPULARITY_CLAMP_MAX = 1000
@INCUMBENCY_BONUS_CLAMP_MIN = 0.0001 #is hoi4 even precise enough to represent this?
@INCUMBENCY_BONUS_CLAMP_MAX = 0.002
@DISUNITY_SAME_FACTION_POPULARITY_MULTIPLIER = 1 #Set this to 0 to disable disunity popularities from being added if their candidate is running (e.g. NPP_C_popularity_2 joining NPP_temp_pop if an NPP-C is running), or 1 to enable it
@PULSE_POPULARITY_CLAMP_MIN = 0
@PULSE_POPULARITY_CLAMP_MAX_FIRST = 10
@PULSE_POPULARITY_CLAMP_MAX_SECOND = 2

US_elections_calculate_country_vars = { #MUST ALWAYS BE USEN WHEN CHANGING SENATORS
	set_variable = { RD_senators = 0 }
	set_variable = { RD_R_senators = 0 }
	set_variable = { RD_D_senators = 0 }
	set_variable = { NPP_senators = 0 }
	set_variable = { NPP_L_senators = 0 }
	set_variable = { NPP_C_senators = 0 }
	set_variable = { NPP_R_senators = 0 }
	set_variable = { NPP_FR_senators = 0 }
	set_variable = { NPP_Y_senators = 0 }
	set_variable = { total_senators = 0 }
	set_variable = { empty_senators = 0 }
	hidden_effect = {
		every_owned_state = {
			limit = {
				has_state_flag = US_election_state
				can_have_elections_in_state = yes
			}
			if = {
				limit = { has_RD_senator_1 = yes }
				add_to_variable = { PREV.RD_senators = 1 }
				if = {
					limit = { check_variable = { senator_1 = 1 } }
					add_to_variable = { PREV.RD_R_senators = 1 }
					else = { add_to_variable = { PREV.RD_D_senators = 1 } }
				}
			}
			if = {
				limit = { has_RD_senator_2 = yes }
				add_to_variable = { PREV.RD_senators = 1 }
				if = {
					limit = { check_variable = { senator_2 = 1 } }
					add_to_variable = { PREV.RD_R_senators = 1 }
					else = { add_to_variable = { PREV.RD_D_senators = 1 } }
				}
			}
			if = {
				limit = { has_NPP_senator_1 = yes }
				add_to_variable = { PREV.NPP_senators = 1 }
				if = {
					limit = { check_variable = { senator_1 = 3 } }
					add_to_variable = { PREV.NPP_L_senators = 1 }
				}
				if = {
					limit = { check_variable = { senator_1 = 4 } }
					add_to_variable = { PREV.NPP_C_senators = 1 }
				}
				if = {
					limit = { check_variable = { senator_1 = 5 } }
					add_to_variable = { PREV.NPP_R_senators = 1 }
				}
				if = {
					limit = { check_variable = { senator_1 = 6 } }
					add_to_variable = { PREV.NPP_FR_senators = 1 }
				}
			}
			if = {
				limit = { has_NPP_senator_2 = yes }
				add_to_variable = { PREV.NPP_senators = 1 }
				if = {
					limit = { check_variable = { senator_2 = 3 } }
					add_to_variable = { PREV.NPP_L_senators = 1 }
				}
				if = {
					limit = { check_variable = { senator_2 = 4 } }
					add_to_variable = { PREV.NPP_C_senators = 1 }
				}
				if = {
					limit = { check_variable = { senator_2 = 5 } }
					add_to_variable = { PREV.NPP_R_senators = 1 }
				}
				if = {
					limit = { check_variable = { senator_2 = 6 } }
					add_to_variable = { PREV.NPP_FR_senators = 1 }
				}
			}
			if = {
				limit = { has_empty_senator_1 = yes }
				add_to_variable = { PREV.empty_senators = 1 }
			}
			if = {
				limit = { has_empty_senator_2 = yes }
				add_to_variable = { PREV.empty_senators = 1 }
			}
			add_to_variable = { PREV.total_senators = 2 }
		}
	}
	USA_get_total_congress_votes = yes
	if = { #Is a bill currently being passed?
		limit = { has_country_flag = USA_discussing_bill }
		clamp_variable = {
			var = RD_R_supporting_senators
			min = 0
			max = RD_R_senators
		}
		clamp_variable = {
			var = RD_D_supporting_senators
			min = 0
			max = RD_D_senators
		}
		clamp_variable = {
			var = NPP_L_supporting_senators
			min = 0
			max = NPP_L_senators
		}
		clamp_variable = {
			var = NPP_C_supporting_senators
			min = 0
			max = NPP_C_senators
		}
		clamp_variable = {
			var = NPP_FR_supporting_senators
			min = 0
			max = NPP_FR_senators
		}
		clamp_variable = {
			var = NPP_Y_supporting_senators
			min = 0
			max = NPP_Y_senators
		}
	}
}

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%###########################################################################
#%%%# #%%%%%#,##%%%%#(*#%%%%%# #%%%%%#,##%%%%#(*#%%###########################################################################
#%%%#%#%%#%%%%#%%%%%%#%%%%#%%#%#%%#%%%%#%%%%%%#%%%%,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
#%%%%%%%% /%%%%%%  %%%%%%* #%%%%%% *%%%%%%  %%%%%%%
#%%%, ,%%%%%* ,(%%%%(,.*%%%%%, ,%%%%%* ,(%%%%(,.*%%***************************************************************************
#%%%%%%%%/%%%%%%%%%%%%%%%%/%%%%%%%/%%%%%%%%%%%%%%%%###########################################################################
#%%%%%%%#*.%%%%%% .%%%%%%,*(%%%%%#*.%%%%%% .%%%%%%%(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((
#%%%. .%%%%%*  #%%%%#  /%%%%%. .%%%%%/  #%%%%#  *%%
#%%%%%%%%,%%%%%%%##%%%%%%%,%%%%%%%*%%%%%%%##%%%%%%%...........................................................................
#%%%%%%%/%,%%%%%%#(%%%%%%*%(%%%%%/%.%%%%%%#(%%%%%%%###########################################################################
#%%%/ (%%%%%% .%%%%%%. %%%%%%/ (%%%%%% .%%%%%%. %%%##############(############################################################
#%%%%%%%#.#%%%%%#//#%%%%## #%%%%%#.##%%%%#//#%%%%%%
#%%%%#%%#%%%%#%%%%%%%%%%%#%#%%#%%#%%%%%%%%%%%%%%%%%
#%%%(.#%%%%%% .%%%%%%. %%%%%%(.(%%%%%% .%%%%%%. %%%###########################################################################
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%###########################################################################


#############################################################################################################################
#############################################################################################################################


#############################################################################################################################
#############################################################################################################################


#############################################################################################################################
#############################################################################################################################


# Party Value:
# 0 - empty
# 1 - RDC Republican
# 2 - RDC Democrat
# 3 - NPP Left
# 4 - NPP Center
# 5 - NPP Right (Yockey)
# 6 - NPP Far Right

#MAKE SURE THAT NPP_candidate_party AND RD_candidate_party ARE SET BEFORE FIRING THIS SCRIPTED EFFECT

US_hold_presidential_election_old = {
	clamp_variable = { #make sure to clamp any support variable that can change!
		var = USA_NPP_Unity
		min = @MINIMUM_UNITY
		max = @MAXIMUM_UNITY
	}
	clamp_variable = { #make sure to clamp any support variable that can change!
		var = USA_RD_Unity
		min = @MINIMUM_UNITY
		max = @MAXIMUM_UNITY
	}
	every_owned_state = {
		limit = { has_state_flag = US_election_state }
		#USA_clamp_state_popularities = yes
		clamp_variable = { #make sure to clamp any support variable that can change!
			var = RD_popularity
			min = @POPULARITY_CLAMP_MIN
			max = @POPULARITY_CLAMP_MAX
		}
		clamp_variable = { #make sure to clamp any support variable that can change!
			var = RD_R_bonus_popularity
			min = @POPULARITY_CLAMP_MIN
			max = @POPULARITY_CLAMP_MAX
		}
		clamp_variable = { #make sure to clamp any support variable that can change!
			var = RD_D_bonus_popularity
			min = @POPULARITY_CLAMP_MIN
			max = @POPULARITY_CLAMP_MAX
		}
		clamp_variable = { #make sure to clamp any support variable that can change!
			var = NPP_popularity
			min = @POPULARITY_CLAMP_MIN
			max = @POPULARITY_CLAMP_MAX
		}
		clamp_variable = { #make sure to clamp any support variable that can change!
			var = NPP_L_bonus_popularity
			min = @POPULARITY_CLAMP_MIN
			max = @POPULARITY_CLAMP_MAX
		}
		clamp_variable = { #make sure to clamp any support variable that can change!
			var = NPP_C_bonus_popularity
			min = @POPULARITY_CLAMP_MIN
			max = @POPULARITY_CLAMP_MAX
		}
		clamp_variable = { #make sure to clamp any support variable that can change!
			var = NPP_FR_bonus_popularity
			min = @POPULARITY_CLAMP_MIN
			max = @POPULARITY_CLAMP_MAX
		}
		clamp_variable = { #make sure to clamp any support variable that can change!
			var = NPP_Y_bonus_popularity
			min = @POPULARITY_CLAMP_MIN
			max = @POPULARITY_CLAMP_MAX
		}
		US_update_presidential_election_race_in_state = yes
		US_hold_presidential_election_in_state = yes
	}

	# log = "US Presidential Election: NPP: [?NPP_electoral_votes] || RD: [?RD_electoral_votes]"

	divide_variable = { RD_actual_votes = 1000 }
	divide_variable = { NPP_actual_votes = 1000 }

	set_temp_variable = { total_votes = RD_actual_votes }
	add_to_temp_variable = { total_votes = NPP_actual_votes }

	divide_temp_variable = { total_votes = 4 }
	divide_variable = { RD_actual_votes = 2 }
	divide_variable = { NPP_actual_votes = 2 }

	add_to_variable = { RD_actual_votes = total_votes }
	add_to_variable = { NPP_actual_votes = total_votes }

	set_variable = { RD_random_votes = random }
	multiply_variable = { RD_random_votes = 1000 }
	set_variable = { NPP_random_votes = random }
	multiply_variable = { NPP_random_votes = 1000 }


	#Add in a check for ties later
	USA_check_presidential_landslide = yes
	if = {
		limit = { check_variable = { RD_electoral_votes > NPP_electoral_votes } }
		if = {
			limit = { check_variable = { RD_candidate_party = 1 } }
			set_variable = { US_election_winner = 1 }
		}
		else_if = {
			limit = { check_variable = { RD_candidate_party = 2 } }
			set_variable = { US_election_winner = 2 }
		}
	}
	else = {
		if = {
			limit = { check_variable = { NPP_candidate_party = 3 } }
			set_variable = { US_election_winner = 3 }
		}
		else_if = {
			limit = { check_variable = { NPP_candidate_party = 4 } }
			set_variable = { US_election_winner = 4 }
		}
		else_if = {
			limit = { check_variable = { NPP_candidate_party = 5 } }
			set_variable = { US_election_winner = 5 }
		}
		else_if = {
			limit = { check_variable = { NPP_candidate_party = 6 } }
			set_variable = { US_election_winner = 6 }
		}
	}
}

USA_check_presidential_landslide = {
	if = {
		limit = {
			check_variable = { RD_electoral_votes > 533 }
		}
		# log = "[GetDateText]: [Root.GetName]: Unlandsliding a RD win"
		set_temp_variable = { highest_NPP = 0 }
		every_owned_state = {
			limit = { can_have_elections_in_state = yes }
			if = {
				limit = {
					check_variable = { THIS.NPP_temp_pop > USA.highest_NPP }
				}
				USA = {
					every_owned_state = {
						limit = { has_state_flag = USA_will_vote_NPP_landslide }
						clr_state_flag = USA_will_vote_NPP_landslide
					}
				}
				set_state_flag = USA_will_vote_NPP_landslide
				set_temp_variable = { USA.highest_NPP = THIS.NPP_temp_pop }
			}
		}
		every_owned_state = {
			limit = {
				has_state_flag = USA_will_vote_NPP_landslide
			}
			clr_state_flag = voted_RD
			set_state_flag = voted_NPP
			subtract_from_variable = { ROOT.RD_electoral_votes = electoral_votes }
			add_to_variable = { ROOT.NPP_electoral_votes = electoral_votes }
			# log = "[GetDateText]: [Root.GetName]: [This.GetName] voted NPP in unlandsliding"
		}
	}
	else_if = {
		limit = {
			check_variable = { NPP_electoral_votes > 533 }
		}
		# log = "[GetDateText]: [Root.GetName]: Unlandsliding an NPP win"
		set_temp_variable = { highest_RD = 0 }
		every_owned_state = {
			limit = { can_have_elections_in_state = yes }
			if = {
				limit = {
					check_variable = { THIS.RD_temp_pop > USA.highest_RD }
				}
				USA = {
					every_owned_state = {
						limit = { has_state_flag = USA_will_vote_RD_landslide }
						clr_state_flag = USA_will_vote_RD_landslide
					}
				}
				set_state_flag = USA_will_vote_RD_landslide
				set_temp_variable = { USA.highest_RD = THIS.RD_temp_pop }
			}
		}
		every_owned_state = {
			limit = {
				has_state_flag = USA_will_vote_RD_landslide
			}
			clr_state_flag = voted_NPP
			set_state_flag = voted_RD
			subtract_from_variable = { ROOT.NPP_electoral_votes = electoral_votes }
			add_to_variable = { ROOT.RD_electoral_votes = electoral_votes }
			# log = "[GetDateText]: [Root.GetName]: [GetName] voted RD in unlandsliding"
		}
	}
}

USA_apply_bonus_popularity_president_election = {
#Bonus popularity if candidate is same ideo# logy
	set_temp_variable = { temp_var = @BONUS_POPULARITY_PRES_MULTIPLIER }
	if = {
		limit = { check_variable = { ROOT.RD_candidate_party = 1 } }
		multiply_temp_variable = { temp_var = ROOT.party_popularity@liberalism }
		add_to_temp_variable = { RD_R_popularity = temp_var }
	}
	else_if = {
		limit = { check_variable = { ROOT.RD_candidate_party = 2 } }
		multiply_temp_variable = { temp_var = ROOT.party_popularity@conservatism }
		add_to_temp_variable = { RD_D_popularity = temp_var }
	}
	set_temp_variable = { temp_var = @BONUS_POPULARITY_PRES_MULTIPLIER }
	if = {
		limit = { check_variable = { ROOT.NPP_candidate_party = 3 } }
		multiply_temp_variable = { temp_var = ROOT.party_popularity@communist }
		add_to_temp_variable = { NPP_L_popularity = temp_var }
	}
	else_if = {
		limit = { check_variable = { ROOT.NPP_candidate_party = 4 } }
		multiply_temp_variable = { temp_var = ROOT.party_popularity@progressivism }
		add_to_temp_variable = { NPP_C_popularity = temp_var }
	}
	else_if = {
		limit = { check_variable = { ROOT.NPP_candidate_party = 5 } }
		multiply_temp_variable = { temp_var = ROOT.party_popularity@national_socialism }
		add_to_temp_variable = { NPP_R_popularity = temp_var }
	}
	else_if = {
		limit = { check_variable = { ROOT.NPP_candidate_party = 6 } }
		multiply_temp_variable = { temp_var = ROOT.party_popularity@paternalism }
		add_to_temp_variable = { NPP_FR_popularity = temp_var }
	}
	#boost faction if president
	if = {
		limit = { check_variable = { ROOT.presidents_party = 1 } }
		add_to_temp_variable = { RD_R_popularity = @PRESIDENT_INCUMBENCY_BONUS_POPULARITY }
	}
	else_if = {
		limit = { check_variable = { ROOT.presidents_party = 2 } }
		add_to_temp_variable = { RD_D_popularity = @PRESIDENT_INCUMBENCY_BONUS_POPULARITY }
	}
	else_if = {
		limit = { check_variable = { ROOT.presidents_party = 3 } }
		add_to_temp_variable = { NPP_L_popularity = @PRESIDENT_INCUMBENCY_BONUS_POPULARITY }
	}
	else_if = {
		limit = { check_variable = { ROOT.presidents_party = 4 } }
		add_to_temp_variable = { NPP_C_popularity = @PRESIDENT_INCUMBENCY_BONUS_POPULARITY }
	}
	else_if = {
		limit = { check_variable = { ROOT.presidents_party = 5 } }
		add_to_temp_variable = { NPP_R_popularity = @PRESIDENT_INCUMBENCY_BONUS_POPULARITY }
	}
	else_if = {
		limit = { check_variable = { ROOT.presidents_party = 6 } }
		add_to_temp_variable = { NPP_FR_popularity = @PRESIDENT_INCUMBENCY_BONUS_POPULARITY }
	}
}

US_update_presidential_election_race_in_state = {
	#0
	#set temp variables to be used in the election
	set_temp_variable = { RD_R_popularity = RD_R_bonus_popularity }
	set_temp_variable = { RD_D_popularity = RD_D_bonus_popularity }
	set_temp_variable = { NPP_L_popularity = NPP_L_bonus_popularity }
	set_temp_variable = { NPP_C_popularity = NPP_C_bonus_popularity }
	set_temp_variable = { NPP_R_popularity = NPP_Y_bonus_popularity }
	set_temp_variable = { NPP_FR_popularity = NPP_FR_bonus_popularity }
	set_temp_variable = { RD_temp_pop = 0 }
	set_temp_variable = { NPP_temp_pop = 0 }
	################################################################

	#1
	#make party pop percentages
	#convert temp party pops into percentages
	set_temp_variable = { temp_RD_pop = RD_popularity }
	set_temp_variable = { temp_NPP_pop = NPP_popularity }
	set_temp_variable = { total_party_pop = RD_popularity }
	add_to_temp_variable = { total_party_pop = NPP_popularity }

	divide_temp_variable = { temp_RD_pop = total_party_pop }
	divide_temp_variable = { temp_NPP_pop = total_party_pop }
	################################################################

	#2
	#make faction pops internal percentages within the party
	#convert temp faction pops into percentages based on their importance of the faction
	#add together RD faction pops, to make a total
	set_temp_variable = { RD_total_pop = RD_R_popularity }
	add_to_temp_variable = { RD_total_pop = RD_D_popularity }

	#add together NPP faction pops, to make a total
	set_temp_variable = { NPP_total_pop = NPP_L_popularity }
	add_to_temp_variable = { NPP_total_pop = NPP_C_popularity }
	add_to_temp_variable = { NPP_total_pop = NPP_R_popularity }
	add_to_temp_variable = { NPP_total_pop = NPP_FR_popularity }

	#divide the temporary faction variables with the sum of its party's factions' popularity
	divide_temp_variable = { RD_R_popularity = RD_total_pop }
	divide_temp_variable = { RD_D_popularity = RD_total_pop }
	divide_temp_variable = { NPP_L_popularity = NPP_total_pop }
	divide_temp_variable = { NPP_C_popularity = NPP_total_pop }
	divide_temp_variable = { NPP_R_popularity = NPP_total_pop }
	divide_temp_variable = { NPP_FR_popularity = NPP_total_pop }

	################################################################

	#3
	#multiply party pop and faction pop
	#RD-D
	multiply_temp_variable = { RD_R_popularity = temp_RD_pop }
	#RD-R
	multiply_temp_variable = { RD_D_popularity = temp_RD_pop }
	#NPP-R
	multiply_temp_variable = { NPP_R_popularity = temp_NPP_pop }
	#NPP-FR
	multiply_temp_variable = { NPP_FR_popularity = temp_NPP_pop }
	#NPP-C
	multiply_temp_variable = { NPP_C_popularity = temp_NPP_pop }
	#NPP-L
	multiply_temp_variable = { NPP_L_popularity = temp_NPP_pop }
	################################################################

	#4 add bonus effects
	USA_apply_bonus_popularity_president_election = yes
	#################################################################

	#5 Split votes from factions between parties, based on presidential candidates and party unity

	## log = "[This.GetName] Pre split: RD faction pops: RD_R_popularity [?RD_R_popularity] | RD_D_popularity [?RD_D_popularity] "
	## log = "[This.GetName] Pre split: NPP faction pops: NPP_L_popularity [?NPP_L_popularity] | NPP_C_popularity [?NPP_C_popularity] | NPP_FR_popularity [?NPP_FR_popularity] | NPP_R_popularity [?NPP_R_popularity]"
	## log = "[This.GetName] Real Party popularities: RD_popularity [?RD_popularity] | NPP_popularity [?NPP_popularity]   "

	USA_NPP_splitting_votes = yes
	USA_RD_splitting_votes = yes

	## log = "[This.GetName] Post split: NPP faction pops: NPP_L_popularity [?NPP_L_popularity] | NPP_C_popularity [?NPP_C_popularity] | NPP_FR_popularity [?NPP_FR_popularity] | NPP_R_popularity [?NPP_R_popularity]"
	## log = "[This.GetName] Pres elec final RD_temp_pop [?RD_temp_pop] | NPP_temp_pop [?NPP_temp_pop] final"

	set_variable = { RD_election_pop = RD_temp_pop }
	set_variable = { NPP_election_pop = NPP_temp_pop }

	## log = "[This.GetName]NPP_election_pop is [?NPP_election_pop]  ||  RD_election_pop is [?RD_election_pop] update"
	## log = "[This.GetName] NPP_temp_pop is [?NPP_temp_pop] || RD_temp_pop is [?RD_temp_pop]  |"
}

US_hold_presidential_election_in_state_new_polling = {
	set_temp_variable = { voter_combs = 0 }
	set_temp_variable = { policy_voters = 0 }
	set_temp_variable = { tossed_votes = 0 }
	set_temp_variable = { rep_raw_votes = 0 }
	set_temp_variable = { dem_raw_votes = 0 }
	set_temp_variable = { pro_raw_votes = 0 }
	set_temp_variable = { nat_raw_votes = 0 }
	set_temp_variable = { com_raw_votes = 0 }
	set_temp_variable = { anv_raw_votes = 0 }

	US_hold_presidential_election_polling = yes
}

US_hold_presidential_election_in_state_new = {
	set_temp_variable = { voter_combs = 0 }
	set_temp_variable = { policy_voters = 0 }
	set_temp_variable = { tossed_votes = 0 }
	set_temp_variable = { rep_raw_votes = 0 }
	set_temp_variable = { dem_raw_votes = 0 }
	set_temp_variable = { pro_raw_votes = 0 }
	set_temp_variable = { nat_raw_votes = 0 }
	set_temp_variable = { com_raw_votes = 0 }
	set_temp_variable = { anv_raw_votes = 0 }

	US_hold_presidential_election = yes
	if = {
		limit = {
			has_state_flag = npp_win_pres
		}
		add_to_variable = { USA.NPP_electoral_vostes = electoral_votes }
	}
	else_if = {
		limit = {
			has_state_flag = rdc_win_pres
		}
		add_to_variable = { USA.RD_electoral_votes = electoral_votes }
	}
	## 3RD PARTY EXTREMIST CASES
	else_if = {
		limit = {
			# my special 3rd party circumstance!!
			always = no
		}
		add_to_variable = { USA.Nationalist_PARTY_electoral_votes = electoral_votes }
		set_state_flag = voted_NAT
	}
	else_if = {
		limit = {
			# my special 3rd party circumstance!!
			always = no
		}
		add_to_variable = { USA.Progressive_PARTY_electoral_votes = electoral_votes }
		set_state_flag = voted_PRO
	}
	else_if = {
		limit = {
			# my special 3rd party circumstance!!
			always = no
		}
		add_to_variable = { USA.StatesRights_PARTY_electoral_votes = electoral_votes }
		set_state_flag = voted_SR
	}
	else_if = {
		limit = {
			# my special 3rd party circumstance!!
			always = no
		}
		add_to_variable = { USA.NPL_PARTY_electoral_votes = electoral_votes }
		set_state_flag = voted_NPL
	}
	else_if = {
		limit = {
			# my special 3rd party circumstance!!
			always = no
		}
		add_to_variable = { USA.FL_PARTY_electoral_votes = electoral_votes }
		set_state_flag = voted_FL
	}
	add_to_variable = { USA.RDC_popularvote = rdc_votes }
	add_to_variable = { USA.NPP_popularvote = npp_votes }
}

US_hold_presidential_election_in_state = {
	#check which party is largest
	#ADD CHECK FOR TIES

	# Actual voting results Texas California and New York need special code
	# normalizer
	set_temp_variable = { total_election_pop = RD_election_pop }
	add_to_temp_variable = { total_election_pop = NPP_election_pop }

	set_temp_variable = { actual_votes = state_population_k }

	if = { # California
		limit = { check_variable = { THIS.id = 378.id } }
		add_to_temp_variable = { actual_votes = 378.state_population_k }
	}

	if = { # Texas
		limit = { check_variable = { THIS.id = 375.id } }
		add_to_temp_variable = { actual_votes = 375.state_population_k }
	}

	if = { # New York
		limit = { check_variable = { THIS.id = 358.id } }
		add_to_temp_variable = { actual_votes = 358.state_population_k }
	}

	if = { # Maryland DC
		limit = { check_variable = { THIS.id = 361.id } }
		add_to_temp_variable = { actual_votes = 992.state_population_k }
	}

	if = {
		limit = {
			USA = { has_country_flag = USA_voting_rights_act }
			OR = {
				check_variable = { nationality = 84 }
				check_variable = { THIS.id = 362.id }
				check_variable = { THIS.id = 364.id }
				check_variable = { THIS.id = 365.id }
			}
		}
		set_temp_variable = { voter_turnout_vra = voter_turnout }
		add_to_temp_variable = { voter_turnout_vra = 0.108 } #Magic Number VRA
		multiply_temp_variable = { actual_votes = voter_turnout_vra }
	}
	else = {
		multiply_temp_variable = { actual_votes = voter_turnout }
	}

	set_temp_variable = { rd_temp_actual_votes = actual_votes }
	multiply_temp_variable = { rd_temp_actual_votes = RD_election_pop }
	divide_temp_variable = { rd_temp_actual_votes = total_election_pop }
	add_to_variable = { ROOT.RD_actual_votes = rd_temp_actual_votes }

	set_temp_variable = { npp_temp_actual_votes = actual_votes }
	multiply_temp_variable = { npp_temp_actual_votes = NPP_election_pop }
	divide_temp_variable = { npp_temp_actual_votes = total_election_pop }
	add_to_variable = { ROOT.NPP_actual_votes = npp_temp_actual_votes }

	# log = "[GetDateText] [PREV.GetName] [This.GetName] NPP_election_pop is [?NPP_election_pop] actual_votes [?npp_temp_actual_votes] ||  RD_election_pop is [?RD_election_pop] actual_votes [?rd_temp_actual_votes] held election"

	if = {
		limit = { check_variable = { RD_election_pop > NPP_election_pop } }
		add_to_variable = { ROOT.RD_electoral_votes = electoral_votes }
		# log = "[This.GetName] : Voted for RD with [?electoral_votes] electoral votes"
		set_state_flag = voted_RD
	}
	else = {
		add_to_variable = { ROOT.NPP_electoral_votes = electoral_votes }
		# log = "[This.GetName] : Voted for NPP with [?electoral_votes] electoral votes"
		set_state_flag = voted_NPP
	}
	##########################################################################################
}


USA_NPP_splitting_votes = {
	set_temp_variable = { temp_NPP_unity = ROOT.USA_NPP_Unity }
	divide_temp_variable = { temp_NPP_unity = @MAXIMUM_UNITY }
	## log = "ROOT.USA_NPP_Unity is [?ROOT.USA_NPP_Unity]"
	set_temp_variable = { temp_NPP_unity_minus = 1 }
	subtract_from_temp_variable = { temp_NPP_unity_minus = temp_NPP_unity }
	set_temp_variable = { NPP_C_popularity_2 = NPP_C_popularity }
	set_temp_variable = { NPP_FR_popularity_2 = NPP_FR_popularity }
	set_temp_variable = { NPP_C_popularity_1 = NPP_C_popularity }
	set_temp_variable = { NPP_FR_popularity_1 = NPP_FR_popularity }

	multiply_temp_variable = { NPP_C_popularity_1 = temp_NPP_unity }		#C->NPP		NPP_C_popularity
	multiply_temp_variable = { NPP_FR_popularity_1 = temp_NPP_unity }		#FR->NPP	NPP_FR_popularity
	multiply_temp_variable = { NPP_C_popularity_2 = temp_NPP_unity_minus }	#C->RD		NPP_C_popularity_2
	multiply_temp_variable = { NPP_FR_popularity_2 = temp_NPP_unity_minus }	#FR->RD		NPP_FR_popularity_2
	## log = "temp_NPP_unity [?temp_NPP_unity] | temp_NPP_unity_minus [?temp_NPP_unity_minus]"
	## log = "NPP_C_popularity, which goes to NPP is [?NPP_C_popularity_1] | NPP_C_popularity_2, which goes to RD is [?NPP_C_popularity_2]"
	## log = "NPP_FR_popularity, which goes to NPP is [?NPP_FR_popularity_1] | NPP_FR_popularity_2, which goes to RD is [?NPP_FR_popularity_2]"

	if = {
		limit = { check_variable = { ROOT.NPP_candidate_party = 5 } } #Yockey
		if = {
			limit = { check_variable = { ROOT.RD_candidate_party = 2 } } #Democrat

			add_to_temp_variable = { NPP_temp_pop = NPP_R_popularity }

			add_to_temp_variable = { NPP_temp_pop = NPP_FR_popularity_1 }
			add_to_temp_variable = { RD_temp_pop = NPP_FR_popularity_2 }

			add_to_temp_variable = { NPP_temp_pop = NPP_C_popularity_1 }
			add_to_temp_variable = { RD_temp_pop = NPP_C_popularity_2 }

			add_to_temp_variable = { RD_temp_pop = NPP_L_popularity }
		}
		else_if = {
			limit = { check_variable = { ROOT.RD_candidate_party = 1 } } #Republican

			add_to_temp_variable = { NPP_temp_pop = NPP_R_popularity }

			add_to_temp_variable = { NPP_temp_pop = NPP_FR_popularity_1 }
			add_to_temp_variable = { RD_temp_pop = NPP_FR_popularity_2 }

			add_to_temp_variable = { NPP_temp_pop = NPP_C_popularity_1 }
			add_to_temp_variable = { RD_temp_pop = NPP_C_popularity_2 }

			add_to_temp_variable = { RD_temp_pop = NPP_L_popularity }
		}
	}
	else_if = {
		limit = { check_variable = { ROOT.NPP_candidate_party = 6 } } #Far Right
		multiply_temp_variable = { NPP_FR_popularity_2 = @DISUNITY_SAME_FACTION_POPULARITY_MULTIPLIER }
		if = {
			limit = { check_variable = { ROOT.RD_candidate_party = 2 } } #Democrat
			add_to_temp_variable = { NPP_temp_pop = NPP_R_popularity }

			add_to_temp_variable = { NPP_temp_pop = NPP_FR_popularity_1 }
			add_to_temp_variable = { NPP_temp_pop = NPP_FR_popularity_2 }

			add_to_temp_variable = { NPP_temp_pop = NPP_C_popularity_1 }
			add_to_temp_variable = { RD_temp_pop = NPP_C_popularity_2 }

			add_to_temp_variable = { RD_temp_pop = NPP_L_popularity }
		}
		else_if = {
			limit = { check_variable = { ROOT.RD_candidate_party = 1 } } #Republican
			add_to_temp_variable = { NPP_temp_pop = NPP_R_popularity }

			add_to_temp_variable = { NPP_temp_pop = NPP_FR_popularity_1 }
			add_to_temp_variable = { NPP_temp_pop = NPP_FR_popularity_2 }

			add_to_temp_variable = { NPP_temp_pop = NPP_C_popularity_1 }
			add_to_temp_variable = { RD_temp_pop = NPP_C_popularity_2 }

			add_to_temp_variable = { RD_temp_pop = NPP_L_popularity }
		}
	}
	else_if = {
		limit = { check_variable = { ROOT.NPP_candidate_party = 4 } } #Center
		multiply_temp_variable = { NPP_C_popularity_2 = @DISUNITY_SAME_FACTION_POPULARITY_MULTIPLIER }
		if = {
			limit = { check_variable = { ROOT.RD_candidate_party = 2 } } #Democrat
			add_to_temp_variable = { RD_temp_pop = NPP_R_popularity }

			add_to_temp_variable = { NPP_temp_pop = NPP_FR_popularity_1 }
			add_to_temp_variable = { RD_temp_pop = NPP_FR_popularity_2 }

			add_to_temp_variable = { NPP_temp_pop = NPP_C_popularity_1 }
			add_to_temp_variable = { NPP_temp_pop = NPP_C_popularity_2 }

			add_to_temp_variable = { NPP_temp_pop = NPP_L_popularity }
		}
		else_if = {
			limit = { check_variable = { ROOT.RD_candidate_party = 1 } } #Republican
			add_to_temp_variable = { RD_temp_pop = NPP_R_popularity }

			add_to_temp_variable = { NPP_temp_pop = NPP_FR_popularity_1 }
			add_to_temp_variable = { RD_temp_pop = NPP_FR_popularity_2 }

			add_to_temp_variable = { NPP_temp_pop = NPP_C_popularity_1 }
			add_to_temp_variable = { NPP_temp_pop = NPP_C_popularity_2 }

			add_to_temp_variable = { NPP_temp_pop = NPP_L_popularity }
		}
	}
	else_if = {
		limit = { check_variable = { ROOT.NPP_candidate_party = 3 } } #Left
		if = {
			limit = { check_variable = { ROOT.RD_candidate_party = 2 } } #Democrat
			add_to_temp_variable = { RD_temp_pop = NPP_R_popularity }

			add_to_temp_variable = { NPP_temp_pop = NPP_FR_popularity_1 }
			add_to_temp_variable = { RD_temp_pop = NPP_FR_popularity_2 }

			add_to_temp_variable = { NPP_temp_pop = NPP_C_popularity_1 }
			add_to_temp_variable = { RD_temp_pop = NPP_C_popularity_2 }

			add_to_temp_variable = { NPP_temp_pop = NPP_L_popularity }
		}
		else_if = {
			limit = { check_variable = { ROOT.RD_candidate_party = 1 } } #Republican
			add_to_temp_variable = { RD_temp_pop = NPP_R_popularity }

			add_to_temp_variable = { NPP_temp_pop = NPP_FR_popularity_1 }
			add_to_temp_variable = { RD_temp_pop = NPP_FR_popularity_2 }

			add_to_temp_variable = { NPP_temp_pop = NPP_C_popularity_1 }
			add_to_temp_variable = { RD_temp_pop = NPP_C_popularity_2 }

			add_to_temp_variable = { NPP_temp_pop = NPP_L_popularity }
		}
		} else = { # This is the first election, therefore we assume LBJ vs Wallace
		add_to_temp_variable = { NPP_temp_pop = NPP_R_popularity }

		add_to_temp_variable = { NPP_temp_pop = NPP_FR_popularity_1 }
		add_to_temp_variable = { NPP_temp_pop = NPP_FR_popularity_2 }

		add_to_temp_variable = { NPP_temp_pop = NPP_C_popularity_1 }
		add_to_temp_variable = { RD_temp_pop = NPP_C_popularity_2 }

		add_to_temp_variable = { RD_temp_pop = NPP_L_popularity }
	}
}

USA_RD_splitting_votes = {
	set_temp_variable = { temp_RD_unity = ROOT.USA_RD_Unity }
	divide_temp_variable = { temp_RD_unity = @MAXIMUM_UNITY }
	set_temp_variable = { temp_RD_unity_minus = 1 }
	subtract_from_temp_variable = { temp_RD_unity_minus = temp_RD_unity }
	set_temp_variable = { RD_D_popularity_2 = RD_D_popularity }
	set_temp_variable = { RD_R_popularity_2 = RD_R_popularity }
	set_temp_variable = { RD_D_popularity_1 = RD_D_popularity }
	set_temp_variable = { RD_R_popularity_1 = RD_R_popularity }

	multiply_temp_variable = { RD_D_popularity_1 = temp_RD_unity }		#D->RD	RD_D_popularity
	multiply_temp_variable = { RD_R_popularity_1 = temp_RD_unity }		#R->RD	RD_R_popularity
	multiply_temp_variable = { RD_D_popularity_2 = temp_RD_unity_minus }		#D->NPP	RD_D_popularity_2
	multiply_temp_variable = { RD_R_popularity_2 = temp_RD_unity_minus }		#R->NPP	RD_R_popularity_2
	## log = "temp_RD_unity [?temp_RD_unity] | temp_RD_unity_minus [?temp_RD_unity_minus]"
	## log = "RD_R_popularity, which goes to RD is [?RD_R_popularity_1] | RD_R_popularity_2, which goes to NPP is [?RD_R_popularity_2]"
	## log = "RD_D_popularity, which goes to RD is [?RD_D_popularity_1] | RD_D_popularity_2, which goes to NPP is [?RD_D_popularity_2]"

	set_temp_variable = { RD_union_popularity = RD_R_popularity_1 }
	add_to_temp_variable = { RD_union_popularity = RD_D_popularity_1 }		#together
	## log = "RD_R_popularity ([?RD_R_popularity_1]) + RD_D_popularity ([?RD_D_popularity_1]) = RD_union_popularity [?RD_union_popularity]"

	if = {
		limit = { check_variable = { ROOT.RD_candidate_party = 1 } } #Republican
		if = {
			limit = { check_variable = { ROOT.NPP_candidate_party = 5 } } #Yockey
			add_to_temp_variable = { RD_temp_pop = RD_union_popularity }
		}
		else_if = {
			limit = { check_variable = { ROOT.NPP_candidate_party = 6 } } #Far Right
			add_to_temp_variable = { RD_temp_pop = RD_R_popularity_1 }

			add_to_temp_variable = { RD_temp_pop = RD_D_popularity_1 }
			add_to_temp_variable = { NPP_temp_pop = RD_D_popularity_2 }
		}
		else_if = {
			limit = { check_variable = { ROOT.NPP_candidate_party = 4 } } #Center
			add_to_temp_variable = { RD_temp_pop = RD_union_popularity }
		}
		else_if = {
			limit = { check_variable = { ROOT.NPP_candidate_party = 3 } } #Left
			add_to_temp_variable = { RD_temp_pop = RD_union_popularity }
		}
		multiply_temp_variable = { RD_R_popularity_2 = @DISUNITY_SAME_FACTION_POPULARITY_MULTIPLIER }
		add_to_temp_variable = { RD_temp_pop = RD_R_popularity_2 }
	}
	else_if = {
		limit = { check_variable = { ROOT.RD_candidate_party = 2 } }#Democrat
		if = {
			limit = { check_variable = { ROOT.NPP_candidate_party = 5 } } #Yockey
			add_to_temp_variable = { RD_temp_pop = RD_union_popularity }
		}
		else_if = {
			limit = { check_variable = { ROOT.NPP_candidate_party = 6 } } #Far Right
			add_to_temp_variable = { RD_temp_pop = RD_union_popularity }
		}
		else_if = {
			limit = { check_variable = { ROOT.NPP_candidate_party = 4 } } #Center
			add_to_temp_variable = { RD_temp_pop = RD_D_popularity_1 }

			add_to_temp_variable = { RD_temp_pop = RD_R_popularity_1 }
			add_to_temp_variable = { NPP_temp_pop = RD_R_popularity_2 }
		}
		else_if = {
			limit = { check_variable = { ROOT.NPP_candidate_party = 3 } } #Left
			add_to_temp_variable = { RD_temp_pop = RD_union_popularity }
		}
		multiply_temp_variable = { RD_D_popularity_2 = @DISUNITY_SAME_FACTION_POPULARITY_MULTIPLIER }
		add_to_temp_variable = { RD_temp_pop = RD_D_popularity_2 }
		} else = { # This is the first election, therefore we assume LBJ vs Wallace
		add_to_temp_variable = { RD_temp_pop = RD_R_popularity_1 }

		add_to_temp_variable = { RD_temp_pop = RD_D_popularity_1 }
		add_to_temp_variable = { NPP_temp_pop = RD_D_popularity_2 }
	}
}

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%###########################################################################
#%%%# #%%%%%#,##%%%%#(*#%%%%%# #%%%%%#,##%%%%#(*#%%###########################################################################
#%%%#%#%%#%%%%#%%%%%%#%%%%#%%#%#%%#%%%%#%%%%%%#%%%%,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
#%%%%%%%% /%%%%%%  %%%%%%* #%%%%%% *%%%%%%  %%%%%%%
#%%%, ,%%%%%* ,(%%%%(,.*%%%%%, ,%%%%%* ,(%%%%(,.*%%***************************************************************************
#%%%%%%%%/%%%%%%%%%%%%%%%%/%%%%%%%/%%%%%%%%%%%%%%%%###########################################################################
#%%%%%%%#*.%%%%%% .%%%%%%,*(%%%%%#*.%%%%%% .%%%%%%%(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((
#%%%. .%%%%%*  #%%%%#  /%%%%%. .%%%%%/  #%%%%#  *%%
#%%%%%%%%,%%%%%%%##%%%%%%%,%%%%%%%*%%%%%%%##%%%%%%%...........................................................................
#%%%%%%%/%,%%%%%%#(%%%%%%*%(%%%%%/%.%%%%%%#(%%%%%%%###########################################################################
#%%%/ (%%%%%% .%%%%%%. %%%%%%/ (%%%%%% .%%%%%%. %%%##############(############################################################
#%%%%%%%#.#%%%%%#//#%%%%## #%%%%%#.##%%%%#//#%%%%%%
#%%%%#%%#%%%%#%%%%%%%%%%%#%#%%#%%#%%%%%%%%%%%%%%%%%
#%%%(.#%%%%%% .%%%%%%. %%%%%%(.(%%%%%% .%%%%%%. %%%###########################################################################
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%###########################################################################


#############################################################################################################################
#############################################################################################################################


#############################################################################################################################
#############################################################################################################################


#############################################################################################################################
#############################################################################################################################

USA_hold_senate_election_tex = { #For debugging purposes, actual effect is down below
	every_owned_state = {
		limit = {
			has_state_flag = elections_senator_1
		}
		set_variable = { SEN_Right_Vote = 0 }
		set_variable = { SEN_Prog_Vote = 0 }
		add_to_variable = { SEN_Prog_Vote = RD_R_bonus_popularity }
		add_to_variable = { SEN_Prog_Vote = NPP_C_bonus_popularity }
		add_to_variable = { SEN_Prog_Vote = NPP_L_bonus_popularity }
		add_to_variable = { SEN_Right_Vote = RD_D_bonus_popularity }
		add_to_variable = { SEN_Right_Vote = NPP_FR_bonus_popularity }
		add_to_variable = { SEN_Right_Vote = NPP_Y_bonus_popularity }
	#Progressives
		if = {
			limit = {
				check_variable = { SEN_Prog_Vote > SEN_Right_Vote }
				check_variable = { RD_R_bonus_popularity > NPP_C_bonus_popularity }
				check_variable = { RD_R_bonus_popularity > NPP_L_bonus_popularity }
			}
			set_variable = { senator_1 = 1 }
		}
		else_if = {
			limit = {
				check_variable = { SEN_Prog_Vote > SEN_Right_Vote }
				check_variable = { NPP_L_bonus_popularity > RD_R_bonus_popularity }
				check_variable = { NPP_L_bonus_popularity > NPP_C_bonus_popularity }
			}
			set_variable = { senator_1 = 3 }
		}
		else_if = {
			limit = {
				check_variable = { SEN_Prog_Vote > SEN_Right_Vote }
				check_variable = { NPP_C_bonus_popularity > RD_R_bonus_popularity }
				check_variable = { NPP_C_bonus_popularity > NPP_L_bonus_bonus_popularity }
			}
			set_variable = { senator_1 = 4 }
		}
	#Right Wing
		else_if = {
			limit = {
				check_variable = { SEN_Right_Vote > SEN_Prog_Vote }
				check_variable = { NPP_Y_bonus_popularity > RD_D_bonus_popularity }
				check_variable = { NPP_Y_bonus_popularity > NPP_FR_bonus_popularity }
			}
			set_variable = { senator_1 = 5 }
		}
		else_if = {
			limit = {
				check_variable = { SEN_Right_Vote > SEN_Prog_Vote }
				check_variable = { NPP_FR_bonus_popularity > RD_D_bonus_popularity }
				check_variable = { NPP_FR_bonus_popularity > NPP_Y_bonus_popularity }
			}
			set_variable = { senator_1 = 6 }
		}
		else_if = {
			limit = {
				check_variable = { SEN_Right_Vote > SEN_Prog_Vote }
				check_variable = { RD_D_bonus_popularity > NPP_FR_bonus_popularity }
				check_variable = { RD_D_bonus_popularity > NPP_Y_bonus_popularity }
			}
			set_variable = { senator_1 = 2 }
		}
	}

	every_owned_state = {
		limit = {
			has_state_flag = elections_senator_2
		}
		set_variable = { SEN_Right_Vote = 0 }
		set_variable = { SEN_Prog_Vote = 0 }
		add_to_variable = { SEN_Prog_Vote = RD_R_bonus_popularity }
		add_to_variable = { SEN_Prog_Vote = NPP_C_bonus_popularity }
		add_to_variable = { SEN_Prog_Vote = NPP_L_bonus_popularity }
		add_to_variable = { SEN_Right_Vote = RD_D_bonus_popularity }
		add_to_variable = { SEN_Right_Vote = NPP_FR_bonus_popularity }
		add_to_variable = { SEN_Right_Vote = NPP_Y_bonus_popularity }
		if = {
		#Progressives
			if = {
				limit = {
					check_variable = { SEN_Prog_Vote > SEN_Right_Vote }
					check_variable = { RD_R_bonus_popularity > NPP_C_bonus_popularity }
					check_variable = { RD_R_bonus_popularity > NPP_L_bonus_popularity }
				}
				set_variable = { senator_1 = 1 }
			}
			else_if = {
				limit = {
					check_variable = { SEN_Prog_Vote > SEN_Right_Vote }
					check_variable = { NPP_L_bonus_popularity > RD_R_bonus_popularity }
					check_variable = { NPP_L_bonus_popularity > NPP_C_bonus_popularity }
				}
				set_variable = { senator_1 = 3 }
			}
			else_if = {
				limit = {
					check_variable = { SEN_Prog_Vote > SEN_Right_Vote }
					check_variable = { NPP_C_bonus_popularity > RD_R_bonus_popularity }
					check_variable = { NPP_C_bonus_popularity > NPP_L_bonus_bonus_popularity }
				}
				set_variable = { senator_1 = 4 }
			}
		#Right Wing
			else_if = {
				limit = {
					check_variable = { SEN_Right_Vote > SEN_Prog_Vote }
					check_variable = { NPP_Y_bonus_popularity > RD_D_bonus_popularity }
					check_variable = { NPP_Y_bonus_popularity > NPP_FR_bonus_popularity }
				}
				set_variable = { senator_1 = 5 }
			}
			else_if = {
				limit = {
					check_variable = { SEN_Right_Vote > SEN_Prog_Vote }
					check_variable = { NPP_FR_bonus_popularity > RD_D_bonus_popularity }
					check_variable = { NPP_FR_bonus_popularity > NPP_Y_bonus_popularity }
				}
				set_variable = { senator_1 = 6 }
			}
			else_if = {
				limit = {
					check_variable = { SEN_Right_Vote > SEN_Prog_Vote }
					check_variable = { RD_D_bonus_popularity > NPP_FR_bonus_popularity }
					check_variable = { RD_D_bonus_popularity > NPP_Y_bonus_popularity }
				}
				set_variable = { senator_1 = 2 }
			}
		}
	}
	every_owned_state = {
		limit = {
			OR = {
				has_state_flag = elections_senator_2
				has_state_flag = elections_senator_1
			}
		}
		clr_state_flag = elections_senator_1
		clr_state_flag = elections_senator_2
	}
}

USA_hold_senate_election = {
	set_variable = { RD_R_change = 0 }
	set_variable = { RD_D_change = 0 }
	set_variable = { NPP_L_change = 0 }
	set_variable = { NPP_C_change = 0 }
	set_variable = { NPP_R_change = 0 }
	set_variable = { NPP_FR_change = 0 }
	set_temp_variable = { alert_id = token:Alert_US_Election }
	remove_TNO_alert = yes

	clamp_variable = { #make sure to clamp any support variable that can change!
		var = USA_NPP_Unity
		min = @MINIMUM_UNITY
		max = @MAXIMUM_UNITY
	}
	clamp_variable = { #make sure to clamp any support variable that can change!
		var = USA_RD_Unity
		min = @MINIMUM_UNITY
		max = @MAXIMUM_UNITY
	}
	every_owned_state = {
		limit = {
			has_state_flag = elections_senator_1
		}
		#USA_clamp_state_popularities = yes
		clamp_variable = { #make sure to clamp any support variable that can change!
			var = RD_popularity
			min = @POPULARITY_CLAMP_MIN
			max = @POPULARITY_CLAMP_MAX
		}
		clamp_variable = { #make sure to clamp any support variable that can change!
			var = RD_R_bonus_popularity
			min = @POPULARITY_CLAMP_MIN
			max = @POPULARITY_CLAMP_MAX
		}
		clamp_variable = { #make sure to clamp any support variable that can change!
			var = RD_D_bonus_popularity
			min = @POPULARITY_CLAMP_MIN
			max = @POPULARITY_CLAMP_MAX
		}
		clamp_variable = { #make sure to clamp any support variable that can change!
			var = NPP_popularity
			min = @POPULARITY_CLAMP_MIN
			max = @POPULARITY_CLAMP_MAX
		}
		clamp_variable = { #make sure to clamp any support variable that can change!
			var = NPP_L_bonus_popularity
			min = @POPULARITY_CLAMP_MIN
			max = @POPULARITY_CLAMP_MAX
		}
		clamp_variable = { #make sure to clamp any support variable that can change!
			var = NPP_C_bonus_popularity
			min = @POPULARITY_CLAMP_MIN
			max = @POPULARITY_CLAMP_MAX
		}
		clamp_variable = { #make sure to clamp any support variable that can change!
			var = NPP_FR_bonus_popularity
			min = @POPULARITY_CLAMP_MIN
			max = @POPULARITY_CLAMP_MAX
		}
		clamp_variable = { #make sure to clamp any support variable that can change!
			var = NPP_Y_bonus_popularity
			min = @POPULARITY_CLAMP_MIN
			max = @POPULARITY_CLAMP_MAX
		}
		# log = " update senate 1 race"
		USA_update_senator_1_in_state = yes
		# log = " pick senate 1 race"
		USA_pick_senator_1_in_state = yes
		# log = " clear senate 1 race"
		USA_clear_senate_predictions = yes
	}
	every_owned_state = {
		limit = {
			has_state_flag = elections_senator_2
		}
		#USA_clamp_state_popularities = yes
		clamp_variable = { #make sure to clamp any support variable that can change!
			var = RD_popularity
			min = @POPULARITY_CLAMP_MIN
			max = @POPULARITY_CLAMP_MAX
		}
		clamp_variable = { #make sure to clamp any support variable that can change!
			var = RD_R_bonus_popularity
			min = @POPULARITY_CLAMP_MIN
			max = @POPULARITY_CLAMP_MAX
		}
		clamp_variable = { #make sure to clamp any support variable that can change!
			var = RD_D_bonus_popularity
			min = @POPULARITY_CLAMP_MIN
			max = @POPULARITY_CLAMP_MAX
		}
		clamp_variable = { #make sure to clamp any support variable that can change!
			var = NPP_popularity
			min = @POPULARITY_CLAMP_MIN
			max = @POPULARITY_CLAMP_MAX
		}
		clamp_variable = { #make sure to clamp any support variable that can change!
			var = NPP_L_bonus_popularity
			min = @POPULARITY_CLAMP_MIN
			max = @POPULARITY_CLAMP_MAX
		}
		clamp_variable = { #make sure to clamp any support variable that can change!
			var = NPP_C_bonus_popularity
			min = @POPULARITY_CLAMP_MIN
			max = @POPULARITY_CLAMP_MAX
		}
		clamp_variable = { #make sure to clamp any support variable that can change!
			var = NPP_FR_bonus_popularity
			min = @POPULARITY_CLAMP_MIN
			max = @POPULARITY_CLAMP_MAX
		}
		clamp_variable = { #make sure to clamp any support variable that can change!
			var = NPP_Y_bonus_popularity
			min = @POPULARITY_CLAMP_MIN
			max = @POPULARITY_CLAMP_MAX
		}
		# log = " update senate 2 race"
		USA_update_senator_2_in_state = yes
		# log = " pick senate 1 race"
		USA_pick_senator_2_in_state = yes
		# log = " clear senate 1 race"
		USA_clear_senate_predictions = yes
	}
	set_country_flag = USA_senate_conclusion
	US_elections_calculate_country_vars = yes
	US_election_update_gui_post_senate = yes
}


USA_update_senator_1_in_state = {

	#make all parametres into percentages, relative to domain. factions are added together within their parties, not between parties
	# then find which faction popularity is the highest
	#	(faction's relative strength in party*party unity*party's relative strength in state) is the ultimate equation
	#1. factions relative strength				<party>_<faction>_popularity
	#2. party's relative strength in state 		<party>_total_pop
	#3. unity 									temp_<party>_unity

	#set temp variables to be used in the election
	set_temp_variable = { RD_R_popularity = RD_R_bonus_popularity }
	set_temp_variable = { RD_D_popularity = RD_D_bonus_popularity }
	set_temp_variable = { NPP_L_popularity = NPP_L_bonus_popularity }
	set_temp_variable = { NPP_C_popularity = NPP_C_bonus_popularity }
	set_temp_variable = { NPP_R_popularity = NPP_Y_bonus_popularity }
	set_temp_variable = { NPP_FR_popularity = NPP_FR_bonus_popularity }
	#################################################################################################################
	#1
	#convert temp faction pops into percentages based on their importance of the faction
	#add together RD faction pops, to make a total
	set_temp_variable = { RD_total_pop = RD_R_popularity }
	add_to_temp_variable = { RD_total_pop = RD_D_popularity }

	#add together NPP faction pops, to make a total
	set_temp_variable = { NPP_total_pop = NPP_L_popularity }
	add_to_temp_variable = { NPP_total_pop = NPP_C_popularity }
	add_to_temp_variable = { NPP_total_pop = NPP_R_popularity }
	add_to_temp_variable = { NPP_total_pop = NPP_FR_popularity }

	#divide the temporary faction variables with the sum of its party's factions' popularity
	divide_temp_variable = { RD_R_popularity = RD_total_pop }
	divide_temp_variable = { RD_D_popularity = RD_total_pop }
	divide_temp_variable = { NPP_L_popularity = NPP_total_pop }
	divide_temp_variable = { NPP_C_popularity = NPP_total_pop }
	divide_temp_variable = { NPP_R_popularity = NPP_total_pop }
	divide_temp_variable = { NPP_FR_popularity = NPP_total_pop }
	#################################################################
	#2
	#select the faction that will run for each party
	set_temp_variable = { RD_R_primary_popularity = RD_R_popularity }
	set_temp_variable = { RD_D_primary_popularity = RD_D_popularity }
	set_temp_variable = { NPP_L_primary_popularity = NPP_L_popularity }
	set_temp_variable = { NPP_C_primary_popularity = NPP_C_popularity }
	set_temp_variable = { NPP_FR_primary_popularity = NPP_FR_popularity }
	set_temp_variable = { NPP_R_primary_popularity = NPP_R_popularity }

	incumbency_bonus_1_primary = yes
	presidential_penalty_primary = yes
	opposition_bonus_1_primary = yes

	if = {
		limit = {
			check_variable = { RD_R_primary_popularity > RD_D_primary_popularity }
		}
		set_variable = { RD_senate_candidate = 1 }
	}
	else_if = {
		limit = {
			check_variable = { RD_D_primary_popularity > RD_R_primary_popularity }
		}
		set_variable = { RD_senate_candidate = 2 }
	}
	else = {
		set_variable = { RD_senate_candidate = 1 }
	}

	if = {
		limit = {
			AND = {
				check_variable = { NPP_L_primary_popularity > NPP_C_primary_popularity }
				check_variable = { NPP_L_primary_popularity > NPP_R_primary_popularity }
				check_variable = { NPP_L_primary_popularity > NPP_FR_primary_popularity }
			}
		}
		set_variable = { NPP_senate_candidate = 3 }
	}
	else_if = {
		limit = {
			AND = {
				check_variable = { NPP_C_primary_popularity > NPP_L_primary_popularity }
				check_variable = { NPP_C_primary_popularity > NPP_R_primary_popularity }
				check_variable = { NPP_C_primary_popularity > NPP_FR_primary_popularity }
			}
		}
		set_variable = { NPP_senate_candidate = 4 }
	}
	else_if = {
		limit = {
			AND = {
				check_variable = { NPP_R_primary_popularity > NPP_L_primary_popularity }
				check_variable = { NPP_R_primary_popularity > NPP_C_primary_popularity }
				check_variable = { NPP_R_primary_popularity > NPP_FR_primary_popularity }
			}
		}
		set_variable = { NPP_senate_candidate = 5 }
	}
	else_if = {
		limit = {
			AND = {
				check_variable = { NPP_FR_primary_popularity > NPP_L_primary_popularity }
				check_variable = { NPP_FR_primary_popularity > NPP_C_primary_popularity }
				check_variable = { NPP_FR_primary_popularity > NPP_R_primary_popularity }
			}
		}
		set_variable = { NPP_senate_candidate = 6 }
	}
	else_if = {
		limit = {
			check_variable = { NPP_C_primary_popularity > NPP_FR_primary_popularity }
		}
		set_variable = { NPP_senate_candidate = 4 }
	}
	else_if = {
		limit = {
			check_variable = { NPP_FR_primary_popularity > NPP_C_primary_popularity }
		}
		set_variable = { NPP_senate_candidate = 6 }
	}
	else = {
		set_variable = { NPP_senate_candidate = 4 }
	}


	################################################################
	#3
	#make unity into percentages

	set_temp_variable = { temp_RD_pop = RD_popularity }
	set_temp_variable = { temp_NPP_pop = NPP_popularity }
	set_temp_variable = { total_party_pop = RD_popularity }
	add_to_temp_variable = { total_party_pop = NPP_popularity }

	divide_temp_variable = { temp_RD_pop = total_party_pop }
	divide_temp_variable = { temp_NPP_pop = total_party_pop }

	set_temp_variable = { temp_RD_unity = ROOT.USA_RD_Unity }
	set_temp_variable = { temp_NPP_unity = ROOT.USA_NPP_Unity }
	divide_temp_variable = { temp_NPP_unity = @MAXIMUM_UNITY }
	divide_temp_variable = { temp_RD_unity = @MAXIMUM_UNITY }
	set_temp_variable = { temp_RD_disunity = 1 }
	set_temp_variable = { temp_NPP_disunity = 1 }
	subtract_from_temp_variable = { temp_RD_disunity = temp_RD_unity }
	subtract_from_temp_variable = { temp_NPP_disunity = temp_NPP_unity }

	#multiply each faction variable with RD_pop percentage (done in #2), and then with its party unity (made into percentage in #3)
	#RD-D
	multiply_temp_variable = { RD_R_popularity = temp_RD_pop }
	set_temp_variable = { RD_R_defectors = RD_R_popularity }
	multiply_temp_variable = { RD_R_popularity = temp_RD_unity }
	multiply_temp_variable = { RD_R_defectors = temp_RD_disunity }
	#RD-R
	multiply_temp_variable = { RD_D_popularity = temp_RD_pop }
	set_temp_variable = { RD_D_defectors = RD_D_popularity }
	multiply_temp_variable = { RD_D_popularity = temp_RD_unity }
	multiply_temp_variable = { RD_D_defectors = temp_RD_disunity }
	#NPP-R
	multiply_temp_variable = { NPP_R_popularity = temp_NPP_pop }
	#NPP-FR
	multiply_temp_variable = { NPP_FR_popularity = temp_NPP_pop }
	set_temp_variable = { NPP_FR_defectors = NPP_FR_popularity }
	multiply_temp_variable = { NPP_FR_popularity = temp_NPP_unity }
	multiply_temp_variable = { NPP_FR_defectors = temp_NPP_disunity }
	#NPP-C
	multiply_temp_variable = { NPP_C_popularity = temp_NPP_pop }
	set_temp_variable = { NPP_C_defectors = NPP_C_popularity }
	multiply_temp_variable = { NPP_C_popularity = temp_NPP_unity }
	multiply_temp_variable = { NPP_C_defectors = temp_NPP_disunity }
	#NPP-L
	multiply_temp_variable = { NPP_L_popularity = temp_NPP_pop }

	#etcetera boni
	incumbency_bonus_1 = yes
	presidential_penalty = yes
	opposition_bonus_1 = yes
	####################################################################################

	#pick final winner
	set_variable = { RD_senate_final_popularity = RD_R_popularity }
	add_to_variable = { RD_senate_final_popularity = RD_D_popularity }
	set_variable = { NPP_senate_final_popularity = NPP_C_popularity }
	add_to_variable = { NPP_senate_final_popularity = NPP_FR_popularity }

	if = {
		limit = {
			check_variable = { RD_senate_candidate = 1 }
		}
		add_to_variable = { RD_senate_final_popularity = RD_R_defectors }

		if = {
			limit = {
				check_variable = { NPP_senate_candidate = 3 }
			}
			add_to_variable = { RD_senate_final_popularity = RD_D_defectors }
			add_to_variable = { RD_senate_final_popularity = NPP_FR_defectors }
			add_to_variable = { RD_senate_final_popularity = NPP_R_popularity }
			add_to_variable = { RD_senate_final_popularity = NPP_C_defectors }
			add_to_variable = { NPP_senate_final_popularity = NPP_L_popularity }
		}
		else_if = {
			limit = {
				check_variable = { NPP_senate_candidate = 4 }
			}
			add_to_variable = { RD_senate_final_popularity = RD_D_defectors }
			add_to_variable = { RD_senate_final_popularity = NPP_FR_defectors }
			add_to_variable = { RD_senate_final_popularity = NPP_R_popularity }
			add_to_variable = { NPP_senate_final_popularity = NPP_C_defectors }
			add_to_variable = { NPP_senate_final_popularity = NPP_L_popularity }
		}
		else_if = {
			limit = {
				check_variable = { NPP_senate_candidate = 5 }
			}
			add_to_variable = { RD_senate_final_popularity = RD_D_defectors }
			add_to_variable = { RD_senate_final_popularity = NPP_FR_defectors }
			add_to_variable = { NPP_senate_final_popularity = NPP_R_popularity }
			add_to_variable = { RD_senate_final_popularity = NPP_C_defectors }
			add_to_variable = { RD_senate_final_popularity = NPP_L_popularity }
		}
		else_if = {
			limit = {
				check_variable = { NPP_senate_candidate = 6 }
			}
			add_to_variable = { NPP_senate_final_popularity = RD_D_defectors }
			add_to_variable = { NPP_senate_final_popularity = NPP_FR_defectors }
			add_to_variable = { NPP_senate_final_popularity = NPP_R_popularity }
			add_to_variable = { RD_senate_final_popularity = NPP_C_defectors }
			add_to_variable = { RD_senate_final_popularity = NPP_L_popularity }
		}
	}
	else_if = {
		limit = {
			check_variable = { RD_senate_candidate = 2 }
		}
		add_to_variable = { RD_senate_final_popularity = RD_D_defectors }

		if = {
			limit = {
				check_variable = { NPP_senate_candidate = 3 }
			}
			add_to_variable = { RD_senate_final_popularity = RD_R_defectors }
			add_to_variable = { RD_senate_final_popularity = NPP_FR_defectors }
			add_to_variable = { RD_senate_final_popularity = NPP_R_popularity }
			add_to_variable = { RD_senate_final_popularity = NPP_C_defectors }
			add_to_variable = { NPP_senate_final_popularity = NPP_L_popularity }
		}
		else_if = {
			limit = {
				check_variable = { NPP_senate_candidate = 4 }
			}
			add_to_variable = { NPP_senate_final_popularity = RD_R_defectors }
			add_to_variable = { RD_senate_final_popularity = NPP_FR_defectors }
			add_to_variable = { RD_senate_final_popularity = NPP_R_popularity }
			add_to_variable = { NPP_senate_final_popularity = NPP_C_defectors }
			add_to_variable = { NPP_senate_final_popularity = NPP_L_popularity }
		}
		else_if = {
			limit = {
				check_variable = { NPP_senate_candidate = 5 }
			}
			add_to_variable = { RD_senate_final_popularity = RD_R_defectors }
			add_to_variable = { RD_senate_final_popularity = NPP_FR_defectors }
			add_to_variable = { NPP_senate_final_popularity = NPP_R_popularity }
			add_to_variable = { RD_senate_final_popularity = NPP_C_defectors }
			add_to_variable = { RD_senate_final_popularity = NPP_L_popularity }
		}
		else_if = {
			limit = {
				check_variable = { NPP_senate_candidate = 6 }
			}
			add_to_variable = { RD_senate_final_popularity = RD_R_defectors }
			add_to_variable = { NPP_senate_final_popularity = NPP_FR_defectors }
			add_to_variable = { NPP_senate_final_popularity = NPP_R_popularity }
			add_to_variable = { RD_senate_final_popularity = NPP_C_defectors }
			add_to_variable = { RD_senate_final_popularity = NPP_L_popularity }
		}
	}
}
#####################################################################################

USA_pick_senator_1_in_state	= {
	# log = "[This.GetName]: senator_1 is [?senator_1] at start of pick senator"
	# log = "[This.GetName]: RD_senate_final_popularity is [?RD_senate_final_popularity] and NPP_senate_final_popularity is [?NPP_senate_final_popularity]"
	#For determining which party gained and which lost
	if = {
		limit = { check_variable = { senator_1 = 1 } }
		ROOT = { add_to_variable = { RD_R_change = -1 } }
	}
	else_if = {
		limit = { check_variable = { senator_1 = 2 } }
		ROOT = { add_to_variable = { RD_D_change = -1 } }
	}
	else_if = {
		limit = { check_variable = { senator_1 = 3 } }
		ROOT = { add_to_variable = { NPP_L_change = -1 } }
	}
	else_if = {
		limit = { check_variable = { senator_1 = 4 } }
		ROOT = { add_to_variable = { NPP_C_change = -1 } }
	}
	else_if = {
		limit = { check_variable = { senator_1 = 5 } }
		ROOT = { add_to_variable = { NPP_R_change = -1 } }
	}
	else_if = {
		limit = { check_variable = { senator_1 = 6 } }
		ROOT = { add_to_variable = { NPP_FR_change = -1 } }
	}
	set_variable = { prev_senator_1 = senator_1 }
	set_variable = { senator_1 = 0 }
	if = {
		limit = {
			check_variable = { RD_senate_final_popularity > NPP_senate_final_popularity }
		}
		if = {
			limit = {
				check_variable = { RD_senate_candidate = 1 }
			}
			set_variable = { senator_1 = 1 }
			# log = "[This.GetName] elected [?senator_1]"
		}
		else = {
			set_variable = { senator_1 = 2 }
			# log = "[This.GetName] elected [?senator_1]"
		}
		if = {
			limit = {
				THIS = { state = 364 }
				USA = { has_country_flag = USA_64_C_NPP }
			}
			set_variable = { senator_1 = 6 }
		}
	}
	else_if = {
		limit = {
			check_variable = { NPP_senate_final_popularity > RD_senate_final_popularity }
		}
		if = {
			limit = {
				check_variable = { NPP_senate_candidate = 3 }
			}
			set_variable = { senator_1 = 3 }
			# log = "[This.GetName] elected [?senator_1]"
		}
		else_if = {
			limit = {
				check_variable = { NPP_senate_candidate = 4 }
			}
			set_variable = { senator_1 = 4 }
			# log = "[This.GetName] elected [?senator_1]"
		}
		else_if = {
			limit = {
				check_variable = { NPP_senate_candidate = 5 }
			}
			set_variable = { senator_1 = 5 }
			# log = "[This.GetName] elected [?senator_1]"
		}
		else_if = {
			limit = {
				check_variable = { NPP_senate_candidate = 6 }
			}
			set_variable = { senator_1 = 6 }
			# log = "[This.GetName] elected [?senator_1]"
		}
		if = {
			limit = {
				THIS = { state = 364 }
				USA = { has_country_flag = USA_64_C_NPP }
			}
			set_variable = { senator_1 = 6 }
		}
	}
	else = { #ties
		set_variable = { senator_1 = prev_senator_1 }
	}

	## log = "[This.GetName] Initial popularities RD_popularity  [?RD_popularity] | NPP_popularity [?NPP_popularity]"
	# log = "[This.GetName] Temp faction pops final: RD-R: [?RD_R_popularity] | RD-D [?RD_D_popularity] | NPP-L [?NPP_L_popularity] | NPP-C [?NPP_C_popularity] | NPP-R [?NPP_R_popularity] | NPP-FR [?NPP_FR_popularity] | Senator is [?senator_1]"

	#For determining which party gained and which lost
	#Readding now that you know what the elected senator is
	if = {
		limit = { check_variable = { senator_1 = 1 } }
		ROOT = { add_to_variable = { RD_R_change = 1 } }
	}
	else_if = {
		limit = { check_variable = { senator_1 = 2 } }
		ROOT = { add_to_variable = { RD_D_change = 1 } }
	}
	else_if = {
		limit = { check_variable = { senator_1 = 3 } }
		ROOT = { add_to_variable = { NPP_L_change = 1 } }
	}
	else_if = {
		limit = { check_variable = { senator_1 = 4 } }
		ROOT = { add_to_variable = { NPP_C_change = 1 } }
	}
	else_if = {
		limit = { check_variable = { senator_1 = 5 } }
		ROOT = { add_to_variable = { NPP_R_change = 1 } }
	}
	else_if = {
		limit = { check_variable = { senator_1 = 6 } }
		ROOT = { add_to_variable = { NPP_FR_change = 1 } }
	}
}

USA_update_senator_2_in_state = {
	############################################################################################################

	#make all parametres into percentages, relative to domain. factions are added together within their parties, not between parties
	# then find which faction popularity is the highest
	#	(faction's relative strength in party*party unity*party's relative strength in state) is the ultimate equation
	#1. factions relative strength				<party>_<faction>_popularity
	#2. party's relative strength in state 		<party>_total_pop
	#3. unity 									temp_<party>_unity

	#set temp variables to be used in the election
	set_temp_variable = { RD_R_popularity = RD_R_bonus_popularity }
	set_temp_variable = { RD_D_popularity = RD_D_bonus_popularity }
	set_temp_variable = { NPP_L_popularity = NPP_L_bonus_popularity }
	set_temp_variable = { NPP_C_popularity = NPP_C_bonus_popularity }
	set_temp_variable = { NPP_R_popularity = NPP_Y_bonus_popularity }
	set_temp_variable = { NPP_FR_popularity = NPP_FR_bonus_popularity }
	#################################################################################################################
	#1
	#convert temp faction pops into percentages based on their importance of the faction
	#add together RD faction pops, to make a total
	set_temp_variable = { RD_total_pop = RD_R_popularity }
	add_to_temp_variable = { RD_total_pop = RD_D_popularity }

	#add together NPP faction pops, to make a total
	set_temp_variable = { NPP_total_pop = NPP_L_popularity }
	add_to_temp_variable = { NPP_total_pop = NPP_C_popularity }
	add_to_temp_variable = { NPP_total_pop = NPP_R_popularity }
	add_to_temp_variable = { NPP_total_pop = NPP_FR_popularity }

	#divide the temporary faction variables with the sum of its party's factions' popularity
	divide_temp_variable = { RD_R_popularity = RD_total_pop }
	divide_temp_variable = { RD_D_popularity = RD_total_pop }
	divide_temp_variable = { NPP_L_popularity = NPP_total_pop }
	divide_temp_variable = { NPP_C_popularity = NPP_total_pop }
	divide_temp_variable = { NPP_R_popularity = NPP_total_pop }
	divide_temp_variable = { NPP_FR_popularity = NPP_total_pop }
	#################################################################
	#2
	#select the faction that will run for each party
	set_temp_variable = { RD_R_primary_popularity = RD_R_popularity }
	set_temp_variable = { RD_D_primary_popularity = RD_D_popularity }
	set_temp_variable = { NPP_L_primary_popularity = NPP_L_popularity }
	set_temp_variable = { NPP_C_primary_popularity = NPP_C_popularity }
	set_temp_variable = { NPP_FR_primary_popularity = NPP_FR_popularity }
	set_temp_variable = { NPP_R_primary_popularity = NPP_R_popularity }

	incumbency_bonus_2_primary = yes
	presidential_penalty_primary = yes
	opposition_bonus_2_primary = yes

	if = {
		limit = {
			check_variable = { RD_R_primary_popularity > RD_D_primary_popularity }
		}
		set_variable = { RD_senate_candidate = 1 }
	}
	else_if = {
		limit = {
			check_variable = { RD_D_primary_popularity > RD_R_primary_popularity }
		}
		set_variable = { RD_senate_candidate = 2 }
	}
	else = {
		set_variable = { RD_senate_candidate = 1 }
	}

	if = {
		limit = {
			AND = {
				check_variable = { NPP_L_primary_popularity > NPP_C_primary_popularity }
				check_variable = { NPP_L_primary_popularity > NPP_R_primary_popularity }
				check_variable = { NPP_L_primary_popularity > NPP_FR_primary_popularity }
			}
		}
		set_variable = { NPP_senate_candidate = 3 }
	}
	else_if = {
		limit = {
			AND = {
				check_variable = { NPP_C_primary_popularity > NPP_L_primary_popularity }
				check_variable = { NPP_C_primary_popularity > NPP_R_primary_popularity }
				check_variable = { NPP_C_primary_popularity > NPP_FR_primary_popularity }
			}
		}
		set_variable = { NPP_senate_candidate = 4 }
	}
	else_if = {
		limit = {
			AND = {
				check_variable = { NPP_R_primary_popularity > NPP_L_primary_popularity }
				check_variable = { NPP_R_primary_popularity > NPP_C_primary_popularity }
				check_variable = { NPP_R_primary_popularity > NPP_FR_primary_popularity }
			}
		}
		set_variable = { NPP_senate_candidate = 5 }
	}
	else_if = {
		limit = {
			AND = {
				check_variable = { NPP_FR_primary_popularity > NPP_L_primary_popularity }
				check_variable = { NPP_FR_primary_popularity > NPP_C_primary_popularity }
				check_variable = { NPP_FR_primary_popularity > NPP_R_primary_popularity }
			}
		}
		set_variable = { NPP_senate_candidate = 6 }
	}
	else_if = {
		limit = {
			check_variable = { NPP_C_primary_popularity > NPP_FR_primary_popularity }
		}
		set_variable = { NPP_senate_candidate = 4 }
	}
	else_if = {
		limit = {
			check_variable = { NPP_FR_primary_popularity > NPP_C_primary_popularity }
		}
		set_variable = { NPP_senate_candidate = 6 }
	}
	else = {
		set_variable = { NPP_senate_candidate = 4 }
	}


	################################################################
	#3
	#make unity into percentages

	set_temp_variable = { temp_RD_pop = RD_popularity }
	set_temp_variable = { temp_NPP_pop = NPP_popularity }
	set_temp_variable = { total_party_pop = RD_popularity }
	add_to_temp_variable = { total_party_pop = NPP_popularity }

	divide_temp_variable = { temp_RD_pop = total_party_pop }
	divide_temp_variable = { temp_NPP_pop = total_party_pop }

	set_temp_variable = { temp_RD_unity = ROOT.USA_RD_Unity }
	set_temp_variable = { temp_NPP_unity = ROOT.USA_NPP_Unity }
	divide_temp_variable = { temp_NPP_unity = @MAXIMUM_UNITY }
	divide_temp_variable = { temp_RD_unity = @MAXIMUM_UNITY }
	set_temp_variable = { temp_RD_disunity = 1 }
	set_temp_variable = { temp_NPP_disunity = 1 }
	subtract_from_temp_variable = { temp_RD_disunity = temp_RD_unity }
	subtract_from_temp_variable = { temp_NPP_disunity = temp_NPP_unity }

	#multiply each faction variable with RD_pop percentage (done in #2), and then with its party unity (made into percentage in #3)
	#RD-D
	multiply_temp_variable = { RD_R_popularity = temp_RD_pop }
	set_temp_variable = { RD_R_defectors = RD_R_popularity }
	multiply_temp_variable = { RD_R_popularity = temp_RD_unity }
	multiply_temp_variable = { RD_R_defectors = temp_RD_disunity }
	#RD-R
	multiply_temp_variable = { RD_D_popularity = temp_RD_pop }
	set_temp_variable = { RD_D_defectors = RD_D_popularity }
	multiply_temp_variable = { RD_D_popularity = temp_RD_unity }
	multiply_temp_variable = { RD_D_defectors = temp_RD_disunity }
	#NPP-R
	multiply_temp_variable = { NPP_R_popularity = temp_NPP_pop }
	#NPP-FR
	multiply_temp_variable = { NPP_FR_popularity = temp_NPP_pop }
	set_temp_variable = { NPP_FR_defectors = NPP_FR_popularity }
	multiply_temp_variable = { NPP_FR_popularity = temp_NPP_unity }
	multiply_temp_variable = { NPP_FR_defectors = temp_NPP_disunity }
	#NPP-C
	multiply_temp_variable = { NPP_C_popularity = temp_NPP_pop }
	set_temp_variable = { NPP_C_defectors = NPP_C_popularity }
	multiply_temp_variable = { NPP_C_popularity = temp_NPP_unity }
	multiply_temp_variable = { NPP_C_defectors = temp_NPP_disunity }
	#NPP-L
	multiply_temp_variable = { NPP_L_popularity = temp_NPP_pop }

	#etcetera boni
	incumbency_bonus_2 = yes
	presidential_penalty = yes
	opposition_bonus_2 = yes
	####################################################################################

	#pick final winner
	set_variable = { RD_senate_final_popularity = RD_R_popularity }
	add_to_variable = { RD_senate_final_popularity = RD_D_popularity }
	set_variable = { NPP_senate_final_popularity = NPP_C_popularity }
	add_to_variable = { NPP_senate_final_popularity = NPP_FR_popularity }

	if = {
		limit = {
			check_variable = { RD_senate_candidate = 1 }
		}
		add_to_variable = { RD_senate_final_popularity = RD_R_defectors }

		if = {
			limit = {
				check_variable = { NPP_senate_candidate = 3 }
			}
			add_to_variable = { RD_senate_final_popularity = RD_D_defectors }
			add_to_variable = { RD_senate_final_popularity = NPP_FR_defectors }
			add_to_variable = { RD_senate_final_popularity = NPP_R_popularity }
			add_to_variable = { RD_senate_final_popularity = NPP_C_defectors }
			add_to_variable = { NPP_senate_final_popularity = NPP_L_popularity }
		}
		else_if = {
			limit = {
				check_variable = { NPP_senate_candidate = 4 }
			}
			add_to_variable = { RD_senate_final_popularity = RD_D_defectors }
			add_to_variable = { RD_senate_final_popularity = NPP_FR_defectors }
			add_to_variable = { RD_senate_final_popularity = NPP_R_popularity }
			add_to_variable = { NPP_senate_final_popularity = NPP_C_defectors }
			add_to_variable = { NPP_senate_final_popularity = NPP_L_popularity }
		}
		else_if = {
			limit = {
				check_variable = { NPP_senate_candidate = 5 }
			}
			add_to_variable = { RD_senate_final_popularity = RD_D_defectors }
			add_to_variable = { RD_senate_final_popularity = NPP_FR_defectors }
			add_to_variable = { NPP_senate_final_popularity = NPP_R_popularity }
			add_to_variable = { RD_senate_final_popularity = NPP_C_defectors }
			add_to_variable = { RD_senate_final_popularity = NPP_L_popularity }
		}
		else_if = {
			limit = {
				check_variable = { NPP_senate_candidate = 6 }
			}
			add_to_variable = { NPP_senate_final_popularity = RD_D_defectors }
			add_to_variable = { NPP_senate_final_popularity = NPP_FR_defectors }
			add_to_variable = { NPP_senate_final_popularity = NPP_R_popularity }
			add_to_variable = { RD_senate_final_popularity = NPP_C_defectors }
			add_to_variable = { RD_senate_final_popularity = NPP_L_popularity }
		}
	}
	else_if = {
		limit = {
			check_variable = { RD_senate_candidate = 2 }
		}
		add_to_variable = { RD_senate_final_popularity = RD_D_defectors }

		if = {
			limit = {
				check_variable = { NPP_senate_candidate = 3 }
			}
			add_to_variable = { RD_senate_final_popularity = RD_R_defectors }
			add_to_variable = { RD_senate_final_popularity = NPP_FR_defectors }
			add_to_variable = { RD_senate_final_popularity = NPP_R_popularity }
			add_to_variable = { RD_senate_final_popularity = NPP_C_defectors }
			add_to_variable = { NPP_senate_final_popularity = NPP_L_popularity }
		}
		else_if = {
			limit = {
				check_variable = { NPP_senate_candidate = 4 }
			}
			add_to_variable = { NPP_senate_final_popularity = RD_R_defectors }
			add_to_variable = { RD_senate_final_popularity = NPP_FR_defectors }
			add_to_variable = { RD_senate_final_popularity = NPP_R_popularity }
			add_to_variable = { NPP_senate_final_popularity = NPP_C_defectors }
			add_to_variable = { NPP_senate_final_popularity = NPP_L_popularity }
		}
		else_if = {
			limit = {
				check_variable = { NPP_senate_candidate = 5 } # NPP-Yockey
			}
			add_to_variable = { RD_senate_final_popularity = RD_R_defectors }
			add_to_variable = { RD_senate_final_popularity = NPP_FR_defectors }
			add_to_variable = { NPP_senate_final_popularity = NPP_R_popularity }
			add_to_variable = { RD_senate_final_popularity = NPP_C_defectors }
			add_to_variable = { RD_senate_final_popularity = NPP_L_popularity }
		}
		else_if = {
			limit = {
				check_variable = { NPP_senate_candidate = 6 } # NPP-FR
			}
			add_to_variable = { RD_senate_final_popularity = RD_R_defectors }
			add_to_variable = { NPP_senate_final_popularity = NPP_FR_defectors }
			add_to_variable = { NPP_senate_final_popularity = NPP_R_popularity }
			add_to_variable = { RD_senate_final_popularity = NPP_C_defectors }
			add_to_variable = { RD_senate_final_popularity = NPP_L_popularity }
		}
	}
}
	#####################################################################################
USA_pick_senator_2_in_state	= {
	# log = "[This.GetName]: senator_2 is [?senator_2] at start of pick senator"
	# log = "[This.GetName]: RD_senate_final_popularity is [?RD_senate_final_popularity] and NPP_senate_final_popularity is [?NPP_senate_final_popularity]"
	#For determining which party gained and which lost
	if = {
		limit = { check_variable = { senator_2 = 1 } }
		ROOT = { add_to_variable = { RD_R_change = -1 } }
	}
	else_if = {
		limit = { check_variable = { senator_2 = 2 } }
		ROOT = { add_to_variable = { RD_D_change = -1 } }
	}
	else_if = {
		limit = { check_variable = { senator_2 = 3 } }
		ROOT = { add_to_variable = { NPP_L_change = -1 } }
	}
	else_if = {
		limit = { check_variable = { senator_2 = 4 } }
		ROOT = { add_to_variable = { NPP_C_change = -1 } }
	}
	else_if = {
		limit = { check_variable = { senator_2 = 5 } }
		ROOT = { add_to_variable = { NPP_R_change = -1 } }
	}
	else_if = {
		limit = { check_variable = { senator_2 = 6 } }
		ROOT = { add_to_variable = { NPP_FR_change = -1 } }
	}
	set_variable = { prev_senator_2 = senator_2 }
	if = {
		limit = {
			check_variable = { RD_senate_final_popularity > NPP_senate_final_popularity }
		}
		if = {
			limit = {
				check_variable = { RD_senate_candidate = 1 }
			}
			set_variable = { senator_2 = 1 }
			# log = "[This.GetName] elected [?senator_2]"
		}
		else = {
			set_variable = { senator_2 = 2 }
			# log = "[This.GetName] elected [?senator_2]"
		}
	}
	else_if = {
		limit = {
			check_variable = { NPP_senate_final_popularity > RD_senate_final_popularity }
		}
		if = {
			limit = {
				check_variable = { NPP_senate_candidate = 3 }
			}
			set_variable = { senator_2 = 3 }
			# log = "[This.GetName] elected [?senator_2]"
		}
		else_if = {
			limit = {
				check_variable = { NPP_senate_candidate = 4 }
			}
			set_variable = { senator_2 = 4 }
			# log = "[This.GetName] elected [?senator_2]"
		}
		else_if = {
			limit = {
				check_variable = { NPP_senate_candidate = 5 }
			}
			set_variable = { senator_2 = 5 }
			# log = "[This.GetName] elected [?senator_2]"
		}
		else_if = {
			limit = {
				check_variable = { NPP_senate_candidate = 6 }

			}
			set_variable = { senator_2 = 6 }
			# log = "[This.GetName] elected [?senator_2]"
		}


	}
	else = { #ties
		set_variable = { senator_2 = prev_senator_2 }
	}

	## log = "[This.GetName] Initial popularities RD_popularity  [?RD_popularity] | NPP_popularity [?NPP_popularity]"
	# log = "[This.GetName] Temp faction pops final: RD-R: [?RD_R_popularity] | RD-D [?RD_D_popularity] | NPP-L [?NPP_L_popularity] | NPP-C [?NPP_C_popularity] | NPP-R [?NPP_R_popularity] | NPP-FR [?NPP_FR_popularity] | Senator is [?senator_2]"

	#For determining which party gained and which lost
	#Readding now that you know what the elected senator is
	if = {
		limit = { check_variable = { senator_2 = 1 } }
		ROOT = { add_to_variable = { RD_R_change = 1 } }
	}
	else_if = {
		limit = { check_variable = { senator_2 = 2 } }
		ROOT = { add_to_variable = { RD_D_change = 1 } }
	}
	else_if = {
		limit = { check_variable = { senator_2 = 3 } }
		ROOT = { add_to_variable = { NPP_L_change = 1 } }
	}
	else_if = {
		limit = { check_variable = { senator_2 = 4 } }
		ROOT = { add_to_variable = { NPP_C_change = 1 } }
	}
	else_if = {
		limit = { check_variable = { senator_2 = 5 } }
		ROOT = { add_to_variable = { NPP_R_change = 1 } }
	}
	else_if = {
		limit = { check_variable = { senator_2 = 6 } }
		ROOT = { add_to_variable = { NPP_FR_change = 1 } }
	}
}

############################################
############################################
############################################
############################################
############################################
presidential_penalty = {
	if = {
		limit = { check_variable = { ROOT.presidents_party = 1 } }
		add_to_temp_variable = { RD_R_popularity = @SENATE_SITTING_PRESIDENT_PENALTY }
	}
	else_if = {
		limit = { check_variable = { ROOT.presidents_party = 2 } }
		add_to_temp_variable = { RD_D_popularity = @SENATE_SITTING_PRESIDENT_PENALTY }
	}
	else_if = {
		limit = { check_variable = { ROOT.presidents_party = 3 } }
		add_to_temp_variable = { NPP_L_popularity = @SENATE_SITTING_PRESIDENT_PENALTY }
	}
	else_if = {
		limit = { check_variable = { ROOT.presidents_party = 4 } }
		add_to_temp_variable = { NPP_C_popularity = @SENATE_SITTING_PRESIDENT_PENALTY }
	}
	else_if = {
		limit = { check_variable = { ROOT.presidents_party = 5 } }
		add_to_temp_variable = { NPP_R_popularity = @SENATE_SITTING_PRESIDENT_PENALTY }
	}
	else_if = {
		limit = { check_variable = { ROOT.presidents_party = 6 } }
		add_to_temp_variable = { NPP_FR_popularity = @SENATE_SITTING_PRESIDENT_PENALTY }
	}
}
incumbency_bonus_1 = {
	if = {
		limit = { check_variable = { prev_senator_1 = 1 } }
		set_temp_variable = { incumbency_bonus = ROOT.party_popularity@liberalism }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_1 }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_2 }
		clamp_temp_variable = {
			var = incumbency_bonus
			min = @INCUMBENCY_BONUS_CLAMP_MIN
			max = @INCUMBENCY_BONUS_CLAMP_MAX
		}
		add_to_temp_variable = { RD_R_popularity = incumbency_bonus }
	}
	else_if = {
		limit = { check_variable = { prev_senator_1 = 2 } }
		set_temp_variable = { incumbency_bonus = ROOT.party_popularity@conservatism }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_1 }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_2 }
		clamp_temp_variable = {
			var = incumbency_bonus
			min = @INCUMBENCY_BONUS_CLAMP_MIN
			max = @INCUMBENCY_BONUS_CLAMP_MAX
		}
		add_to_temp_variable = { RD_D_popularity = incumbency_bonus }
	}
	else_if = {
		limit = { check_variable = { prev_senator_1 = 3 } }
		set_temp_variable = { incumbency_bonus = ROOT.party_popularity@communist }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_1 }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_2 }
		clamp_temp_variable = {
			var = incumbency_bonus
			min = @INCUMBENCY_BONUS_CLAMP_MIN
			max = @INCUMBENCY_BONUS_CLAMP_MAX
		}
		add_to_temp_variable = { NPP_L_popularity = incumbency_bonus }
	}
	else_if = {
		limit = { check_variable = { prev_senator_1 = 4 } }
		set_temp_variable = { incumbency_bonus = ROOT.party_popularity@progressivism }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_1 }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_2 }
		clamp_temp_variable = {
			var = incumbency_bonus
			min = @INCUMBENCY_BONUS_CLAMP_MIN
			max = @INCUMBENCY_BONUS_CLAMP_MAX
		}
		add_to_temp_variable = { NPP_C_popularity = incumbency_bonus }
	}
	else_if = {
		limit = { check_variable = { prev_senator_1 = 5 } }
		set_temp_variable = { incumbency_bonus = ROOT.party_popularity@paternalism }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_1 }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_2 }
		clamp_temp_variable = {
			var = incumbency_bonus
			min = @INCUMBENCY_BONUS_CLAMP_MIN
			max = @INCUMBENCY_BONUS_CLAMP_MAX
		}
		add_to_temp_variable = { NPP_FR_popularity = incumbency_bonus }
	}
	else_if = {
		limit = { check_variable = { prev_senator_1 = 6 } }
		set_temp_variable = { incumbency_bonus = ROOT.party_popularity@national_socialism }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_1 }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_2 }
		clamp_temp_variable = {
			var = incumbency_bonus
			min = @INCUMBENCY_BONUS_CLAMP_MIN
			max = @INCUMBENCY_BONUS_CLAMP_MAX
		}
		add_to_temp_variable = { NPP_R_popularity = incumbency_bonus }
	}
}

incumbency_bonus_2 = {
	if = {
		limit = { check_variable = { prev_senator_2 = 1 } }
		set_temp_variable = { incumbency_bonus = ROOT.party_popularity@liberalism }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_1 }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_2 }
		clamp_temp_variable = {
			var = incumbency_bonus
			min = @INCUMBENCY_BONUS_CLAMP_MIN
			max = @INCUMBENCY_BONUS_CLAMP_MAX
		}
		add_to_temp_variable = { RD_R_popularity = incumbency_bonus }
	}
	else_if = {
		limit = { check_variable = { prev_senator_2 = 2 } }
		set_temp_variable = { incumbency_bonus = ROOT.party_popularity@conservatism }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_1 }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_2 }
		clamp_temp_variable = {
			var = incumbency_bonus
			min = @INCUMBENCY_BONUS_CLAMP_MIN
			max = @INCUMBENCY_BONUS_CLAMP_MAX
		}
		add_to_temp_variable = { RD_D_popularity = incumbency_bonus }
	}
	else_if = {
		limit = { check_variable = { prev_senator_2 = 3 } }
		set_temp_variable = { incumbency_bonus = ROOT.party_popularity@communist }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_1 }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_2 }
		clamp_temp_variable = {
			var = incumbency_bonus
			min = @INCUMBENCY_BONUS_CLAMP_MIN
			max = @INCUMBENCY_BONUS_CLAMP_MAX
		}
		add_to_temp_variable = { NPP_L_popularity = incumbency_bonus }
	}
	else_if = {
		limit = { check_variable = { prev_senator_2 = 4 } }
		set_temp_variable = { incumbency_bonus = ROOT.party_popularity@progressivism }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_1 }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_2 }
		clamp_temp_variable = {
			var = incumbency_bonus
			min = @INCUMBENCY_BONUS_CLAMP_MIN
			max = @INCUMBENCY_BONUS_CLAMP_MAX
		}
		add_to_temp_variable = { NPP_C_popularity = incumbency_bonus }
	}
	else_if = {
		limit = { check_variable = { prev_senator_2 = 5 } }
		set_temp_variable = { incumbency_bonus = ROOT.party_popularity@paternalism }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_1 }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_2 }
		clamp_temp_variable = {
			var = incumbency_bonus
			min = @INCUMBENCY_BONUS_CLAMP_MIN
			max = @INCUMBENCY_BONUS_CLAMP_MAX
		}
		add_to_temp_variable = { NPP_FR_popularity = incumbency_bonus }
	}
	else_if = {
		limit = { check_variable = { prev_senator_2 = 6 } }
		set_temp_variable = { incumbency_bonus = ROOT.party_popularity@national_socialism }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_1 }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_2 }
		clamp_temp_variable = {
			var = incumbency_bonus
			min = @INCUMBENCY_BONUS_CLAMP_MIN
			max = @INCUMBENCY_BONUS_CLAMP_MAX
		}
		add_to_temp_variable = { NPP_R_popularity = incumbency_bonus }
	}
}

opposition_bonus_1 = {
	if = {
		limit = { check_variable = { prev_senator_1 = 1 } } #RD_R
		add_to_temp_variable = { NPP_FR_popularity = @SENATE_OPPOSITION_BONUS_ADDER }
	}
	else_if = {
		limit = { check_variable = { prev_senator_1 = 2 } } #RD_D
		add_to_temp_variable = { NPP_C_popularity = @SENATE_OPPOSITION_BONUS_ADDER }

	}
	else_if = {
		limit = { check_variable = { prev_senator_1 = 3 } } #NPP_L
		add_to_temp_variable = { RD_D_popularity = @SENATE_OPPOSITION_BONUS_ADDER }
	}
	else_if = {
		limit = { check_variable = { prev_senator_1 = 4 } } #NPP_C
		add_to_temp_variable = { RD_D_popularity = @SENATE_OPPOSITION_BONUS_ADDER }
	}
	else_if = {
		limit = { check_variable = { prev_senator_1 = 5 } } #NPP_FR
		add_to_temp_variable = { RD_R_popularity = @SENATE_OPPOSITION_BONUS_ADDER }
	}
	else_if = {
		limit = { check_variable = { prev_senator_1 = 6 } } #NPP-R Yockey
		add_to_temp_variable = { RD_R_popularity = @SENATE_OPPOSITION_BONUS_ADDER }
	}
}

opposition_bonus_2 = {
	if = {
		limit = { check_variable = { prev_senator_2 = 1 } } #RD_R
		add_to_temp_variable = { NPP_FR_popularity = @SENATE_OPPOSITION_BONUS_ADDER }
	}
	else_if = {
		limit = { check_variable = { prev_senator_2 = 2 } } #RD_D
		add_to_temp_variable = { NPP_C_popularity = @SENATE_OPPOSITION_BONUS_ADDER }

	}
	else_if = {
		limit = { check_variable = { prev_senator_2 = 3 } } #NPP_L
		add_to_temp_variable = { RD_D_popularity = @SENATE_OPPOSITION_BONUS_ADDER }
	}
	else_if = {
		limit = { check_variable = { prev_senator_2 = 4 } } #NPP_C
		add_to_temp_variable = { RD_D_popularity = @SENATE_OPPOSITION_BONUS_ADDER }
	}
	else_if = {
		limit = { check_variable = { prev_senator_2 = 5 } } #NPP_FR
		add_to_temp_variable = { RD_R_popularity = @SENATE_OPPOSITION_BONUS_ADDER }
	}
	else_if = {
		limit = { check_variable = { prev_senator_2 = 6 } } #NPP-R Yockey
		add_to_temp_variable = { RD_R_popularity = @SENATE_OPPOSITION_BONUS_ADDER }
	}
}

#Primary bonuses

incumbency_bonus_1_primary = {
	if = {
		limit = { check_variable = { prev_senator_1 = 1 } }
		set_temp_variable = { incumbency_bonus = ROOT.party_popularity@liberalism }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_1 }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_2 }
		clamp_temp_variable = {
			var = incumbency_bonus
			min = @INCUMBENCY_BONUS_CLAMP_MIN
			max = @INCUMBENCY_BONUS_CLAMP_MAX
		}
		add_to_temp_variable = { RD_R_primary_popularity = incumbency_bonus }
	}
	else_if = {
		limit = { check_variable = { prev_senator_1 = 2 } }
		set_temp_variable = { incumbency_bonus = ROOT.party_popularity@conservatism }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_1 }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_2 }
		clamp_temp_variable = {
			var = incumbency_bonus
			min = @INCUMBENCY_BONUS_CLAMP_MIN
			max = @INCUMBENCY_BONUS_CLAMP_MAX
		}
		add_to_temp_variable = { RD_D_primary_popularity = incumbency_bonus }
	}
	else_if = {
		limit = { check_variable = { prev_senator_1 = 3 } }
		set_temp_variable = { incumbency_bonus = ROOT.party_popularity@communist }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_1 }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_2 }
		clamp_temp_variable = {
			var = incumbency_bonus
			min = @INCUMBENCY_BONUS_CLAMP_MIN
			max = @INCUMBENCY_BONUS_CLAMP_MAX
		}
		add_to_temp_variable = { NPP_L_primary_popularity = incumbency_bonus }
	}
	else_if = {
		limit = { check_variable = { prev_senator_1 = 4 } }
		set_temp_variable = { incumbency_bonus = ROOT.party_popularity@progressivism }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_1 }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_2 }
		clamp_temp_variable = {
			var = incumbency_bonus
			min = @INCUMBENCY_BONUS_CLAMP_MIN
			max = @INCUMBENCY_BONUS_CLAMP_MAX
		}
		add_to_temp_variable = { NPP_C_primary_popularity = incumbency_bonus }
	}
	else_if = {
		limit = { check_variable = { prev_senator_1 = 5 } }
		set_temp_variable = { incumbency_bonus = ROOT.party_popularity@paternalism }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_1 }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_2 }
		clamp_temp_variable = {
			var = incumbency_bonus
			min = @INCUMBENCY_BONUS_CLAMP_MIN
			max = @INCUMBENCY_BONUS_CLAMP_MAX
		}
		add_to_temp_variable = { NPP_FR_primary_popularity = incumbency_bonus }
	}
	else_if = {
		limit = { check_variable = { prev_senator_1 = 6 } }
		set_temp_variable = { incumbency_bonus = ROOT.party_popularity@national_socialism }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_1 }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_2 }
		clamp_temp_variable = {
			var = incumbency_bonus
			min = @INCUMBENCY_BONUS_CLAMP_MIN
			max = @INCUMBENCY_BONUS_CLAMP_MAX
		}
		add_to_temp_variable = { NPP_R_primary_popularity = incumbency_bonus }
	}
}
incumbency_bonus_2_primary = {
	if = {
		limit = { check_variable = { prev_senator_2 = 1 } }
		set_temp_variable = { incumbency_bonus = ROOT.party_popularity@liberalism }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_1 }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_2 }
		clamp_temp_variable = {
			var = incumbency_bonus
			min = @INCUMBENCY_BONUS_CLAMP_MIN
			max = @INCUMBENCY_BONUS_CLAMP_MAX
		}
		add_to_temp_variable = { RD_R_primary_popularity = incumbency_bonus }
	}
	else_if = {
		limit = { check_variable = { prev_senator_2 = 2 } }
		set_temp_variable = { incumbency_bonus = ROOT.party_popularity@conservatism }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_1 }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_2 }
		clamp_temp_variable = {
			var = incumbency_bonus
			min = @INCUMBENCY_BONUS_CLAMP_MIN
			max = @INCUMBENCY_BONUS_CLAMP_MAX
		}
		add_to_temp_variable = { RD_D_primary_popularity = incumbency_bonus }
	}
	else_if = {
		limit = { check_variable = { prev_senator_2 = 3 } }
		set_temp_variable = { incumbency_bonus = ROOT.party_popularity@communist }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_1 }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_2 }
		clamp_temp_variable = {
			var = incumbency_bonus
			min = @INCUMBENCY_BONUS_CLAMP_MIN
			max = @INCUMBENCY_BONUS_CLAMP_MAX
		}
		add_to_temp_variable = { NPP_L_primary_popularity = incumbency_bonus }
	}
	else_if = {
		limit = { check_variable = { prev_senator_2 = 4 } }
		set_temp_variable = { incumbency_bonus = ROOT.party_popularity@progressivism }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_1 }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_2 }
		clamp_temp_variable = {
			var = incumbency_bonus
			min = @INCUMBENCY_BONUS_CLAMP_MIN
			max = @INCUMBENCY_BONUS_CLAMP_MAX
		}
		add_to_temp_variable = { NPP_C_primary_popularity = incumbency_bonus }
	}
	else_if = {
		limit = { check_variable = { prev_senator_2 = 5 } }
		set_temp_variable = { incumbency_bonus = ROOT.party_popularity@paternalism }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_1 }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_2 }
		clamp_temp_variable = {
			var = incumbency_bonus
			min = @INCUMBENCY_BONUS_CLAMP_MIN
			max = @INCUMBENCY_BONUS_CLAMP_MAX
		}
		add_to_temp_variable = { NPP_FR_primary_popularity = incumbency_bonus }
	}
	else_if = {
		limit = { check_variable = { prev_senator_2 = 6 } }
		set_temp_variable = { incumbency_bonus = ROOT.party_popularity@national_socialism }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_1 }
		multiply_temp_variable = { incumbency_bonus = @SENATE_INCUMBENCY_BONUS_MULTIPLIER_2 }
		clamp_temp_variable = {
			var = incumbency_bonus
			min = @INCUMBENCY_BONUS_CLAMP_MIN
			max = @INCUMBENCY_BONUS_CLAMP_MAX
		}
		add_to_temp_variable = { NPP_R_primary_popularity = incumbency_bonus }
	}
}

opposition_bonus_1_primary = {
	if = {
		limit = { check_variable = { prev_senator_1 = 1 } } #RD_R
		add_to_temp_variable = { NPP_FR_primary_popularity = @SENATE_OPPOSITION_BONUS_ADDER }
	}
	else_if = {
		limit = { check_variable = { prev_senator_1 = 2 } } #RD_D
		add_to_temp_variable = { NPP_C_primary_popularity = @SENATE_OPPOSITION_BONUS_ADDER }

	}
	else_if = {
		limit = { check_variable = { prev_senator_1 = 3 } } #NPP_L
		add_to_temp_variable = { RD_D_primary_popularity = @SENATE_OPPOSITION_BONUS_ADDER }
	}
	else_if = {
		limit = { check_variable = { prev_senator_1 = 4 } } #NPP_C
		add_to_temp_variable = { RD_D_primary_popularity = @SENATE_OPPOSITION_BONUS_ADDER }
	}
	else_if = {
		limit = { check_variable = { prev_senator_1 = 5 } } #NPP_FR
		add_to_temp_variable = { RD_R_primary_popularity = @SENATE_OPPOSITION_BONUS_ADDER }
	}
	else_if = {
		limit = { check_variable = { prev_senator_1 = 6 } } #NPP-R Yockey
		add_to_temp_variable = { RD_R_primary_popularity = @SENATE_OPPOSITION_BONUS_ADDER }
	}
}

opposition_bonus_2_primary = {
	if = {
		limit = { check_variable = { prev_senator_2 = 1 } } #RD_R
		add_to_temp_variable = { NPP_FR_primary_popularity = @SENATE_OPPOSITION_BONUS_ADDER }
	}
	else_if = {
		limit = { check_variable = { prev_senator_2 = 2 } } #RD_D
		add_to_temp_variable = { NPP_C_primary_popularity = @SENATE_OPPOSITION_BONUS_ADDER }

	}
	else_if = {
		limit = { check_variable = { prev_senator_2 = 3 } } #NPP_L
		add_to_temp_variable = { RD_D_primary_popularity = @SENATE_OPPOSITION_BONUS_ADDER }
	}
	else_if = {
		limit = { check_variable = { prev_senator_2 = 4 } } #NPP_C
		add_to_temp_variable = { RD_D_primary_popularity = @SENATE_OPPOSITION_BONUS_ADDER }
	}
	else_if = {
		limit = { check_variable = { prev_senator_2 = 5 } } #NPP_FR
		add_to_temp_variable = { RD_R_primary_popularity = @SENATE_OPPOSITION_BONUS_ADDER }
	}
	else_if = {
		limit = { check_variable = { prev_senator_2 = 6 } } #NPP-R Yockey
		add_to_temp_variable = { RD_R_primary_popularity = @SENATE_OPPOSITION_BONUS_ADDER }
	}
}

presidential_penalty_primary = {
	if = {
		limit = { check_variable = { ROOT.presidents_party = 1 } }
		add_to_temp_variable = { RD_R_primary_popularity = @SENATE_SITTING_PRESIDENT_PENALTY }
	}
	else_if = {
		limit = { check_variable = { ROOT.presidents_party = 2 } }
		add_to_temp_variable = { RD_D_primary_popularity = @SENATE_SITTING_PRESIDENT_PENALTY }
	}
	else_if = {
		limit = { check_variable = { ROOT.presidents_party = 3 } }
		add_to_temp_variable = { NPP_L_primary_popularity = @SENATE_SITTING_PRESIDENT_PENALTY }
	}
	else_if = {
		limit = { check_variable = { ROOT.presidents_party = 4 } }
		add_to_temp_variable = { NPP_C_primary_popularity = @SENATE_SITTING_PRESIDENT_PENALTY }
	}
	else_if = {
		limit = { check_variable = { ROOT.presidents_party = 5 } }
		add_to_temp_variable = { NPP_R_primary_popularity = @SENATE_SITTING_PRESIDENT_PENALTY }
	}
	else_if = {
		limit = { check_variable = { ROOT.presidents_party = 6 } }
		add_to_temp_variable = { NPP_FR_primary_popularity = @SENATE_SITTING_PRESIDENT_PENALTY }
	}
}



#TIE BREAKERS
tie_breaker_senator_1 = {
	set_temp_variable = { max = -1 }
	# log = "[This.GetName] Tiebreaker 1"
	if = {
		limit = { check_variable = { senator_1 = 0 } }
		if = {
			limit = { check_variable = { prev_senator_1 = 1 } } #RD_R
			add_to_temp_variable = { RD_D_popularity = @SENATE_TIEBREAKER_ADDER }
		}
		else_if = {
			limit = { check_variable = { prev_senator_1 = 2 } } #RD_D
			add_to_temp_variable = { RD_R_popularity = @SENATE_TIEBREAKER_ADDER }

		}
		else_if = {
			limit = { check_variable = { prev_senator_1 = 3 } } #NPP_L
			add_to_temp_variable = { NPP_L_popularity = @SENATE_TIEBREAKER_ADDER }
		}
		else_if = {
			limit = { check_variable = { prev_senator_1 = 4 } } #NPP_C
			add_to_temp_variable = { NPP_C_popularity = @SENATE_TIEBREAKER_ADDER }
		}
		else_if = {
			limit = { check_variable = { prev_senator_1 = 5 } } #NPP_FR
			add_to_temp_variable = { NPP_FR_popularity = @SENATE_TIEBREAKER_ADDER }
		}
		else_if = {
			limit = { check_variable = { prev_senator_1 = 6 } } #NPP-R Yockey
			add_to_temp_variable = { NPP_R_popularity = @SENATE_TIEBREAKER_ADDER }
		}
		set_temp_variable = { max = -1 }
		if = {
			limit = { check_variable = { RD_R_popularity > max } }
			set_variable = { senator_1 = 1 }
			set_temp_variable = { max = RD_R_popularity }
		}
		if = {
			limit = { check_variable = { RD_D_popularity > max } }
			set_variable = { senator_1 = 2 }
			set_temp_variable = { max = RD_D_popularity }
		}
		if = {
			limit = { check_variable = { NPP_L_popularity > max } }
			set_variable = { senator_1 = 3 }
			set_temp_variable = { max = NPP_L_popularity }
		}
		if = {
			limit = { check_variable = { NPP_C_popularity > max } }
			set_variable = { senator_1 = 4 }
			set_temp_variable = { max = NPP_C_popularity }
		}
		if = {
			limit = { check_variable = { NPP_R_popularity > max } }
			set_variable = { senator_1 = 5 }
			set_temp_variable = { max = NPP_R_popularity }
		}
		if = {
			limit = { check_variable = { NPP_FR_popularity > max } }
			set_variable = { senator_1 = 6 }
			set_temp_variable = { max = NPP_FR_popularity }
		}
		if = {
			limit = { check_variable = { senator_1 = 0 } }
			# log = "[This.GetName] Tiebreaker 2"
			set_temp_variable = { max = -1 }

			add_to_temp_variable = { RD_R_popularity = ROOT.party_popularity@liberalism }
			if = {
				limit = { check_variable = { RD_R_popularity > max } }
				set_variable = { senator_1 = 1 }
				set_temp_variable = { max = RD_R_popularity }
			}

			add_to_temp_variable = { RD_D_popularity = ROOT.party_popularity@conservatism }
			if = {
				limit = { check_variable = { RD_D_popularity > max } }
				set_variable = { senator_1 = 1 }
				set_temp_variable = { max = RD_D_popularity }
			}

			add_to_temp_variable = { NPP_L_popularity = ROOT.party_popularity@communist }
			if = {
				limit = { check_variable = { NPP_L_popularity > max } }
				set_variable = { senator_1 = 1 }
				set_temp_variable = { max = NPP_L_popularity }
			}

			add_to_temp_variable = { NPP_FR_popularity = ROOT.party_popularity@paternalism }
			if = {
				limit = { check_variable = { NPP_FR_popularity > max } }
				set_variable = { senator_1 = 1 }
				set_temp_variable = { max = NPP_FR_popularity }
			}

			add_to_temp_variable = { NPP_C_popularity = ROOT.party_popularity@progressivism }
			if = {
				limit = { check_variable = { NPP_C_popularity > max } }
				set_variable = { senator_1 = 1 }
				set_temp_variable = { max = NPP_C_popularity }
			}

			add_to_temp_variable = { NPP_R_popularity = ROOT.party_popularity@national_socialism }
			if = {
				limit = { check_variable = { NPP_R_popularity > max } }
				set_variable = { senator_1 = 1 }
				set_temp_variable = { max = NPP_R_popularity }
			}
		}
	}
}
tie_breaker_senator_2 = {
	set_temp_variable = { max = -1 }
	# log = "[This.GetName] Tiebreaker 1"
	if = {
		limit = { check_variable = { senator_2 = 0 } }
		if = {
			limit = { check_variable = { prev_senator_2 = 1 } } #RD_R
			add_to_temp_variable = { RD_D_popularity = @SENATE_TIEBREAKER_ADDER }
		}
		else_if = {
			limit = { check_variable = { prev_senator_2 = 2 } } #RD_D
			add_to_temp_variable = { RD_R_popularity = @SENATE_TIEBREAKER_ADDER }

		}
		else_if = {
			limit = { check_variable = { prev_senator_2 = 3 } } #NPP_L
			add_to_temp_variable = { NPP_L_popularity = @SENATE_TIEBREAKER_ADDER }
		}
		else_if = {
			limit = { check_variable = { prev_senator_2 = 4 } } #NPP_C
			add_to_temp_variable = { NPP_C_popularity = @SENATE_TIEBREAKER_ADDER }
		}
		else_if = {
			limit = { check_variable = { prev_senator_2 = 5 } } #NPP_FR
			add_to_temp_variable = { NPP_FR_popularity = @SENATE_TIEBREAKER_ADDER }
		}
		else_if = {
			limit = { check_variable = { prev_senator_2 = 6 } } #NPP-R Yockey
			add_to_temp_variable = { NPP_FR_popularity = @SENATE_TIEBREAKER_ADDER }
		}
		set_temp_variable = { max = -1 }
		if = {
			limit = { check_variable = { RD_R_popularity > max } }
			set_variable = { senator_2 = 1 }
			set_temp_variable = { max = RD_R_popularity }
		}
		if = {
			limit = { check_variable = { RD_D_popularity > max } }
			set_variable = { senator_2 = 2 }
			set_temp_variable = { max = RD_D_popularity }
		}
		if = {
			limit = { check_variable = { NPP_L_popularity > max } }
			set_variable = { senator_2 = 3 }
			set_temp_variable = { max = NPP_L_popularity }
		}
		if = {
			limit = { check_variable = { NPP_C_popularity > max } }
			set_variable = { senator_2 = 4 }
			set_temp_variable = { max = NPP_C_popularity }
		}
		if = {
			limit = { check_variable = { NPP_R_popularity > max } }
			set_variable = { senator_2 = 5 }
			set_temp_variable = { max = NPP_R_popularity }
		}
		if = {
			limit = { check_variable = { NPP_FR_popularity > max } }
			set_variable = { senator_2 = 6 }
			set_temp_variable = { max = NPP_FR_popularity }
		}
		if = {
			limit = { check_variable = { senator_2 = 0 } }
			# log = "[This.GetName] Tiebreaker 2"
			set_temp_variable = { max = -1 }

			add_to_temp_variable = { RD_R_popularity = ROOT.party_popularity@liberalism }
			if = {
				limit = { check_variable = { RD_R_popularity > max } }
				set_variable = { senator_2 = 1 }
				set_temp_variable = { max = RD_R_popularity }
			}

			add_to_temp_variable = { RD_D_popularity = ROOT.party_popularity@conservatism }
			if = {
				limit = { check_variable = { RD_D_popularity > max } }
				set_variable = { senator_2 = 1 }
				set_temp_variable = { max = RD_D_popularity }
			}

			add_to_temp_variable = { NPP_L_popularity = ROOT.party_popularity@communist }
			if = {
				limit = { check_variable = { NPP_L_popularity > max } }
				set_variable = { senator_2 = 1 }
				set_temp_variable = { max = NPP_L_popularity }
			}

			add_to_temp_variable = { NPP_FR_popularity = ROOT.party_popularity@paternalism }
			if = {
				limit = { check_variable = { NPP_FR_popularity > max } }
				set_variable = { senator_2 = 1 }
				set_temp_variable = { max = NPP_FR_popularity }
			}

			add_to_temp_variable = { NPP_C_popularity = ROOT.party_popularity@progressivism }
			if = {
				limit = { check_variable = { NPP_C_popularity > max } }
				set_variable = { senator_2 = 1 }
				set_temp_variable = { max = NPP_C_popularity }
			}

			add_to_temp_variable = { NPP_R_popularity = ROOT.party_popularity@national_socialism }
			if = {
				limit = { check_variable = { NPP_R_popularity > max } }
				set_variable = { senator_2 = 1 }
				set_temp_variable = { max = NPP_R_popularity }
			}
		}
	}
}

######################################
#  Setup and Election effects below  #
######################################

USA_clear_senate_predictions = {
	clear_variable = USA_state_poll_pop_diff
}

USA_recalculate_polls = {
	every_owned_state = {
		limit = { has_state_flag = US_election_state }
		USA_party_populairty_in_every_state = yes
	}
	USA_hold_mock_presidential_election_in_every_state_polling = yes
	USA_hold_mock_senate_election_in_state_polling = yes
	USA_GUI_work_out_predicted_differences = yes
	USA_charts_update = yes
	if = {
		limit = {
			check_variable = { USA_GUI_selected_tab_sub = 3 }
		}
		USA_display_map_for_presidential_race = yes
	}
	if = {
		limit = {
			check_variable = { USA_GUI_selected_tab_sub = 1 }
			has_country_flag = USA_predictions_selected
		}
		USA_determine_senate_map_breakdown_prediction = yes
	}
}
USA_recalculate_polls_individual = {
	USA_party_populairty_in_every_state = yes
	clr_state_flag = npp_win_pres
	clr_state_flag = rdc_win_pres
	set_variable = { rdc_votes = 0 }
	set_variable = { npp_votes = 0 }
	US_hold_presidential_election_in_state_new_polling = yes

	clr_state_flag = npp_win_sen
	clr_state_flag = rdc_win_sen
	set_variable = { rdc_votes_sen = 0 }
	set_variable = { npp_votes_sen = 0 }

	set_temp_variable = { voter_combs_sen = 0 }
	set_temp_variable = { rep_raw_votes_sen = 0 }
	set_temp_variable = { dem_raw_votes_sen = 0 }
	set_temp_variable = { pro_raw_votes_sen = 0 }
	set_temp_variable = { nat_raw_votes_sen = 0 }
	set_temp_variable = { com_raw_votes_sen = 0 }
	set_temp_variable = { anv_raw_votes_sen = 0 }
	set_variable = { senate_seat_1_seatwarmer = senator_1 }
	set_variable = { senate_seat_2_seatwarmer = senator_2 }#Don't ask, helps with displaying predictions
	US_hold_MOCK_senate_election_polling = yes

	USA = {
		USA_GUI_work_out_predicted_differences = yes
		USA_charts_update = yes
		if = {
			limit = {
				check_variable = { USA_GUI_selected_tab_sub = 3 }
			}
			USA_display_map_for_presidential_race = yes
		}
		if = {
			limit = {
				check_variable = { USA_GUI_selected_tab_sub = 1 }
				has_country_flag = USA_predictions_selected
			}
			USA_determine_senate_map_breakdown_prediction = yes
		}
		clear_array = states_for_poll
	}
}

USA_polls_setup_effect = {
	every_owned_state = {
	limit = { can_have_elections_in_state = yes }
		set_variable = { npp_campaign_infrastructure = 1 }
		set_variable = { rdc_campaign_infrastructure = 1 }
	}
	USA_recalculate_polls = yes
}

#call within a STATE scope to provide variables scripted localisation uses when predicting the senate race
USA_calculate_senate_predictions = {
	#if = { #midterms time
	#	limit = {
	#		has_country_flag = USA_senate_elections
	#	}
	#	set_variable = { RD_poll_pop = RD_senate_final_popularity }
	#	set_variable = { NPP_poll_pop = NPP_senate_final_popularity }
	#}
	#else = { #if it is presidential season
		#set_variable = { RD_poll_pop = RD_election_pop }
	set_variable = { RD_poll_pop = RD_senate_final_popularity }
		#set_variable = { NPP_poll_pop = NPP_election_pop }
	set_variable = { NPP_poll_pop = NPP_senate_final_popularity }
	#}
	# log = " CALCULATE SENATE PREDICTIONS"
	# log = "RD president pop = [?RD_election_pop SENATE PREDICTIONS]"
	# log = "RD senate pop = [?RD_senate_final_popularity] SENATE PREDICTIONS"
	# log = "RD_poll_pop, which is the one used in error margin is [?RD_poll_pop] SENATE PREDICTIONS"
	# log = "NPP president pop = [?NPP_election_pop] SENATE PREDICTIONS"
	# log = "NPP senate pop = [?NPP_senate_final_popularity] SENATE PREDICTIONS"
	# log = "NPP_poll_pop, which is the one used in error margin is [?NPP_poll_pop] SENATE PREDICTIONS"
	set_temp_variable = { error_margin_state_RD = 1 }
	set_temp_variable = { error_margin_state_NPP = 1 }
	randomize_temp_variable = {
		var = error_margin_state_RD
		distribution = uniform
		min = 0.9
		max = 1.1
	}
	randomize_temp_variable = {
		var = error_margin_state_NPP
		distribution = uniform
		min = 0.9
		max = 1.1
	}
	multiply_variable = { RD_poll_pop = error_margin_state_RD }
	multiply_variable = { NPP_poll_pop = error_margin_state_NPP }
	# log = "[This.GetName]: error_margin_state_RD is [?error_margin_state_RD] SENATE PREDICTIONS "#DEBUG ONLY
	# log = "[This.GetName]: error_margin_state_NPP is [?error_margin_state_NPP] SENATE PREDICTIONS"#DEBUG ONLY

	set_variable = { USA_state_poll_pop_diff = RD_poll_pop }
	subtract_from_variable = { USA_state_poll_pop_diff = NPP_poll_pop }
	# log = "[This.GetName]: USA_state_poll_pop_diff is [?USA_state_poll_pop_diff]. RD_poll_pop is [?RD_poll_pop]. NPP_poll_pop is [?NPP_poll_pop]. SENATE PREDICTIONS" #DEBUG ONLY
}

#call within a STATE scope to provide variables scripted localisation uses when predicting the president race
USA_calculate_president_predictions = {
	set_variable = { RD_president_poll_pop = RD_election_pop }
	set_variable = { NPP_president_poll_pop = NPP_election_pop }
	set_temp_variable = { error_margin_state_RD = 1 }
	set_temp_variable = { error_margin_state_NPP = 1 }
	randomize_temp_variable = {
		var = error_margin_state_RD
		distribution = uniform
		min = 0.9
		max = 1.1
	}
	randomize_temp_variable = {
		var = error_margin_state_NPP
		distribution = uniform
		min = 0.9
		max = 1.1
	}
	multiply_variable = { RD_president_poll_pop = error_margin_state_RD }
	multiply_variable = { NPP_president_poll_pop = error_margin_state_NPP }

	set_variable = { USA_state_president_poll_pop_diff = RD_president_poll_pop }
	subtract_from_variable = { USA_state_president_poll_pop_diff = NPP_president_poll_pop }
}

USA_clear_senate_election_vars = {
	clr_country_flag = USA_senate_elections
	clr_country_flag = USA_senate_conclusion
	clr_country_flag = USA_class_1_elections
	clr_country_flag = USA_class_2_elections
	clr_country_flag = USA_class_3_elections

	every_owned_state = {
		limit = { can_have_elections_in_state = yes }
		clr_state_flag = elections_senator_1
		clr_state_flag = elections_senator_2
		clear_variable = prev_senator_1
		clear_variable = prev_senator_2
		if = {
			limit = {
				NOT = {
					check_variable = { USA.USA_GUI_selected_tab_sub = 2 }
				}
			}
			clear_variable = USA_dot_1_status
			clear_variable = USA_dot_2_status
		}
	}
	if = {
		limit = {
			NOT = {
				check_variable = { USA.USA_GUI_selected_tab_sub = 2 }
			}
		}
		for_loop_effect = {
			start = 0
			end = 50
			value = idx

			clear_Variable = USA_dots_glow^idx
			clear_Variable = USA_state_dot_1_status^idx
			clear_Variable = USA_state_dot_2_status^idx
		}
	}

	clear_variable = RD_R_change
	clear_variable = RD_D_change
	clear_variable = NPP_L_change
	clear_variable = NPP_C_change
	clear_variable = NPP_R_change
	clear_variable = NPP_FR_change

	USA_clear_campaiging_vars = yes
}

USA_class_1_senate_prepare = {
	set_country_flag = USA_senate_elections
	set_country_flag = USA_class_1_elections
	USA_recalculate_polls = yes
	set_temp_variable = { alert_id = token:Alert_US_Election }
	add_TNO_alert_unless_exists = yes
	#SENATOR 1
	377 = { #Arizona
		set_state_flag = elections_senator_1
	}
	378 = { #California
		set_state_flag = elections_senator_1
	}
	357 = { #Connecticut
		set_state_flag = elections_senator_1
	}
	954 = { #Delaware
		set_state_flag = elections_senator_1
	}
	366 = { #Florida
		set_state_flag = elections_senator_1
	}
	396 = { #Indiana
		set_state_flag = elections_senator_1
	}
	952 = { #Maine
		set_state_flag = elections_senator_1
	}
	361 = { #Maryland
		set_state_flag = elections_senator_1
	}
	949 = { #Massachusetts
		set_state_flag = elections_senator_1
	}
	393 = { #Michigan
		set_state_flag = elections_senator_1
	}
	391 = { #Minnesota
		set_state_flag = elections_senator_1
	}
	370 = { #Mississippi
		set_state_flag = elections_senator_1
	}
	373 = { #Missouri
		set_state_flag = elections_senator_1
	}
	388 = { #Montana
		set_state_flag = elections_senator_1
	}
	384 = { #Nebraska
		set_state_flag = elections_senator_1
	}
	379 = { #Nevada
		set_state_flag = elections_senator_1
	}
	359 = { #New Jersey
		set_state_flag = elections_senator_1
	}
	376 = { #New Mexico
		set_state_flag = elections_senator_1
	}
	358 = { #New York
		set_state_flag = elections_senator_1
	}
	389 = { #North Dakota
		set_state_flag = elections_senator_1
	}
	261 = { #Ohio
		set_state_flag = elections_senator_1
	}
	360 = { #Pennsylvania
		set_state_flag = elections_senator_1
	}
	948 = { #Rhode Island
		set_state_flag = elections_senator_1
	}
	368 = { #Tennessee
		set_state_flag = elections_senator_1
	}
	375 = { #Texas
		set_state_flag = elections_senator_1
	}
	380 = { #Utah
		set_state_flag = elections_senator_1
	}
	950 = { #Vermont
		set_state_flag = elections_senator_1
	}
	362 = { #Virginia
		set_state_flag = elections_senator_1
	}
	386 = { #Washington
		set_state_flag = elections_senator_1
	}
	953 = { #West Virginia
		set_state_flag = elections_senator_1
	}
	394 = { #Wisconsin
		set_state_flag = elections_senator_1
	}
	381 = { #Wyoming
		set_state_flag = elections_senator_1
	}
	USA_setup_dimmed_map = yes
	USA_opposition_set_campaign_area = yes
	USA_determine_senate_dots = yes
	USA_prepare_predictions_for_rubber_band = yes
	USA_hold_mock_senate_election_in_state_polling = yes
	USA_GUI_total_up_senators = yes
	USA_clear_campaiging_vars = yes
}

USA_class_2_senate_prepare = {
	set_country_flag = USA_senate_elections
	set_country_flag = USA_class_2_elections
	USA_recalculate_polls = yes
	set_temp_variable = { alert_id = token:Alert_US_Election }
	add_TNO_alert_unless_exists = yes
	#SENATOR 1
	#Alabama
	367 = {
		set_state_flag = elections_senator_1
	}
	#Alaska
	463 = {
		set_state_flag = elections_senator_1
	}
	#Arkansas
	372 = {
		set_state_flag = elections_senator_1
	}
	#Colorado
	382 = {
		set_state_flag = elections_senator_1
	}
	#Georgia
	365 = {
		set_state_flag = elections_senator_1
	}
	#Idaho
	387 = {
		set_state_flag = elections_senator_1
	}
	#Illinois
	395 = {
		set_state_flag = elections_senator_1
	}
	#Iowa
	392 = {
		set_state_flag = elections_senator_1
	}
	#Kansas
	383 = {
		set_state_flag = elections_senator_1
	}
	#Kentucky
	369 = {
		set_state_flag = elections_senator_1
	}
	#Louisiana
	371 = {
		set_state_flag = elections_senator_1
	}
	#New Hampshire
	951 = {
		set_state_flag = elections_senator_1
	}
	#North Carolina
	363 = {
		set_state_flag = elections_senator_1
	}
	#Oklahoma
	374 = {
		set_state_flag = elections_senator_1
	}
	#Oregon
	385 = {
		set_state_flag = elections_senator_1
	}
	#South Carolina
	364 = {
		set_state_flag = elections_senator_1
	}
	#South Dakota
	390 = {
		set_state_flag = elections_senator_1
	}

	#SENATOR 2
	#Delaware
	954 = {
		set_state_flag = elections_senator_2
	}
	#Maine
	952 = {
		set_state_flag = elections_senator_2
	}
	#Massachusetts
	949 = {
		set_state_flag = elections_senator_2
	}
	#Michigan
	393 = {
		set_state_flag = elections_senator_2
	}
	#Minnesota
	391 = {
		set_state_flag = elections_senator_2
	}
	#Mississippi
	370 = {
		set_state_flag = elections_senator_2
	}
	#Montana
	388 = {
		set_state_flag = elections_senator_2
	}
	#Nebraska
	384 = {
		set_state_flag = elections_senator_2
	}
	#New Jersey
	359 = {
		set_state_flag = elections_senator_2
	}
	#New Mexico
	376 = {
		set_state_flag = elections_senator_2
	}
	#Rhode Island
	948 = {
		set_state_flag = elections_senator_2
	}
	#Tennessee
	368 = {
		set_state_flag = elections_senator_2
	}
	#Texas
	375 = {
		set_state_flag = elections_senator_2
	}
	#Virginia
	362 = {
		set_state_flag = elections_senator_2
	}
	#West Virginia
	953 = {
		set_state_flag = elections_senator_2
	}
	#Wyoming
	381 = {
		set_state_flag = elections_senator_2
	}
	USA_setup_dimmed_map = yes
	USA_opposition_set_campaign_area = yes
	USA_determine_senate_dots = yes
	USA_prepare_predictions_for_rubber_band = yes
	USA_hold_mock_senate_election_in_state_polling = yes
	USA_GUI_total_up_senators = yes
	USA_clear_campaiging_vars = yes
}

USA_class_3_senate_prepare = {
	set_country_flag = USA_senate_elections
	set_country_flag = USA_class_3_elections
	USA_recalculate_polls = yes
	set_temp_variable = { alert_id = token:Alert_US_Election }
	add_TNO_alert_unless_exists = yes
	#SENATOR 2
	#Alabama
	367 = {
		set_state_flag = elections_senator_2
	}
	#Alaska
	463 = {
		set_state_flag = elections_senator_2
	}
	#Arizona
	377 = {
		set_state_flag = elections_senator_2
	}
	#Arkansas
	372 = {
		set_state_flag = elections_senator_2
	}
	#California
	378 = {
		set_state_flag = elections_senator_2
	}
	#Colorado
	382 = {
		set_state_flag = elections_senator_2
	}
	#Connecticut
	357 = {
		set_state_flag = elections_senator_2
	}
	#Florida
	366 = {
		set_state_flag = elections_senator_2
	}
	#Georgia
	365 = {
		set_state_flag = elections_senator_2
	}
	#Idaho
	387 = {
		set_state_flag = elections_senator_2
	}
	#Illinois
	395 = {
		set_state_flag = elections_senator_2
	}
	#Indiana
	396 = {
		set_state_flag = elections_senator_2
	}
	#Iowa
	392 = {
		set_state_flag = elections_senator_2
	}
	#Kansas
	383 = {
		set_state_flag = elections_senator_2
	}
	#Kentucky
	369 = {
		set_state_flag = elections_senator_2
	}
	#Louisiana
	371 = {
		set_state_flag = elections_senator_2
	}
	#Maryland
	361 = {
		set_state_flag = elections_senator_2
	}
	#Missouri
	373 = {
		set_state_flag = elections_senator_2
	}
	#Nevada
	379 = {
		set_state_flag = elections_senator_2
	}
	#New Hampshire
	951 = {
		set_state_flag = elections_senator_2
	}
	#New York
	358 = {
		set_state_flag = elections_senator_2
	}
	#North Carolina
	363 = {
		set_state_flag = elections_senator_2
	}
	#North Dakota
	389 = {
		set_state_flag = elections_senator_2
	}
	#Ohio
	261 = {
		set_state_flag = elections_senator_2
	}
	#Oklahoma
	374 = {
		set_state_flag = elections_senator_2
	}
	#Oregon
	385 = {
		set_state_flag = elections_senator_2
	}
	#Pennsylvania
	360 = {
		set_state_flag = elections_senator_2
	}
	#South Carolina
	364 = {
		set_state_flag = elections_senator_2
	}
	#South Dakota
	390 = {
		set_state_flag = elections_senator_2
	}
	#Utah
	380 = {
		set_state_flag = elections_senator_2
	}
	#Vermont
	950 = {
		set_state_flag = elections_senator_2
	}
	#Washington
	386 = {
		set_state_flag = elections_senator_2
	}
	#Wisconsin
	394 = {
		set_state_flag = elections_senator_2
	}
	USA_setup_dimmed_map = yes
	USA_opposition_set_campaign_area = yes
	USA_determine_senate_dots = yes
	USA_prepare_predictions_for_rubber_band = yes
	USA_hold_mock_senate_election_in_state_polling = yes
	USA_GUI_total_up_senators = yes
	USA_clear_campaiging_vars = yes
}
USA_setup_dimmed_map = {
	for_each_scope_loop = {
		array = USA_states

		clear_variable = USA_state_senate_status
		if = {
			limit = {
				OR = {
					has_state_flag = elections_senator_1
					has_state_flag = elections_senator_2
				}
			}
			set_variable = { USA_state_senate_status = 1 }
		}
	}
	for_loop_effect = {
		start = 0
		end = 51
		value = idx

		set_variable = { state_number = USA_states^idx }
		set_variable = { USA_state_senate_status^idx = state_number:USA_state_senate_status }
	}
}
USA_0_temp_vars = {
	set_temp_variable = { policy_voters = 0 }
	set_temp_variable = { tossed_votes = 0 }
	set_variable = { rdc_votes_sen = 0 }
	set_variable = { npp_votes_sen = 0 }
	set_temp_variable = { voter_combs_sen = 0 }
	set_temp_variable = { rep_raw_votes_sen = 0 }
	set_temp_variable = { dem_raw_votes_sen = 0 }
	set_temp_variable = { pro_raw_votes_sen = 0 }
	set_temp_variable = { nat_raw_votes_sen = 0 }
	set_temp_variable = { com_raw_votes_sen = 0 }
	set_temp_variable = { anv_raw_votes_sen = 0 }
}
USA_party_populairty_in_every_state = {
	USA_0_temp_vars = yes
	US_hold_MOCK_senate_election_state_pops = yes

	set_variable = { rdc_tot_votes = REP_STATE_PCT }
	add_to_variable = { rdc_tot_votes = DEM_STATE_PCT }

	set_variable = { npp_tot_votes = COM_STATE_PCT }
	add_to_variable = { npp_tot_votes = PRO_STATE_PCT }
	add_to_variable = { npp_tot_votes = NAT_STATE_PCT }
	add_to_variable = { npp_tot_votes = ANV_STATE_PCT }

	divide_variable = { REP_STATE_PCT = rdc_tot_votes }
	divide_variable = { DEM_STATE_PCT = rdc_tot_votes }
	divide_variable = { COM_STATE_PCT = npp_tot_votes }
	divide_variable = { PRO_STATE_PCT = npp_tot_votes }
	divide_variable = { NAT_STATE_PCT = npp_tot_votes }
	divide_variable = { ANV_STATE_PCT = npp_tot_votes }

	multiply_variable = { REP_STATE_PCT = 100 }
	multiply_variable = { DEM_STATE_PCT = 100 }
	multiply_variable = { COM_STATE_PCT = 100 }
	multiply_variable = { PRO_STATE_PCT = 100 }
	multiply_variable = { NAT_STATE_PCT = 100 }
	multiply_variable = { ANV_STATE_PCT = 100 }

	round_variable = REP_STATE_PCT
	round_variable = DEM_STATE_PCT
	round_variable = COM_STATE_PCT
	round_variable = PRO_STATE_PCT
	round_variable = NAT_STATE_PCT
	round_variable = ANV_STATE_PCT

	set_variable = { rep_results_pct = REP_STATE_PCT }
	set_variable = { dem_results_pct = DEM_STATE_PCT }
	set_variable = { com_results_pct = COM_STATE_PCT }
	set_variable = { pro_results_pct = PRO_STATE_PCT }
	set_variable = { nat_results_pct = NAT_STATE_PCT }
	set_variable = { anv_results_pct = ANV_STATE_PCT }

	USA_0_temp_vars = yes
	US_hold_MOCK_senate_election_polling = yes

	set_variable = { RDC_VOTES = state_senate_results_rdc }
	set_variable = { NPP_VOTES = state_senate_results_npp }

	set_variable = { voters_sen_poll = RDC_VOTES }
	add_to_variable = { voters_sen_poll = NPP_VOTES }
	set_variable = { NPP_popularity = NPP_VOTES }
	set_variable = { RDC_popularity = RDC_VOTES }
	divide_variable = { NPP_popularity = voters_sen_poll }
	divide_variable = { RDC_popularity = voters_sen_poll }
	multiply_variable = { NPP_popularity = 100 }
	multiply_variable = { RDC_popularity = 100 }
	set_variable = { RDC_popularity_unrounded = RDC_popularity }
	set_variable = { NPP_popularity_unrounded = NPP_popularity }
	set_variable = { NPP_popularity_unrounded_upper = NPP_popularity_unrounded } 
	set_variable = { NPP_popularity_unrounded_lower = NPP_popularity_unrounded } 
	set_variable = { RDC_popularity_unrounded_upper = RDC_popularity_unrounded } 
	set_variable = { RDC_popularity_unrounded_lower = RDC_popularity_unrounded } 

	multiply_variable = { NPP_popularity_unrounded_upper = 1.1 }
	multiply_variable = { NPP_popularity_unrounded_lower = 0.9 }
	multiply_variable = { RDC_popularity_unrounded_upper = 1.1 }
	multiply_variable = { RDC_popularity_unrounded_lower = 0.9 }
	round_variable = NPP_popularity
	round_variable = RDC_popularity

	US_hold_presidential_election_polling_for_state_pops = yes

	set_variable = { voters = state_pres_results_rdc_numbs }
	add_to_variable = { voters = state_pres_results_npp_numbs }
	multiply_variable = { npp_votes = USA_party_pop_multiplier }
	set_variable = { NPP_popularity_prespoll = npp_votes }
	set_variable = { RDC_popularity_prespoll = rdc_votes }
	divide_variable = { NPP_popularity_prespoll = voters }
	divide_variable = { RDC_popularity_prespoll = voters }
	multiply_variable = { NPP_popularity_prespoll = 100 }
	multiply_variable = { RDC_popularity_prespoll = 100 }
	set_variable = { NPP_popularity_prespoll_unrounded = NPP_popularity_prespoll }
	set_variable = { RDC_popularity_prespoll_unrounded = RDC_popularity_prespoll }

	set_variable = { NPP_popularity_prespoll_unrounded_upper = NPP_popularity_prespoll }
	set_variable = { NPP_popularity_prespoll_unrounded_lower = NPP_popularity_prespoll }
	set_variable = { RDC_popularity_prespoll_unrounded_upper = RDC_popularity_prespoll }
	set_variable = { RDC_popularity_prespoll_unrounded_lower = RDC_popularity_prespoll }

	multiply_variable = { NPP_popularity_prespoll_unrounded_upper = 1.1 }
	multiply_variable = { NPP_popularity_prespoll_unrounded_lower = 0.9 }
	multiply_variable = { RDC_popularity_prespoll_unrounded_upper = 1.1 }
	multiply_variable = { RDC_popularity_prespoll_unrounded_lower = 0.9 }

	round_variable = NPP_popularity_prespoll
	round_variable = RDC_popularity_prespoll

	set_variable = { pct_diff_in_polls_pres = RDC_popularity_prespoll_unrounded } 
	subtract_from_variable = { pct_diff_in_polls_pres = NPP_popularity_prespoll_unrounded } 
	divide_variable = { pct_diff_in_polls_pres = 100 }

	set_variable = { rep_pop_in_state = rep_results_pct }
	set_variable = { dem_pop_in_state = dem_results_pct }
	set_variable = { com_pop_in_state = com_results_pct }
	set_variable = { pro_pop_in_state = pro_results_pct }
	set_variable = { nat_pop_in_state = nat_results_pct }
	set_variable = { anv_pop_in_state = anv_results_pct }

	divide_variable = { rep_pop_in_state = 100 }
	divide_variable = { dem_pop_in_state = 100 }
	divide_variable = { com_pop_in_state = 100 }
	divide_variable = { pro_pop_in_state = 100 }
	divide_variable = { nat_pop_in_state = 100 }
	divide_variable = { anv_pop_in_state = 100 }
}
USA_clear_presidential_election_values_old = {
	clear_variable = NPP_electoral_votes
	clear_variable = RD_electoral_votes
	clear_variable = NPP_actual_votes
	clear_variable = RD_actual_votes
	clr_country_flag = USA_presidential_conclusion
	clr_country_flag = USA_presidential_elections
	clr_country_flag = currently_campaigning
	set_temp_variable = { alert_id = token:Alert_US_Election }
	remove_TNO_alert = yes
	every_owned_state = {
		limit = { can_have_elections_in_state = yes }
		USA_clear_senate_predictions = yes
		clr_state_flag = voted_RD
		clr_state_flag = voted_NPP
	}
}

USA_presidential_election_conclusion_old = {
	set_country_flag = USA_presidential_conclusion
}

USA_prepare_presidential_election = {
	set_country_flag = USA_presidential_elections
	every_owned_state = {
		limit = { can_have_elections_in_state = yes }
	}
	USA_recalculate_polls = yes
	set_variable = { USA_current_election_rd_candidate = 15 }
	set_variable = { USA_current_election_npp_candidate = 15 }
}

USA_clamp_state_popularities_diffname = { # unused and causing errors
	## log = "[This.GetName]: scripted effect = USA_clamp_state_popularities" clutters the # log way too much
	clamp_variable = {
		var = RD_popularity
		min = @PULSE_POPULARITY_CLAMP_MIN
		max = @PULSE_POPULARITY_CLAMP_MAX_FIRST
	}
	clamp_variable = {
		var = NPP_popularity
		min = @PULSE_POPULARITY_CLAMP_MIN
		max = @PULSE_POPULARITY_CLAMP_MAX_FIRST
	}
	clamp_variable = {
		var = RD_R_bonus_popularity
		min = @PULSE_POPULARITY_CLAMP_MIN
		max = @PULSE_POPULARITY_CLAMP_MAX_FIRST
	}
	clamp_variable = {
		var = RD_D_bonus_popularity
		min = @PULSE_POPULARITY_CLAMP_MIN
		max = @PULSE_POPULARITY_CLAMP_MAX_FIRST
	}
	clamp_variable = {
		var = NPP_L_bonus_popularity
		min = @PULSE_POPULARITY_CLAMP_MIN
		max = @PULSE_POPULARITY_CLAMP_MAX_FIRST
	}
	clamp_variable = {
		var = NPP_C_bonus_popularity
		min = @PULSE_POPULARITY_CLAMP_MIN
		max = @PULSE_POPULARITY_CLAMP_MAX_FIRST
	}
	clamp_variable = {
		var = NPP_Y_bonus_popularity
		min = @PULSE_POPULARITY_CLAMP_MIN
		max = @PULSE_POPULARITY_CLAMP_MAX_FIRST
	}
	clamp_variable = {
		var = NPP_FR_bonus_popularity
		min = @PULSE_POPULARITY_CLAMP_MIN
		max = @PULSE_POPULARITY_CLAMP_MAX_FIRST
	}
	if = {
		limit = {
			OR = {
				check_variable = { RD_R_bonus_popularity > @PULSE_POPULARITY_CLAMP_MAX_SECOND }
				check_variable = { RD_D_bonus_popularity > @PULSE_POPULARITY_CLAMP_MAX_SECOND }
				check_variable = { NPP_L_bonus_popularity > @PULSE_POPULARITY_CLAMP_MAX_SECOND }
				check_variable = { NPP_C_bonus_popularity > @PULSE_POPULARITY_CLAMP_MAX_SECOND }
				check_variable = { NPP_Y_bonus_popularity > @PULSE_POPULARITY_CLAMP_MAX_SECOND }
				check_variable = { NPP_FR_bonus_popularity > @PULSE_POPULARITY_CLAMP_MAX_SECOND }
			}
		}
		set_temp_variable = { divisor = RD_R_bonus_popularity }
		add_to_temp_variable = { divisor = RD_D_bonus_popularity }
		add_to_temp_variable = { divisor = NPP_L_bonus_popularity }
		add_to_temp_variable = { divisor = NPP_C_bonus_popularity }
		add_to_temp_variable = { divisor = NPP_Y_bonus_popularity }
		add_to_temp_variable = { divisor = NPP_FR_bonus_popularity }
		divide_temp_variable = { divisor = @PULSE_POPULARITY_CLAMP_MAX_SECOND }
		divide_variable = { RD_R_bonus_popularity = divisor }
		divide_variable = { RD_D_bonus_popularity = divisor }
		divide_variable = { NPP_L_bonus_popularity = divisor }
		divide_variable = { NPP_C_bonus_popularity = divisor }
		divide_variable = { NPP_Y_bonus_popularity = divisor }
		divide_variable = { NPP_FR_bonus_popularity = divisor }
	}
	if = {
		limit = {
			OR = {
				check_variable = { RD_popularity > @PULSE_POPULARITY_CLAMP_MAX_SECOND }
				check_variable = { NPP_popularity > @PULSE_POPULARITY_CLAMP_MAX_SECOND }
			}
		}
		set_temp_variable = { divisor = RD_popularity }
		add_to_temp_variable = { divisor = NPP_popularity }
		divide_temp_variable = { divisor = @PULSE_POPULARITY_CLAMP_MAX_SECOND }
		divide_variable = { RD_popularity = divisor }
		divide_variable = { NPP_popularity = divisor }
	}
	clamp_variable = {
		var = RD_popularity
		min = @PULSE_POPULARITY_CLAMP_MIN
		max = @PULSE_POPULARITY_CLAMP_MAX_SECOND
	}
	clamp_variable = {
		var = NPP_popularity
		min = @PULSE_POPULARITY_CLAMP_MIN
		max = @PULSE_POPULARITY_CLAMP_MAX_SECOND
	}
	clamp_variable = {
		var = RD_R_bonus_popularity
		min = @PULSE_POPULARITY_CLAMP_MIN
		max = @PULSE_POPULARITY_CLAMP_MAX_SECOND
	}
	clamp_variable = {
		var = RD_D_bonus_popularity
		min = @PULSE_POPULARITY_CLAMP_MIN
		max = @PULSE_POPULARITY_CLAMP_MAX_SECOND
	}
	clamp_variable = {
		var = NPP_L_bonus_popularity
		min = @PULSE_POPULARITY_CLAMP_MIN
		max = @PULSE_POPULARITY_CLAMP_MAX_SECOND
	}
	clamp_variable = {
		var = NPP_C_bonus_popularity
		min = @PULSE_POPULARITY_CLAMP_MIN
		max = @PULSE_POPULARITY_CLAMP_MAX_SECOND
	}
	clamp_variable = {
		var = NPP_Y_bonus_popularity
		min = @PULSE_POPULARITY_CLAMP_MIN
		max = @PULSE_POPULARITY_CLAMP_MAX_SECOND
	}
	clamp_variable = {
		var = NPP_FR_bonus_popularity
		min = @PULSE_POPULARITY_CLAMP_MIN
		max = @PULSE_POPULARITY_CLAMP_MAX_SECOND
	}
}

USA_print_pop_to_log_alt = {
	every_owned_state = {
		limit = {
			has_state_flag = US_election_state
		}
		# log = "[This.GetName]: RD: [?RD_popularity] | NPP: [?NPP_popularity] | RD-R: [?RD_R_popularity] | RD-D [?RD_D_popularity] | NPP-L [?NPP_L_popularity] | NPP-C [?NPP_C_popularity] | NPP-R [?NPP_R_popularity] | NPP-FR [?NPP_FR_popularity]"
		# log = "[This.GetName] Bonus Popularity: RD-R: [?RD_R_bonus_popularity] | RD-D [?RD_D_bonus_popularity] | NPP-L [?NPP_L_bonus_popularity] | NPP-C [?NPP_C_bonus_popularity] | NPP-R [?NPP_Y_bonus_popularity] | NPP-FR [?NPP_FR_bonus_popularity]"
	}
}

USA_print_pop_to_log = {
	# log = "THIS_IS_USEL_DATA_3,\"[GetDateText]\",[This.GetName],RD_pie,[?party_popularity@liberalism],[?party_popularity@conservatism],current_pres,[?presidents_party],RD_Unity,[?USA_RD_Unity]"
	# log = "THIS_IS_USEL_DATA_3,\"[GetDateText]\",[This.GetName],NPP_pie,[?party_popularity@communist],[?party_popularity@progressivism],[?party_popularity@national_socialism],[?party_popularity@paternalism],NPP_Unity,[?USA_NPP_Unity]"
	every_owned_state = {
		limit = {
			has_state_flag = US_election_state
		}
		# log = "THIS_IS_USEL_DATA_1,\"[GetDateText]\",[This.GetName],RD,[?RD_popularity],NPP,[?NPP_popularity],Senator1,[?senator_1],Senator2,[?senator_2]"
		# log = "THIS_IS_USEL_DATA_2,\"[GetDateText]\",[This.GetName],Bonus,,Popularity,,R,[?RD_R_bonus_popularity],D,[?RD_D_bonus_popularity],L,[?NPP_L_bonus_popularity],C,[?NPP_C_bonus_popularity],F,[?NPP_FR_bonus_popularity],Y,[?NPP_Y_bonus_popularity]"
	}
}

USA_conversion_rate_loop = {
	USA_conversion_rate_loop = yes
}

USA_campaigning_effect = {
	set_temp_variable = { USA_pop_factor = 1 }
	if = {
		limit = { has_country_flag = USA_campaigning_for_RD }
		random_list = {
			15 = {
				add_to_temp_variable = { USA_pop_factor = @CAMPAIGNING_GREAT_SUCCESS_BOOST }
				custom_effect_tooltip = USA_campaigning_great_success_RD_tt
				country_event = { id = USA.senate.1 }
			}
			50 = {
				add_to_temp_variable = { USA_pop_factor = @CAMPAIGNING_GOOD_SUCCESS_BOOST }
				custom_effect_tooltip = USA_campaigning_good_success_RD_tt
				country_event = { id = USA.senate.2 }
			}
			20 = {
				add_to_temp_variable = { USA_pop_factor = @CAMPAIGNING_NEUTRAL_BOOST }
				custom_effect_tooltip = USA_campaigning_neutral_RD_tt
				country_event = { id = USA.senate.3 }
			}
			15 = {
				add_to_temp_variable = { USA_pop_factor = @CAMPAIGNING_BAD_BOOST }
				custom_effect_tooltip = USA_campaigning_bad_RD_tt
				country_event = { id = USA.senate.4 }
			}
		}
	}
	else = {
		random_list = {
			15 = {
				add_to_temp_variable = { USA_pop_factor = @CAMPAIGNING_GREAT_SUCCESS_BOOST }
				custom_effect_tooltip = USA_campaigning_great_success_NPP_tt
				country_event = { id = USA.senate.5 }
			}
			50 = {
				add_to_temp_variable = { USA_pop_factor = @CAMPAIGNING_GOOD_SUCCESS_BOOST }
				custom_effect_tooltip = USA_campaigning_good_success_NPP_tt
				country_event = { id = USA.senate.6 }
			}
			20 = {
				add_to_temp_variable = { USA_pop_factor = @CAMPAIGNING_NEUTRAL_BOOST }
				custom_effect_tooltip = USA_campaigning_neutral_NPP_tt
				country_event = { id = USA.senate.7 }
			}
			15 = {
				add_to_temp_variable = { USA_pop_factor = @CAMPAIGNING_BAD_BOOST }
				custom_effect_tooltip = USA_campaigning_bad_NPP_tt
				country_event = { id = USA.senate.8 }
			}
		}
	}
	multiply_temp_variable = { USA_pop_factor = USA_campaigning_multiplier }
	for_each_scope_loop = { # THIS IS WHERE THAT ARRAY YOU SEE IN THE CAMPAIGN EVENTS COMES FROM. Why couldn't hoi4 mods have been written in a normal language like Python?
		array = USA_campaign_states

		USA_campaigning_state_boost = yes
	}
	clear_array = USA_campaign_states
	hidden_effect = {
		clr_country_flag = currently_campaigning
		if = {
			limit = { NOT = { has_country_flag = USA_presidental_conclusion } }
			set_temp_variable = { alert_id = token:Alert_US_Election }
			add_TNO_alert_unless_exists = yes
		}
	}
}

USA_campaigning_effect_opposition = {
	set_temp_variable = { USA_pop_factor_opposition = 1 }
	if = {
		limit = { has_country_flag = USA_campaigning_for_NPP }
		random_list = {
			15 = {
				add_to_temp_variable = { USA_pop_factor_opposition = @CAMPAIGNING_GREAT_SUCCESS_BOOST }
				custom_effect_tooltip = USA_campaigning_great_success_RD_tt
				country_event = { id = USA.senate.10 }
			}
			50 = {
				add_to_temp_variable = { USA_pop_factor_opposition = @CAMPAIGNING_GOOD_SUCCESS_BOOST }
				custom_effect_tooltip = USA_campaigning_good_success_RD_tt
				country_event = { id = USA.senate.11 }
			}
			20 = {
				add_to_temp_variable = { USA_pop_factor_opposition = @CAMPAIGNING_NEUTRAL_BOOST }
				custom_effect_tooltip = USA_campaigning_neutral_RD_tt
				country_event = { id = USA.senate.12 }
			}
			15 = {
				add_to_temp_variable = { USA_pop_factor_opposition = @CAMPAIGNING_BAD_BOOST }
				custom_effect_tooltip = USA_campaigning_bad_RD_tt
				country_event = { id = USA.senate.13 }
			}
		}
	}
	else = {
		random_list = {
			15 = {
				add_to_temp_variable = { USA_pop_factor_opposition = @CAMPAIGNING_GREAT_SUCCESS_BOOST }
				custom_effect_tooltip = USA_campaigning_great_success_NPP_tt
				country_event = { id = USA.senate.14 }
			}
			50 = {
				add_to_temp_variable = { USA_pop_factor_opposition = @CAMPAIGNING_GOOD_SUCCESS_BOOST }
				custom_effect_tooltip = USA_campaigning_good_success_NPP_tt
				country_event = { id = USA.senate.15 }
			}
			20 = {
				add_to_temp_variable = { USA_pop_factor_opposition = @CAMPAIGNING_NEUTRAL_BOOST }
				custom_effect_tooltip = USA_campaigning_neutral_NPP_tt
				country_event = { id = USA.senate.16 }
			}
			15 = {
				add_to_temp_variable = { USA_pop_factor_opposition = @CAMPAIGNING_BAD_BOOST }
				custom_effect_tooltip = USA_campaigning_bad_NPP_tt
				country_event = { id = USA.senate.17 }
			}
		}
	}
	divide_temp_variable = { USA_pop_factor_opposition = USA_campaigning_multiplier }
	for_each_scope_loop = {
		array = USA_campaign_states_opposition

		USA_campaigning_state_boost_opposition = yes
	}
	clear_array = USA_campaign_states_opposition
	clr_country_flag = currently_campaigning_opposition
}

USA_campaigning_effect_senate = {
	set_temp_variable = { USA_pop_factor = 1 }
	if = {
		limit = { has_country_flag = USA_campaigning_for_RD }
		random_list = {
			15 = {
				add_to_temp_variable = { USA_pop_factor = @CAMPAIGNING_GREAT_SUCCESS_BOOST }
				custom_effect_tooltip = USA_campaigning_great_success_RD_tt
				country_event = { id = USA.senate.1 }
			}
			50 = {
				add_to_temp_variable = { USA_pop_factor = @CAMPAIGNING_GOOD_SUCCESS_BOOST }
				custom_effect_tooltip = USA_campaigning_good_success_RD_tt
				country_event = { id = USA.senate.2 }
			}
			20 = {
				add_to_temp_variable = { USA_pop_factor = @CAMPAIGNING_NEUTRAL_BOOST }
				custom_effect_tooltip = USA_campaigning_neutral_RD_tt
				country_event = { id = USA.senate.3 }
			}
			15 = {
				add_to_temp_variable = { USA_pop_factor = @CAMPAIGNING_BAD_BOOST }
				custom_effect_tooltip = USA_campaigning_bad_RD_tt
				country_event = { id = USA.senate.4 }
			}
		}
	}
	else = {
		random_list = {
			15 = {
				add_to_temp_variable = { USA_pop_factor = @CAMPAIGNING_GREAT_SUCCESS_BOOST }
				custom_effect_tooltip = USA_campaigning_great_success_NPP_tt
				country_event = { id = USA.senate.5 }
			}
			50 = {
				add_to_temp_variable = { USA_pop_factor = @CAMPAIGNING_GOOD_SUCCESS_BOOST }
				custom_effect_tooltip = USA_campaigning_good_success_NPP_tt
				country_event = { id = USA.senate.6 }
			}
			20 = {
				add_to_temp_variable = { USA_pop_factor = @CAMPAIGNING_NEUTRAL_BOOST }
				custom_effect_tooltip = USA_campaigning_neutral_NPP_tt
				country_event = { id = USA.senate.7 }
			}
			15 = {
				add_to_temp_variable = { USA_pop_factor = @CAMPAIGNING_BAD_BOOST }
				custom_effect_tooltip = USA_campaigning_bad_NPP_tt
				country_event = { id = USA.senate.8 }
			}
		}
	}
	for_each_scope_loop = {

		array = USA_campaign_states

		USA_campaigning_state_boost = yes
	}
	clear_array = USA_campaign_states
	hidden_effect = {
		clr_country_flag = currently_campaigning
		if = {
			limit = { NOT = { has_country_flag = USA_senate_conclusion } }
			set_temp_variable = { alert_id = token:Alert_US_Election }
			add_TNO_alert_unless_exists = yes
		}
	}
}

USA_campaigning_effect_opposition_senate = {
	set_temp_variable = { USA_pop_factor_opposition = 1 }
	if = {
		limit = { has_country_flag = USA_campaigning_for_NPP }
		# log = "RD campaign as opposition"
		random_list = {
			15 = {
				add_to_temp_variable = { USA_pop_factor_opposition = @CAMPAIGNING_GREAT_SUCCESS_BOOST }
				custom_effect_tooltip = USA_campaigning_great_success_RD_tt
				country_event = { id = USA.senate.10 }
			}
			50 = {
				add_to_temp_variable = { USA_pop_factor_opposition = @CAMPAIGNING_GOOD_SUCCESS_BOOST }
				custom_effect_tooltip = USA_campaigning_good_success_RD_tt
				country_event = { id = USA.senate.11 }
			}
			20 = {
				add_to_temp_variable = { USA_pop_factor_opposition = @CAMPAIGNING_NEUTRAL_BOOST }
				custom_effect_tooltip = USA_campaigning_neutral_RD_tt
				country_event = { id = USA.senate.12 }
			}
			15 = {
				add_to_temp_variable = { USA_pop_factor_opposition = @CAMPAIGNING_BAD_BOOST }
				custom_effect_tooltip = USA_campaigning_bad_RD_tt
				country_event = { id = USA.senate.13 }
			}
		}
	}
	else = {
		# log = "NPP campaign as opposition"
		random_list = {
			15 = {
				add_to_temp_variable = { USA_pop_factor_opposition = @CAMPAIGNING_GREAT_SUCCESS_BOOST }
				custom_effect_tooltip = USA_campaigning_great_success_NPP_tt
				country_event = { id = USA.senate.14 }
			}
			50 = {
				add_to_temp_variable = { USA_pop_factor_opposition = @CAMPAIGNING_GOOD_SUCCESS_BOOST }
				custom_effect_tooltip = USA_campaigning_good_success_NPP_tt
				country_event = { id = USA.senate.15 }
			}
			20 = {
				add_to_temp_variable = { USA_pop_factor_opposition = @CAMPAIGNING_NEUTRAL_BOOST }
				custom_effect_tooltip = USA_campaigning_neutral_NPP_tt
				country_event = { id = USA.senate.16 }
			}
			15 = {
				add_to_temp_variable = { USA_pop_factor_opposition = @CAMPAIGNING_BAD_BOOST }
				custom_effect_tooltip = USA_campaigning_bad_NPP_tt
				country_event = { id = USA.senate.17 }
			}
		}
	}
	for_each_scope_loop = {
		array = USA_campaign_states_opposition

		USA_campaigning_state_boost_opposition = yes
	}
	clear_array = USA_campaign_states_opposition
	clr_country_flag = currently_campaigning_opposition
}

USA_campaigning_state_boost = {
	if = {
		limit = { USA = { has_country_flag = USA_campaigning_for_RD } }
		multiply_variable = { RD_popularity = USA_pop_factor }
	}
	else = {
		multiply_variable = { NPP_popularity = USA_pop_factor }
	}
}

USA_campaigning_state_boost_opposition = {
	if = {
		limit = { USA = { has_country_flag = USA_campaigning_for_NPP } }
		multiply_variable = { RD_popularity = USA.USA_pop_factor_opposition }
		# log = "[This.GetName] [?USA.USA_pop_factor_opposition] RD campaign as opposition"
	}
	else = {
		multiply_variable = { NPP_popularity = USA.USA_pop_factor_opposition }
		# log = "[This.GetName] [?USA.USA_pop_factor_opposition] NPP campaign as opposition"
	}
}

#USA_campaigning_state_boost_opposition_senate = {
#	if = {
#		limit = { PREV = { has_country_flag = USA_campaigning_for_NPP } }
#		multiply_variable = { RD_popularity = USA_pop_factor_opposition }
#	}
#	else = {
#		multiply_variable = { NPP_popularity = USA_pop_factor_opposition }
#	}
#}


#USA_campaigning_state_boost_senate = {
#	if = {
#		limit = { PREV = { has_country_flag = USA_campaigning_for_RD } }
#		multiply_variable = { RD_popularity = USA_pop_factor }
#	}
#	else = {
#		multiply_variable = { NPP_popularity = USA_pop_factor }
#	}
#}

USA_calculate_campaign_vars = {
	every_owned_state = {
		set_temp_variable = { pct_diff_in_polls_sen = 0 }
		if = {
			limit = {
				check_variable = { THIS.NPP_temp_pop_15 > THIS.RD_temp_pop }
			}
			set_temp_variable = { THIS.pct_diff_in_polls_sen = 2 }
		}
		else_if = {
			limit = {
				check_variable = { THIS.NPP_temp_pop_11 > THIS.RD_temp_pop }
			}
			set_temp_variable = { THIS.pct_diff_in_polls_sen = 1 }
		}
		else_if = {
			limit = {
				check_variable = { THIS.NPP_temp_pop_09 > THIS.RD_temp_pop }
			}
			set_temp_variable = { THIS.pct_diff_in_polls_sen = 0 }
		}
		else_if = {
			limit = {
				check_variable = { THIS.NPP_temp_pop_05 > THIS.RD_temp_pop }
			}
			set_temp_variable = { THIS.pct_diff_in_polls_sen = 1 }
		}
		else = {
			set_temp_variable = { THIS.pct_diff_in_polls_sen = 2 }
		}
	}
	set_temp_variable = { USA_flippability_region_0 = 357.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_0 = 948.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_0 = 949.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_0 = 950.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_0 = 951.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_0 = 952.pct_diff_in_polls_sen }
	divide_temp_variable = { USA_flippability_region_0 = 6 }
	set_temp_variable = { USA_flippability_region_1 = 358.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_1 = 359.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_1 = 360.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_1 = 361.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_1 = 953.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_1 = 954.pct_diff_in_polls_sen }
	divide_temp_variable = { USA_flippability_region_1 = 6 }
	set_temp_variable = { USA_flippability_region_2 = 364.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_2 = 365.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_2 = 366.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_2 = 367.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_2 = 370.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_2 = 371.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_2 = 372.pct_diff_in_polls_sen }
	divide_temp_variable = { USA_flippability_region_2 = 7 }
	set_temp_variable = { USA_flippability_region_3 = 362.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_3 = 363.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_3 = 368.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_3 = 369.pct_diff_in_polls_sen }
	divide_temp_variable = { USA_flippability_region_3 = 4 }
	set_temp_variable = { USA_flippability_region_4 = 374.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_4 = 375.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_4 = 376.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_4 = 377.pct_diff_in_polls_sen }
	divide_temp_variable = { USA_flippability_region_4 = 4 }
	set_temp_variable = { USA_flippability_region_5 = 261.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_5 = 363.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_5 = 364.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_5 = 365.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_5 = 366.pct_diff_in_polls_sen }
	divide_temp_variable = { USA_flippability_region_5 = 5 }
	set_temp_variable = { USA_flippability_region_6 = 373.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_6 = 383.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_6 = 384.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_6 = 389.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_6 = 390.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_6 = 391.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_6 = 392.pct_diff_in_polls_sen }
	divide_temp_variable = { USA_flippability_region_6 = 7 }
	set_temp_variable = { USA_flippability_region_7 = 379.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_7 = 380.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_7 = 381.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_7 = 382.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_7 = 387.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_7 = 388.pct_diff_in_polls_sen }
	divide_temp_variable = { USA_flippability_region_7 = 6 }
	set_temp_variable = { USA_flippability_region_8 = 378.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_8 = 385.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_8 = 386.pct_diff_in_polls_sen }
	add_to_temp_variable = { USA_flippability_region_8 = 463.pct_diff_in_polls_sen }
	if = {
		limit = {
			USA = { owns_state = 629 }
		}
		add_to_temp_variable = { USA_flippability_region_8 = 629.pct_diff_in_polls_sen }
		divide_temp_variable = { USA_flippability_region_8 = 5 }
	}
	else = {
		divide_temp_variable = { USA_flippability_region_8 = 4 }
	}
}

USA_opposition_set_campaign_area = {
	set_country_flag = currently_campaigning_opposition
	USA_calculate_campaign_vars = yes
	random_list = {
		37 = { #37 votes
			modifier = {
				factor = 5
				check_variable = { USA_flippability_region_0 < 0.5 }
			}
			modifier = {
				factor = 2.5
				check_variable = { USA_flippability_region_0 < 1 }
				NOT = { check_variable = { USA_flippability_region_0 < 0.5 } }
			}
			modifier = {
				factor = 0.5
				check_variable = { USA_flippability_region_0 > 1.5 }
				NOT = { check_variable = { USA_flippability_region_0 > 1.9 } }
			}
			modifier = {
				factor = 0.2
				check_variable = { USA_flippability_region_0 > 1.9 }
				NOT = { check_variable = { USA_flippability_region_0 > 1.9 } }
			}
			modifier = {
				factor = 0.83
				has_country_flag = USA_class_1_elections
			}
			modifier = {
				factor = 0.66
				has_country_flag = USA_class_2_elections
			}
			modifier = {
				factor = 0.5
				has_country_flag = USA_class_3_elections
			}
			set_country_flag = USA_opponent_campaign_in_New_England
			set_country_flag = currently_campaigning_opposition
			set_variable = { USA_opposition_campaign_region = 1 } #new england
			set_variable = { US_voting_map_opposition_x = 891 }
			set_variable = { US_voting_map_opposition_y = 187 }
		}
		112 = { #112 votes
			modifier = {
				factor = 5
				check_variable = { USA_flippability_region_1 < 0.5 }
			}
			modifier = {
				factor = 2.5
				check_variable = { USA_flippability_region_1 < 1 }
				NOT = { check_variable = { USA_flippability_region_1 < 0.5 } }
			}
			modifier = {
				factor = 0.5
				check_variable = { USA_flippability_region_1 > 1.5 }
				NOT = { check_variable = { USA_flippability_region_1 > 1.9 } }
			}
			modifier = {
				factor = 0.2
				check_variable = { USA_flippability_region_1 > 1.9 }
				NOT = { check_variable = { USA_flippability_region_1 > 1.9 } }
			}
			modifier = {
				factor = 1
				has_country_flag = USA_class_1_elections
			}
			modifier = {
				factor = 0.5
				has_country_flag = USA_class_2_elections
			}
			modifier = {
				factor = 0.5
				has_country_flag = USA_class_3_elections
			}
			set_country_flag = USA_opponent_campaign_in_East_Coast
			set_country_flag = currently_campaigning_opposition
			set_variable = { USA_opposition_campaign_region = 2 } #mid-atlantic
			set_variable = { US_voting_map_opposition_x = 821 }
			set_variable = { US_voting_map_opposition_y = 260 }
		}
		67 = { #67 votes
			modifier = {
				factor = 5
				check_variable = { USA_flippability_region_2 < 0.5 }
			}
			modifier = {
				factor = 2.5
				check_variable = { USA_flippability_region_2 < 1 }
				NOT = { check_variable = { USA_flippability_region_2 < 0.5 } }
			}
			modifier = {
				factor = 0.5
				check_variable = { USA_flippability_region_2 > 1.5 }
				NOT = { check_variable = { USA_flippability_region_2 > 1.9 } }
			}
			modifier = {
				factor = 0.2
				check_variable = { USA_flippability_region_2 > 1.9 }
				NOT = { check_variable = { USA_flippability_region_2 > 1.9 } }
			}
			modifier = {
				factor = 0.29
				has_country_flag = USA_class_1_elections
			}
			modifier = {
				factor = 0.86
				has_country_flag = USA_class_2_elections
			}
			modifier = {
				factor = 0.86
				has_country_flag = USA_class_3_elections
			}
			set_country_flag = USA_opponent_campaign_in_Deep_South
			set_country_flag = currently_campaigning_opposition
			set_variable = { USA_opposition_campaign_region = 3 } #south
			set_variable = { US_voting_map_opposition_x = 771 }
			set_variable = { US_voting_map_opposition_y = 456 }
		}
		45 = { #45 votes
			modifier = {
				factor = 5
				check_variable = { USA_flippability_region_3 < 0.5 }
			}
			modifier = {
				factor = 2.5
				check_variable = { USA_flippability_region_3 < 1 }
				NOT = { check_variable = { USA_flippability_region_3 < 0.5 } }
			}
			modifier = {
				factor = 0.5
				check_variable = { USA_flippability_region_3 > 1.5 }
				NOT = { check_variable = { USA_flippability_region_3 > 1.9 } }
			}
			modifier = {
				factor = 0.2
				check_variable = { USA_flippability_region_3 > 1.9 }
				NOT = { check_variable = { USA_flippability_region_3 > 1.9 } }
			}
			modifier = {
				factor = 0.5
				has_country_flag = USA_class_1_elections
			}
			modifier = {
				factor = 1
				has_country_flag = USA_class_2_elections
			}
			modifier = {
				factor = 0.5
				has_country_flag = USA_class_3_elections
			}
			set_country_flag = USA_opponent_campaign_in_Upper_South
			set_country_flag = currently_campaigning_opposition
			set_variable = { USA_opposition_campaign_region = 4 } #upper south
			set_variable = { US_voting_map_opposition_x = 805 }
			set_variable = { US_voting_map_opposition_y = 381 }
		}
		98 = { #98 votes
			modifier = {
				factor = 5
				check_variable = { USA_flippability_region_5 < 0.5 }
			}
			modifier = {
				factor = 2.5
				check_variable = { USA_flippability_region_5 < 1 }
				NOT = { check_variable = { USA_flippability_region_5 < 0.5 } }
			}
			modifier = {
				factor = 0.5
				check_variable = { USA_flippability_region_5 > 1.5 }
				NOT = { check_variable = { USA_flippability_region_5 > 1.9 } }
			}
			modifier = {
				factor = 0.2
				check_variable = { USA_flippability_region_5 > 1.9 }
				NOT = { check_variable = { USA_flippability_region_5 > 1.9 } }
			}
			modifier = {
				factor = 0.8
				has_country_flag = USA_class_1_elections
			}
			modifier = {
				factor = 0.4
				has_country_flag = USA_class_2_elections
			}
			modifier = {
				factor = 0.8
				has_country_flag = USA_class_3_elections
			}
			set_country_flag = USA_opponent_campaign_in_Midwest
			set_country_flag = currently_campaigning_opposition
			set_variable = { USA_opposition_campaign_region = 5 } #great lakes
			set_variable = { US_voting_map_opposition_x = 705 }
			set_variable = { US_voting_map_opposition_y = 241 }
		}
		51 = { #51 votes
			modifier = {
				factor = 5
				check_variable = { USA_flippability_region_6 < 0.5 }
			}
			modifier = {
				factor = 2.5
				check_variable = { USA_flippability_region_6 < 1 }
				NOT = { check_variable = { USA_flippability_region_6 < 0.5 } }
			}
			modifier = {
				factor = 0.5
				check_variable = { USA_flippability_region_6 > 1.5 }
				NOT = { check_variable = { USA_flippability_region_6 > 1.9 } }
			}
			modifier = {
				factor = 0.2
				check_variable = { USA_flippability_region_6 > 1.9 }
				NOT = { check_variable = { USA_flippability_region_6 > 1.9 } }
			}
			modifier = {
				factor = 0.57
				has_country_flag = USA_class_1_elections
			}
			modifier = {
				factor = 0.71
				has_country_flag = USA_class_2_elections
			}
			modifier = {
				factor = 0.71
				has_country_flag = USA_class_3_elections
			}
			set_country_flag = USA_opponent_campaign_in_Plains
			set_country_flag = currently_campaigning_opposition
			set_variable = { USA_opposition_campaign_region = 6 } #great plains
			set_variable = { US_voting_map_opposition_x = 569 }
			set_variable = { US_voting_map_opposition_y = 222 }
		}
		42 = { #42 votes
			modifier = {
				factor = 5
				check_variable = { USA_flippability_region_4 < 0.5 }
			}
			modifier = {
				factor = 2.5
				check_variable = { USA_flippability_region_4 < 1 }
				NOT = { check_variable = { USA_flippability_region_4 < 0.5 } }
			}
			modifier = {
				factor = 0.5
				check_variable = { USA_flippability_region_4 > 1.5 }
				NOT = { check_variable = { USA_flippability_region_4 > 1.9 } }
			}
			modifier = {
				factor = 0.2
				check_variable = { USA_flippability_region_4 > 1.9 }
				NOT = { check_variable = { USA_flippability_region_4 > 1.9 } }
			}
			modifier = {
				factor = 0.75
				has_country_flag = USA_class_1_elections
			}
			modifier = {
				factor = 0.75
				has_country_flag = USA_class_2_elections
			}
			modifier = {
				factor = 0.5
				has_country_flag = USA_class_3_elections
			}
			set_country_flag = USA_opponent_campaign_in_South_West
			set_country_flag = currently_campaigning_opposition
			set_variable = { USA_opposition_campaign_region = 7 } #southwest
			set_variable = { US_voting_map_opposition_x = 538 }
			set_variable = { US_voting_map_opposition_y = 436 }
		}
		24 = { #24 votes
			modifier = {
				factor = 5
				check_variable = { USA_flippability_region_7 < 0.5 }
			}
			modifier = {
				factor = 2.5
				check_variable = { USA_flippability_region_7 < 1 }
				NOT = { check_variable = { USA_flippability_region_7 < 0.5 } }
			}
			modifier = {
				factor = 0.5
				check_variable = { USA_flippability_region_7 > 1.5 }
				NOT = { check_variable = { USA_flippability_region_7 > 1.9 } }
			}
			modifier = {
				factor = 0.2
				check_variable = { USA_flippability_region_7 > 1.9 }
				NOT = { check_variable = { USA_flippability_region_7 > 1.9 } }
			}
			modifier = {
				factor = 0.66
				has_country_flag = USA_class_1_elections
			}
			modifier = {
				factor = 0.66
				has_country_flag = USA_class_2_elections
			}
			modifier = {
				factor = 0.66
				has_country_flag = USA_class_3_elections
			}
			set_country_flag = USA_opponent_campaign_in_Rockies
			set_country_flag = currently_campaigning_opposition
			set_variable = { USA_opposition_campaign_region = 8 } #rockies
			set_variable = { US_voting_map_opposition_x = 415 }
			set_variable = { US_voting_map_opposition_y = 213 }
		}
		58 = { #58 votes, sans HI which nobody likes anyway
			modifier = {
				factor = 5
				check_variable = { USA_flippability_region_8 < 0.5 }
			}
			modifier = {
				factor = 2.5
				check_variable = { USA_flippability_region_8 < 1 }
				NOT = { check_variable = { USA_flippability_region_8 < 0.5 } }
			}
			modifier = {
				factor = 0.5
				check_variable = { USA_flippability_region_8 > 1.5 }
				NOT = { check_variable = { USA_flippability_region_8 > 1.9 } }
			}
			modifier = {
				factor = 0.2
				check_variable = { USA_flippability_region_8 > 1.9 }
				NOT = { check_variable = { USA_flippability_region_8 > 1.9 } }
			}
			modifier = {
				factor = 0.5
				has_country_flag = USA_class_1_elections
			}
			modifier = {
				factor = 0.5
				has_country_flag = USA_class_2_elections
			}
			modifier = {
				factor = 1
				has_country_flag = USA_class_3_elections
			}
			set_country_flag = USA_opponent_campaign_in_Pacific
			set_country_flag = currently_campaigning_opposition
			set_variable = { USA_opposition_campaign_region = 9 } #west coast
			set_variable = { US_voting_map_opposition_x = 257 }
			set_variable = { US_voting_map_opposition_y = 180 }
		}
	}
}
USA_GUI_voting_setup = {
	clear_array = USA_states
	add_to_array = { USA_states = 367 }
	add_to_array = { USA_states = 463 }
	add_to_array = { USA_states = 377 }
	add_to_array = { USA_states = 372 }
	add_to_array = { USA_states = 378 }
	add_to_array = { USA_states = 382 }
	add_to_array = { USA_states = 357 }
	add_to_array = { USA_states = 954 }
	add_to_array = { USA_states = 366 }
	add_to_array = { USA_states = 365 }
	add_to_array = { USA_states = 629 }
	add_to_array = { USA_states = 387 }
	add_to_array = { USA_states = 395 }
	add_to_array = { USA_states = 396 }
	add_to_array = { USA_states = 392 }
	add_to_array = { USA_states = 383 }
	add_to_array = { USA_states = 369 }
	add_to_array = { USA_states = 371 }
	add_to_array = { USA_states = 952 }
	add_to_array = { USA_states = 361 }
	add_to_array = { USA_states = 949 }
	add_to_array = { USA_states = 393 }
	add_to_array = { USA_states = 391 }
	add_to_array = { USA_states = 370 }
	add_to_array = { USA_states = 373 }
	add_to_array = { USA_states = 388 }
	add_to_array = { USA_states = 384 }
	add_to_array = { USA_states = 379 }
	add_to_array = { USA_states = 951 }
	add_to_array = { USA_states = 359 }
	add_to_array = { USA_states = 376 }
	add_to_array = { USA_states = 358 }
	add_to_array = { USA_states = 363 }
	add_to_array = { USA_states = 389 }
	add_to_array = { USA_states = 261 }
	add_to_array = { USA_states = 374 }
	add_to_array = { USA_states = 385 }
	add_to_array = { USA_states = 360 }
	add_to_array = { USA_states = 948 }
	add_to_array = { USA_states = 364 }
	add_to_array = { USA_states = 390 }
	add_to_array = { USA_states = 368 }
	add_to_array = { USA_states = 375 }
	add_to_array = { USA_states = 380 }
	add_to_array = { USA_states = 950 }
	add_to_array = { USA_states = 362 }
	add_to_array = { USA_states = 386 }
	add_to_array = { USA_states = 953 }
	add_to_array = { USA_states = 394 }
	add_to_array = { USA_states = 381 }
	add_to_array = { USA_states = 992 }

	set_variable = { USA_GUI_republican_vote_points^1940 = 280 }
	set_variable = { USA_GUI_republican_vote_points^1944 = 356 }
	set_variable = { USA_GUI_republican_vote_points^1948 = 117 }
	set_variable = { USA_GUI_republican_vote_points^1952 = 187 }
	set_variable = { USA_GUI_republican_vote_points^1956 = 105 }

	set_variable = { USA_GUI_democrat_vote_points^1940 = 251 }
	set_variable = { USA_GUI_democrat_vote_points^1944 = 175 }
	set_variable = { USA_GUI_democrat_vote_points^1948 = 414 }
	set_variable = { USA_GUI_democrat_vote_points^1952 = 271 }
	set_variable = { USA_GUI_democrat_vote_points^1956 = 294 }

	set_variable = { USA_GUI_progressive_vote_points^1944 = 1 }
	set_variable = { USA_GUI_progressive_vote_points^1956 = 18 }

	set_variable = { USA_GUI_nationalist_vote_points^1948 = 3 }
	set_variable = { USA_GUI_nationalist_vote_points^1952 = 73 }
	set_variable = { USA_GUI_nationalist_vote_points^1956 = 114 }

	set_variable = { USA_GUI_rd_vote_points^1960 = 427 }
	set_variable = { USA_GUI_npp_vote_points^1960 = 107 }

	USA_GUI_state_colour_previous_setup = yes

	clear_array = USA_states_dots
	for_loop_effect = {
		start = 0
		end = 50
		value = idx

		set_variable = { USA_number_to_add = idx }
		add_to_array = { USA_states_dots = USA_number_to_add } 
	}

	set_variable = { USA_state_pres_cheat_value_rdc = 1 }
	set_variable = { USA_state_pres_cheat_value_npp = 1 }

	set_variable = { USA_total_votes_rdc_prev_1^1940 = 23 }
	set_variable = { USA_total_votes_rdc_prev_2^1940 = 1866 }
	set_variable = { USA_total_votes_rdc_prev_3^1940 = 860 }
	set_variable = { USA_total_votes_npp_prev_1^1940 = 24 }
	set_variable = { USA_total_votes_npp_prev_2^1940 = 1064 }
	set_variable = { USA_total_votes_npp_prev_3^1940 = 107 }

	set_variable = { USA_total_votes_rdc_prev_1^1944 = 18 }
	set_variable = { USA_total_votes_rdc_prev_2^1944 = 1207 }
	set_variable = { USA_total_votes_rdc_prev_3^1944 = 984 }
	set_variable = { USA_total_votes_npp_prev_1^1944 = 19 }
	set_variable = { USA_total_votes_npp_prev_2^1944 = 1783 }
	set_variable = { USA_total_votes_npp_prev_3^1944 = 675 }

	set_variable = { USA_total_votes_rdc_prev_1^1948 = 31 }
	set_variable = { USA_total_votes_rdc_prev_2^1948 = 1967 }
	set_variable = { USA_total_votes_rdc_prev_3^1948 = 257 }
	set_variable = { USA_total_votes_npp_prev_1^1948 = 21 }
	set_variable = { USA_total_votes_npp_prev_2^1948 = 1275 }
	set_variable = { USA_total_votes_npp_prev_3^1948 = 505 }

	set_variable = { USA_total_votes_rdc_prev_1^1952 = 26 }
	set_variable = { USA_total_votes_rdc_prev_2^1952 = 1316 }
	set_variable = { USA_total_votes_rdc_prev_3^1952 = 801 }
	set_variable = { USA_total_votes_npp_prev_1^1952 = 23 }
	set_variable = { USA_total_votes_npp_prev_2^1952 = 1983 }
	set_variable = { USA_total_votes_npp_prev_3^1952 = 559 }

	set_variable = { USA_total_votes_rdc_prev_1^1956 = 26 }
	set_variable = { USA_total_votes_rdc_prev_2^1956 = 1408 }
	set_variable = { USA_total_votes_rdc_prev_3^1956 = 954 }
	set_variable = { USA_total_votes_npp_prev_1^1956 = 10 }
	set_variable = { USA_total_votes_npp_prev_2^1956 = 1972 }
	set_variable = { USA_total_votes_npp_prev_3^1956 = 612 }

	set_variable = { USA_total_votes_rdc_prev_1^1960 = 38 }
	set_variable = { USA_total_votes_rdc_prev_2^1960 = 1687 }
	set_variable = { USA_total_votes_rdc_prev_3^1960 = 346 }
	set_variable = { USA_total_votes_npp_prev_1^1960 = 26 }
	set_variable = { USA_total_votes_npp_prev_2^1960 = 1254 }
	set_variable = { USA_total_votes_npp_prev_3^1960 = 489 }

	set_variable = { USA_GUI_selected_prev_year = 1960 }
	set_variable = { USA_prev_selected_year = 1960 }
	set_variable = { USA_GUI_selected_prev_year_senate = 1962 }
	clear_array = US_voting_offset_values
	add_to_array = { US_voting_offset_values = 9 }
	add_to_array = { US_voting_offset_values = 5 }
	add_to_array = { US_voting_offset_values = 9 }
	add_to_array = { US_voting_offset_values = 9 }
	add_to_array = { US_voting_offset_values = 8 }
	add_to_array = { US_voting_offset_values = 8 }
	add_to_array = { US_voting_offset_values = 9 }
	add_to_array = { US_voting_offset_values = 7 }
	add_to_array = { US_voting_offset_values = 9 }
	add_to_array = { US_voting_offset_values = 9 }
	set_variable = { US_voting_offset_values_y = 176 }

	set_variable = { US_prev_elec_cali_status^1940 = 2 }
	set_variable = { US_prev_elec_cali_status^1944 = 2 }
	set_variable = { US_prev_elec_cali_status^1948 = 1 }
	set_variable = { US_prev_elec_cali_status^1952 = 1 }
	set_variable = { US_prev_elec_cali_status^1956 = 1 }
	set_variable = { US_prev_elec_cali_status^1960 = 1 }

	set_variable = { US_prev_elec_alaska_status^1940 = 3 }
	set_variable = { US_prev_elec_alaska_status^1944 = 3 }
	set_variable = { US_prev_elec_alaska_status^1948 = 3 }
	set_variable = { US_prev_elec_alaska_status^1952 = 3 }
	set_variable = { US_prev_elec_alaska_status^1956 = 3 }
	set_variable = { US_prev_elec_alaska_status^1960 = 1 }

	set_variable = { US_prev_elec_hawaii_status^1940 = 3 }
	set_variable = { US_prev_elec_hawaii_status^1944 = 3 }
	set_variable = { US_prev_elec_hawaii_status^1948 = 3 }
	set_variable = { US_prev_elec_hawaii_status^1952 = 3 }
	set_variable = { US_prev_elec_hawaii_status^1956 = 3 }
	set_variable = { US_prev_elec_hawaii_status^1960 = 1 }

	US_GUI_setup_state_values = yes

	set_variable = { USA_GUI_pres_left_side_frame = 1 }
	set_variable = { USA_GUI_pres_right_side_frame = 1 }
	set_variable = { USA_pres_contender_rd = 5 }
	set_variable = { USA_pres_contender_npp = 5 }

	US_election_update_gui_post_senate = yes

	set_variable = { USA_GUI_saving_years^1 = 1962 }
	set_variable = { USA_GUI_saving_years^2 = 1964 }
	set_variable = { USA_GUI_saving_years^3 = 1966 }
	set_variable = { USA_GUI_saving_years^4 = 1968 }
	set_variable = { USA_GUI_saving_years^5 = 1970 }
	set_variable = { USA_GUI_saving_years^6 = 1972 }

	set_variable = { USA_GUI_saving_years_pres^1 = 1964 }
	set_variable = { USA_GUI_saving_years_pres^2 = 1968 }
	set_variable = { USA_GUI_saving_years_pres^3 = 1972 }

	set_variable = { USA_pres_contender_rd_prev^1940 = 1 }
	set_variable = { USA_pres_contender_rd_prev^1944 = 2 }
	set_variable = { USA_pres_contender_rd_prev^1948 = 3 }
	set_variable = { USA_pres_contender_rd_prev^1952 = 4 }
	set_variable = { USA_pres_contender_rd_prev^1956 = 5 }
	set_variable = { USA_pres_contender_rd_prev^1960 = 6 }

	set_variable = { USA_pres_contender_npp_prev^1940 = 1 }
	set_variable = { USA_pres_contender_npp_prev^1944 = 2 }
	set_variable = { USA_pres_contender_npp_prev^1948 = 3 }
	set_variable = { USA_pres_contender_npp_prev^1952 = 4 }
	set_variable = { USA_pres_contender_npp_prev^1956 = 5 }
	set_variable = { USA_pres_contender_npp_prev^1960 = 6 }

	# Setting up variables to clear an error
	set_variable = { REP_STATE_PCT = 0 }
	set_variable = { DEM_STATE_PCT = 0 }
	set_variable = { PRO_STATE_PCT = 0 }
	set_variable = { NAT_STATE_PCT = 0 }
	set_variable = { ANV_STATE_PCT = 0 }
	set_variable = { COM_STATE_PCT = 0 }
	USA_recalculate_polls = yes

	USA_GUI_state_x_y_setup = yes

	USA_polls_setup_effect = yes

	USA_GUI_fetch_real_index_numbers = yes

	clear_variable = USA_state_number_to_add
	clear_array = USA_states_icon_array
	clear_array = USA_states_outline_array
	for_loop_effect = {
		start = 0
		end = 53
		value = idx

		set_variable = { USA_number_to_add = idx }
		add_to_array = { USA_states_icon_array = USA_number_to_add } 
		add_to_array = { USA_states_outline_array = USA_number_to_add } 
	}
	set_variable = { USA_previously_selected_state_in_region^1 = 18 }
	set_variable = { USA_previously_selected_state_in_region^2 = 31 }
	set_variable = { USA_previously_selected_state_in_region^3 = 0 }
	set_variable = { USA_previously_selected_state_in_region^4 = 45 }
	set_variable = { USA_previously_selected_state_in_region^5 = 13 }
	set_variable = { USA_previously_selected_state_in_region^6 = 22 }
	set_variable = { USA_previously_selected_state_in_region^7 = 42 }
	set_variable = { USA_previously_selected_state_in_region^8 = 43 }
	set_variable = { USA_previously_selected_state_in_region^9 = 4 }

	set_variable = { USA_rd_total_votes_from_election_prev^1940 = 23866.860 }
	set_variable = { USA_rd_total_votes_from_election_prev^1944 = 18207.984 }
	set_variable = { USA_rd_total_votes_from_election_prev^1948 = 31967.257 }
	set_variable = { USA_rd_total_votes_from_election_prev^1952 = 26316.801 }
	set_variable = { USA_rd_total_votes_from_election_prev^1956 = 26408.954 }
	set_variable = { USA_rd_total_votes_from_election_prev^1960 = 38687.386 }

	set_variable = { USA_npp_total_votes_from_election_prev^1940 = 24064.107 }
	set_variable = { USA_npp_total_votes_from_election_prev^1944 = 19783.675 }
	set_variable = { USA_npp_total_votes_from_election_prev^1948 = 21275.505 }
	set_variable = { USA_npp_total_votes_from_election_prev^1952 = 23983.559 }
	set_variable = { USA_npp_total_votes_from_election_prev^1956 = 10972.612 }
	set_variable = { USA_npp_total_votes_from_election_prev^1960 = 26254.489 }

	USA_set_state_flags_for_campaigning = yes

	clear_array = USA_previous_elections_presidential
	add_to_array = { USA_previous_elections_presidential = 1940 }
	add_to_array = { USA_previous_elections_presidential = 1944 }
	add_to_array = { USA_previous_elections_presidential = 1948 }
	add_to_array = { USA_previous_elections_presidential = 1952 }
	add_to_array = { USA_previous_elections_presidential = 1956 }
	add_to_array = { USA_previous_elections_presidential = 1960 }
	add_to_array = { USA_previous_elections_presidential = 1964 }
	add_to_array = { USA_previous_elections_presidential = 1968 }
	add_to_array = { USA_previous_elections_presidential = 1972 }

	clear_array = USA_previous_elections_senate
	add_to_array = { USA_previous_elections_senate = 1962 }
	add_to_array = { USA_previous_elections_senate = 1964 }
	add_to_array = { USA_previous_elections_senate = 1966 }
	add_to_array = { USA_previous_elections_senate = 1968 }
	add_to_array = { USA_previous_elections_senate = 1970 }
	add_to_array = { USA_previous_elections_senate = 1972 }

	set_variable = { US_prev_idx = 5 }
	set_variable = { US_prev_idx_sen = 0 }

	clear_array = USA_previous_elections_presidential_index
	add_to_array = { USA_previous_elections_presidential_index = 1 }
	add_to_array = { USA_previous_elections_presidential_index = 2 }
	add_to_array = { USA_previous_elections_presidential_index = 3 }
	add_to_array = { USA_previous_elections_presidential_index = 4 }
	add_to_array = { USA_previous_elections_presidential_index = 5 }
	add_to_array = { USA_previous_elections_presidential_index = 106 }
	add_to_array = { USA_previous_elections_presidential_index = 8 }
	add_to_array = { USA_previous_elections_presidential_index = 10 }
	add_to_array = { USA_previous_elections_presidential_index = 12 }

	clear_array = USA_previous_elections_senate_index
	add_to_array = { USA_previous_elections_senate_index = 107 }
	add_to_array = { USA_previous_elections_senate_index = 8 }
	add_to_array = { USA_previous_elections_senate_index = 9 }
	add_to_array = { USA_previous_elections_senate_index = 10 }
	add_to_array = { USA_previous_elections_senate_index = 11 }
	add_to_array = { USA_previous_elections_senate_index = 12 }

	for_loop_effect = {
		start = 0
		end = 51
		value = idx

		set_variable = { state_value = USA_states^idx }
		set_variable = { Electoral_votes^idx = state_value:electoral_votes }
	}

}
USA_set_state_flags_for_campaigning = {
	#New England
	952 = { set_state_flag = USA_campaign_region_1 }
	951 = { set_state_flag = USA_campaign_region_1 }
	950 = { set_state_flag = USA_campaign_region_1 }
	949 = { set_state_flag = USA_campaign_region_1 }
	948 = { set_state_flag = USA_campaign_region_1 }
	357 = { set_state_flag = USA_campaign_region_1 }

	#East Coast
	358 = { set_state_flag = USA_campaign_region_2 }
	360 = { set_state_flag = USA_campaign_region_2 }
	359 = { set_state_flag = USA_campaign_region_2 }
	953 = { set_state_flag = USA_campaign_region_2 }
	954 = { set_state_flag = USA_campaign_region_2 }
	361 = { set_state_flag = USA_campaign_region_2 }

	#Deep South
	364 = { set_state_flag = USA_campaign_region_3 }
	372 = { set_state_flag = USA_campaign_region_3 }
	371 = { set_state_flag = USA_campaign_region_3 }
	370 = { set_state_flag = USA_campaign_region_3 }
	367 = { set_state_flag = USA_campaign_region_3 }
	365 = { set_state_flag = USA_campaign_region_3 }
	366 = { set_state_flag = USA_campaign_region_3 }

	#Upper South
	363 = { set_state_flag = USA_campaign_region_4 }
	368 = { set_state_flag = USA_campaign_region_4 }
	369 = { set_state_flag = USA_campaign_region_4 }
	362 = { set_state_flag = USA_campaign_region_4 }

	#Great Lakes
	261 = { set_state_flag = USA_campaign_region_5 }
	396 = { set_state_flag = USA_campaign_region_5 }
	395 = { set_state_flag = USA_campaign_region_5 }
	393 = { set_state_flag = USA_campaign_region_5 }
	294 = { set_state_flag = USA_campaign_region_5 }

	#Great Plains
	373 = { set_state_flag = USA_campaign_region_6 }
	383 = { set_state_flag = USA_campaign_region_6 }
	392 = { set_state_flag = USA_campaign_region_6 }
	384 = { set_state_flag = USA_campaign_region_6 }
	391 = { set_state_flag = USA_campaign_region_6 }
	390 = { set_state_flag = USA_campaign_region_6 }
	389 = { set_state_flag = USA_campaign_region_6 }

	#Southwest
	375 = { set_state_flag = USA_campaign_region_7 }
	374 = { set_state_flag = USA_campaign_region_7 }
	376 = { set_state_flag = USA_campaign_region_7 }
	377 = { set_state_flag = USA_campaign_region_7 }

	#Rockies
	382 = { set_state_flag = USA_campaign_region_8 }
	381 = { set_state_flag = USA_campaign_region_8 }
	388 = { set_state_flag = USA_campaign_region_8 }
	380 = { set_state_flag = USA_campaign_region_8 }
	378 = { set_state_flag = USA_campaign_region_8 }
	387 = { set_state_flag = USA_campaign_region_8 }

	#West Coast
	629 = { set_state_flag = USA_campaign_region_9 }
	378 = { set_state_flag = USA_campaign_region_9 }
	385 = { set_state_flag = USA_campaign_region_9 }
	386 = { set_state_flag = USA_campaign_region_9 }
	463 = { set_state_flag = USA_campaign_region_9 }
}
USA_save_presidential_election_results = {
	set_variable = { USA_GUI_selected_tab = 2 }
	set_variable = { USA_GUI_selected_tab_sub = 3 }
	set_variable = { US_GUI_year_to_save = USA_GUI_saving_years_pres^USA_no_of_presidential_elections }

	if = {
		limit = {
			USA = {
				owns_state = 629
			}
		}
		set_variable = { US_prev_elec_hawaii_status^US_GUI_year_to_save = 2 }
	}
	else = {
		set_variable = { US_prev_elec_hawaii_status^US_GUI_year_to_save = 1 }
	}

	if = {
		limit = {
			USA = {
				owns_state = 772
			}
		}
		set_variable = { US_prev_elec_alaska_status^US_GUI_year_to_save = 2 }
	}
	else = {
		set_variable = { US_prev_elec_alaska_status^US_GUI_year_to_save = 1 }
	}

	if = {
		limit = {
			USA = {
				owns_state = 768
			}
		}
		set_variable = { US_prev_elec_cali_status^US_GUI_year_to_save = 2 }
	}
	else = {
		set_variable = { US_prev_elec_cali_status^US_GUI_year_to_save = 1 }
	}

	set_variable = { USA_GUI_rd_vote_points^US_GUI_year_to_save = US_voting_rdc_electoral_college_votes }
	set_variable = { USA_GUI_npp_vote_points^US_GUI_year_to_save = US_voting_npp_electoral_college_votes }

	set_variable = { USA_total_votes_rdc_prev_1^US_GUI_year_to_save = US_voting_actual_rd_votes_first_part }
	set_variable = { USA_total_votes_rdc_prev_2^US_GUI_year_to_save = US_voting_actual_rd_votes_second_part }
	set_variable = { USA_total_votes_rdc_prev_3^US_GUI_year_to_save = US_voting_actual_rd_votes_third_part }
	set_variable = { USA_total_votes_npp_prev_1^US_GUI_year_to_save = US_voting_actual_npp_votes_first_part }
	set_variable = { USA_total_votes_npp_prev_2^US_GUI_year_to_save = US_voting_actual_npp_votes_second_part }
	set_variable = { USA_total_votes_npp_prev_3^US_GUI_year_to_save = US_voting_actual_npp_votes_third_part }

	for_each_scope_loop = {
		array = USA_states

		set_variable = { US_state_colour_for_map_prev^USA.US_GUI_year_to_save = US_state_colour_for_map }
	}

	set_variable = { USA_pres_contender_rd_prev^US_GUI_year_to_save = USA_pres_contender_rd } 
	set_variable = { USA_pres_contender_npp_prev^US_GUI_year_to_save = USA_pres_contender_npp }

	set_variable = { USA_rd_total_votes_from_election_prev^US_GUI_year_to_save = USA_rd_total_votes_from_election }
	set_variable = { USA_npp_total_votes_from_election_prev^US_GUI_year_to_save = USA_npp_total_votes_from_election }
	USA_display_election_results = yes
}
USA_GUI_setup_nat_pop_map = {
	for_loop_effect = {
		start = 0
		end = 51
		value = idx

		set_variable = { state_number = USA_states^idx }
		set_variable = { state_number:USA_first_party = 1 }
		set_variable = { state_number:USA_second_party = 2 }
		set_variable = { state_number:USA_map_split = state_number:NPP_popularity_unrounded } 
		round_variable = state_number:USA_map_split
	}
	USA_set_variables_for_map = yes
}
USA_GUI_setup_rdc_pop_map = {
	for_loop_effect = {
		start = 0
		end = 51
		value = idx

		set_variable = { state_number = USA_states^idx }
		set_variable = { state_number:USA_first_party = 3 }
		set_variable = { state_number:USA_second_party = 4 }
		set_variable = { state_number:USA_map_split = state_number:dem_results_pct }
	}
	USA_set_variables_for_map = yes
}
USA_GUI_setup_npp_pop_map = {
	for_loop_effect = {
		start = 0
		end = 51
		value = idx

		set_variable = { state_number = USA_states^idx }
		clear_array = NPP_state_pops
		add_to_array = { NPP_state_pops = state_number:pro_results_pct }
		add_to_array = { NPP_state_pops = state_number:nat_results_pct }
		add_to_array = { NPP_state_pops = state_number:com_results_pct }
		add_to_array = { NPP_state_pops = state_number:anv_results_pct }
		find_highest_in_array = { array = NPP_state_pops }
		set_variable = { state_number:USA_first_party = i }
		set_variable = { state_number:NPP_big_party_percent = NPP_state_pops^i }
		set_variable = { NPP_state_pops^i = 0 }
		find_highest_in_array = { array = NPP_state_pops }
		set_variable = { state_number:USA_second_party = i }
		set_variable = { state_number:NPP_second_party_percent = NPP_state_pops^i }
		divide_variable = { state_number:NPP_second_party_percent = state_number:NPP_big_party_percent }
		multiply_variable = { state_number:NPP_second_party_percent = 50 }
		round_variable = state_number:NPP_second_party_percent
		set_variable = { state_number:USA_map_split = state_number:NPP_second_party_percent }
		add_to_variable = { state_number:USA_first_party = 5 }
		add_to_variable = { state_number:USA_second_party = 5 }
	}
	USA_set_variables_for_map = yes
}
USA_voting_GUI_work_out_previous_presidential_results = {
	set_variable = { USA_GUI_total_pres_votes = USA_GUI_republican_vote_points^USA_GUI_selected_prev_year }
	add_to_variable = { USA_GUI_total_pres_votes = USA_GUI_democrat_vote_points^USA_GUI_selected_prev_year }
	add_to_variable = { USA_GUI_total_pres_votes = USA_GUI_progressive_vote_points^USA_GUI_selected_prev_year }
	add_to_variable = { USA_GUI_total_pres_votes = USA_GUI_nationalist_vote_points^USA_GUI_selected_prev_year }
	add_to_variable = { USA_GUI_total_pres_votes = USA_GUI_rd_vote_points^USA_GUI_selected_prev_year }
	add_to_variable = { USA_GUI_total_pres_votes = USA_GUI_npp_vote_points^USA_GUI_selected_prev_year }

	set_variable = { USA_GUI_nationalist_vote^USA_GUI_selected_prev_year = USA_GUI_nationalist_vote_points^USA_GUI_selected_prev_year }
	set_variable = { USA_GUI_progressive_vote^USA_GUI_selected_prev_year = USA_GUI_progressive_vote_points^USA_GUI_selected_prev_year }
	set_variable = { USA_GUI_democrat_vote^USA_GUI_selected_prev_year = USA_GUI_democrat_vote_points^USA_GUI_selected_prev_year }
	set_variable = { USA_GUI_republican_vote^USA_GUI_selected_prev_year = USA_GUI_republican_vote_points^USA_GUI_selected_prev_year }
	set_variable = { USA_GUI_rd_vote^USA_GUI_selected_prev_year = USA_GUI_rd_vote_points^USA_GUI_selected_prev_year }
	set_variable = { USA_GUI_npp_vote^USA_GUI_selected_prev_year = USA_GUI_npp_vote_points^USA_GUI_selected_prev_year }

	divide_variable = { USA_GUI_democrat_vote^USA_GUI_selected_prev_year = USA_GUI_total_pres_votes }
	divide_variable = { USA_GUI_republican_vote^USA_GUI_selected_prev_year = USA_GUI_total_pres_votes }
	divide_variable = { USA_GUI_rd_vote^USA_GUI_selected_prev_year = USA_GUI_total_pres_votes }
	divide_variable = { USA_GUI_npp_vote^USA_GUI_selected_prev_year = USA_GUI_total_pres_votes }

	multiply_variable = { USA_GUI_democrat_vote^USA_GUI_selected_prev_year = 100 }
	multiply_variable = { USA_GUI_republican_vote^USA_GUI_selected_prev_year = 100 }
	multiply_variable = { USA_GUI_rd_vote^USA_GUI_selected_prev_year = 100 }
	multiply_variable = { USA_GUI_npp_vote^USA_GUI_selected_prev_year = 100 }

	add_to_variable = { USA_GUI_progressive_vote^USA_GUI_selected_prev_year = USA_GUI_democrat_vote_points^USA_GUI_selected_prev_year }
	divide_variable = { USA_GUI_progressive_vote^USA_GUI_selected_prev_year = USA_GUI_total_pres_votes }
	multiply_variable = { USA_GUI_progressive_vote^USA_GUI_selected_prev_year = 100 }

	if = {
		limit = {
			NOT = {
				check_variable = { USA_GUI_selected_prev_year = 1956 }
			}
		}
		add_to_variable = { USA_GUI_nationalist_vote^USA_GUI_selected_prev_year = USA_GUI_republican_vote_points^USA_GUI_selected_prev_year }
		divide_variable = { USA_GUI_nationalist_vote^USA_GUI_selected_prev_year = USA_GUI_total_pres_votes }
		multiply_variable = { USA_GUI_nationalist_vote^USA_GUI_selected_prev_year = 100 }
	}
	else = {
		divide_variable = { USA_GUI_nationalist_vote^USA_GUI_selected_prev_year = USA_GUI_total_pres_votes }
		multiply_variable = { USA_GUI_nationalist_vote^USA_GUI_selected_prev_year = 100 }
		add_to_variable = { USA_GUI_republican_vote^USA_GUI_selected_prev_year = USA_GUI_nationalist_vote^USA_GUI_selected_prev_year }
	}

	set_variable = { US_voting_votes_display^0 = USA_total_votes_rdc_prev_1^USA_GUI_selected_prev_year }
	set_variable = { US_voting_votes_display_actual^0 = USA_total_votes_rdc_prev_1^USA_GUI_selected_prev_year }
	set_variable = { US_voting_votes_display^1 = USA_total_votes_rdc_prev_2^USA_GUI_selected_prev_year }
	set_variable = { US_voting_votes_display_actual^1 = USA_total_votes_rdc_prev_2^USA_GUI_selected_prev_year }
	set_variable = { US_voting_votes_display^2 = USA_total_votes_rdc_prev_3^USA_GUI_selected_prev_year }
	set_variable = { US_voting_votes_display_actual^2 = USA_total_votes_rdc_prev_3^USA_GUI_selected_prev_year }
	multiply_variable = { US_voting_votes_display^0 = 1000 }
	multiply_variable = { US_voting_votes_display^1 = 1000 }
	multiply_variable = { US_voting_votes_display^2 = 1000 }

	set_variable = { US_voting_votes_display^3 = USA_total_votes_npp_prev_1^USA_GUI_selected_prev_year }
	set_variable = { US_voting_votes_display_actual^3 = USA_total_votes_npp_prev_1^USA_GUI_selected_prev_year }
	set_variable = { US_voting_votes_display^4 = USA_total_votes_npp_prev_2^USA_GUI_selected_prev_year }
	set_variable = { US_voting_votes_display_actual^4 = USA_total_votes_npp_prev_2^USA_GUI_selected_prev_year }
	set_variable = { US_voting_votes_display^5 = USA_total_votes_npp_prev_3^USA_GUI_selected_prev_year }
	set_variable = { US_voting_votes_display_actual^5 = USA_total_votes_npp_prev_3^USA_GUI_selected_prev_year }
	multiply_variable = { US_voting_votes_display^3 = 1000 }
	multiply_variable = { US_voting_votes_display^4 = 1000 }
	multiply_variable = { US_voting_votes_display^5 = 1000 }

	if = {
		limit = {
			check_variable = { USA_GUI_selected_prev_year < 1955 }
		}
		set_variable = { US_voting_rdc_electoral_college_votes_prev = USA_GUI_democrat_vote_points^USA_GUI_selected_prev_year }
		set_variable = { US_voting_npp_electoral_college_votes_prev = USA_GUI_republican_vote_points^USA_GUI_selected_prev_year }
		set_variable = { US_voting_rdc_electoral_college_votes = USA_GUI_democrat_vote_points^USA_GUI_selected_prev_year }
		set_variable = { US_GUI_rdc_elec_votes_prev = 0 }
		set_variable = { US_voting_npp_electoral_college_votes = USA_GUI_republican_vote_points^USA_GUI_selected_prev_year }
		set_variable = { US_GUI_npp_elec_votes_prev = 0 }

		set_variable = { USA_prev_year_total = USA_GUI_democrat_vote_points^USA_GUI_selected_prev_year }
		add_to_variable = { USA_prev_year_total = USA_GUI_republican_vote_points^USA_GUI_selected_prev_year }
		add_to_variable = { USA_prev_year_total = USA_GUI_nationalist_vote_points^USA_GUI_selected_prev_year }
		add_to_variable = { USA_prev_year_total = USA_GUI_progressive_vote_points^USA_GUI_selected_prev_year }
		set_variable = { USA_prev_year_percent = USA_GUI_democrat_vote_points^USA_GUI_selected_prev_year }
		set_variable = { USA_prev_year_rep_percent = USA_GUI_republican_vote_points^USA_GUI_selected_prev_year }
		divide_variable = { USA_prev_year_percent = USA_prev_year_total }
		divide_variable = { USA_prev_year_rep_percent = USA_prev_year_total }
		multiply_variable = { USA_prev_year_percent = 100 }
		multiply_variable = { USA_prev_year_rep_percent = 100 }
		round_variable = USA_prev_year_percent
		round_variable = USA_prev_year_rep_percent
		multiply_variable = { USA_prev_year_rep_percent = 1000 }
		set_variable = { US_voting_animated_bar_frame = 1100000 }
		subtract_from_variable = { US_voting_animated_bar_frame = USA_prev_year_rep_percent }
		add_to_variable = { US_voting_animated_bar_frame = USA_prev_year_percent }
	}
	else_if = {
		limit = {
			check_variable = { USA_GUI_selected_prev_year = 1956 }
		}
		set_variable = { US_voting_rdc_electoral_college_votes_prev = USA_GUI_democrat_vote_points^USA_GUI_selected_prev_year }
		set_variable = { US_voting_npp_electoral_college_votes_prev = USA_GUI_nationalist_vote_points^USA_GUI_selected_prev_year }
		set_variable = { US_voting_rdc_electoral_college_votes = USA_GUI_democrat_vote_points^USA_GUI_selected_prev_year }
		set_variable = { US_GUI_rdc_elec_votes_prev = 0 }
		set_variable = { US_voting_npp_electoral_college_votes = USA_GUI_nationalist_vote_points^USA_GUI_selected_prev_year }
		set_variable = { US_GUI_npp_elec_votes_prev = 0 }

		set_variable = { USA_prev_year_total = USA_GUI_democrat_vote_points^USA_GUI_selected_prev_year }
		add_to_variable = { USA_prev_year_total = USA_GUI_republican_vote_points^USA_GUI_selected_prev_year }
		add_to_variable = { USA_prev_year_total = USA_GUI_nationalist_vote_points^USA_GUI_selected_prev_year }
		add_to_variable = { USA_prev_year_total = USA_GUI_progressive_vote_points^USA_GUI_selected_prev_year }

		set_variable = { USA_prev_year_percent = USA_GUI_democrat_vote_points^USA_GUI_selected_prev_year }
		set_variable = { USA_prev_year_rep_percent = USA_prev_year_total }
		set_variable = { USA_prev_year_nat_percent = USA_prev_year_total }

		subtract_from_variable = { USA_prev_year_nat_percent = USA_GUI_nationalist_vote_points^USA_GUI_selected_prev_year }
		subtract_from_variable = { USA_prev_year_rep_percent = USA_GUI_republican_vote_points^USA_GUI_selected_prev_year }
		subtract_from_variable = { USA_prev_year_rep_percent = USA_GUI_nationalist_vote_points^USA_GUI_selected_prev_year }

		divide_variable = { USA_prev_year_nat_percent = USA_prev_year_total }
		divide_variable = { USA_prev_year_rep_percent = USA_prev_year_total }
		divide_variable = { USA_prev_year_percent = USA_prev_year_total }

		multiply_variable = { USA_prev_year_nat_percent = 100 }
		multiply_variable = { USA_prev_year_rep_percent = 100 }
		multiply_variable = { USA_prev_year_percent = 100 }

		round_variable = USA_prev_year_nat_percent
		round_variable = USA_prev_year_rep_percent
		round_variable = USA_prev_year_percent

		set_variable = { US_voting_animated_bar_frame = 1000000 }
		multiply_variable = { USA_prev_year_percent = 10000 }
		add_to_variable = { US_voting_animated_bar_frame = USA_prev_year_percent }
		multiply_variable = { USA_prev_year_rep_percent = 100 }
		add_to_variable = { US_voting_animated_bar_frame = USA_prev_year_rep_percent }
		add_to_variable = { US_voting_animated_bar_frame = USA_prev_year_nat_percent }
	}
	else = {
		set_variable = { US_voting_rdc_electoral_college_votes_prev = USA_GUI_rd_vote_points^USA_GUI_selected_prev_year }
		set_variable = { US_voting_npp_electoral_college_votes_prev = USA_GUI_npp_vote_points^USA_GUI_selected_prev_year }
		set_variable = { US_voting_rdc_electoral_college_votes = USA_GUI_rd_vote_points^USA_GUI_selected_prev_year }
		set_variable = { US_GUI_rdc_elec_votes_prev = 0 }
		set_variable = { US_voting_npp_electoral_college_votes = USA_GUI_npp_vote_points^USA_GUI_selected_prev_year }
		set_variable = { US_GUI_npp_elec_votes_prev = 0 }

		set_variable = { USA_prev_year_total = USA_GUI_rd_vote_points^USA_GUI_selected_prev_year }
		add_to_variable = { USA_prev_year_total = USA_GUI_npp_vote_points^USA_GUI_selected_prev_year }
		set_variable = { USA_prev_year_percent = USA_GUI_rd_vote_points^USA_GUI_selected_prev_year }
		divide_variable = { USA_prev_year_percent = USA_prev_year_total }
		multiply_variable = { USA_prev_year_percent = 100 }
		round_variable = USA_prev_year_percent
		set_variable = { US_voting_animated_bar_frame = 1000000 }
		add_to_variable = { US_voting_animated_bar_frame = USA_prev_year_percent }
	}

	set_variable = { US_california_status = US_prev_elec_cali_status^USA_GUI_selected_prev_year }
	set_variable = { US_alaska_status = US_prev_elec_alaska_status^USA_GUI_selected_prev_year }
	set_variable = { US_hawaii_status = US_prev_elec_hawaii_status^USA_GUI_selected_prev_year }

	set_variable = { USA_pres_contender_rd = USA_pres_contender_rd_prev^USA_GUI_selected_prev_year }
	set_variable = { USA_pres_contender_npp = USA_pres_contender_npp_prev^USA_GUI_selected_prev_year }

	set_variable = { USA_pres_contender_rd_animation = USA_pres_contender_rd_prev^USA_GUI_selected_prev_year }
	set_variable = { USA_pres_contender_npp_animation = USA_pres_contender_npp_prev^USA_GUI_selected_prev_year }

	set_variable = { USA_npp_total_votes_from_election = USA_npp_total_votes_from_election_prev^USA_GUI_selected_prev_year }
	set_variable = { USA_rd_total_votes_from_election = USA_rd_total_votes_from_election_prev^USA_GUI_selected_prev_year }

	if = {
		limit = {
			OR = {
				check_variable = { USA_GUI_selected_prev_year = 1940 }
				check_variable = { USA_GUI_selected_prev_year = 1952 }
				check_variable = { USA_GUI_selected_prev_year = 1956 }
			}
		}
		set_variable = { US_GUI_victory_lines_frame = 1 }
	}
	else_if = {
		limit = {
			check_variable = { USA_GUI_selected_prev_year = 1944 }
		}
		set_variable = { US_GUI_victory_lines_frame = 2 }
	}
	else_if = {
		limit = {
			check_variable = { USA_GUI_selected_prev_year = 1948 }
		}
		set_variable = { US_GUI_victory_lines_frame = 3 }
	}
	else_if = {
		limit = {
			OR = {
				check_variable = { USA_GUI_selected_prev_year = 1960 }
				AND = {
					check_variable = { USA_GUI_selected_prev_year > 1960 }
					check_variable = { US_hawaii_status = 1 }
				}
			}
		}
		set_variable = { US_GUI_victory_lines_frame = 4 }
	}
	else = {
		set_variable = { US_GUI_victory_lines_frame = 5 }
	}
	USA_GUI_update_text_animation = yes
	US_GUI_update_elec_college_display = yes
	US_GUI_update_elec_bar = yes
}
USA_determine_senate_map_breakdown = {
	for_each_scope_loop = {
		array = USA_states

		if = {
			limit = {
				OR = {
					check_variable = { senator_1 = 1 }
					check_variable = { senator_1 = 2 }
				}
				OR = {
					check_variable = { senator_2 = 1 }
					check_variable = { senator_2 = 2 }
				}
			}
			set_variable = { US_state_colour_for_map = 1 }
			set_variable = { USA_map_split = 0 }
		}
		else_if = {
			limit = {
				check_variable = { senator_1 > 2 }
				check_variable = { senator_2 > 2 }
			}
			set_variable = { US_state_colour_for_map = 2 }
			set_variable = { USA_map_split = 100 }
		}
		else = {
			set_variable = { US_state_colour_for_map = 3 }
			set_variable = { USA_map_split = 50 }
		}
		set_variable = { USA_first_party = 1 }
		set_variable = { USA_second_party = 2 }
	}
	USA_set_variables_for_map = yes
}
USA_GUI_determine_previous_election_map = {
	for_each_scope_loop = {
		array = USA_states

		set_variable = { US_state_colour_for_map = US_state_colour_for_map_prev^USA.USA_GUI_selected_prev_year }
		set_variable = { USA_first_party = US_state_colour_for_map }
		if = {
			limit = {
				check_variable = { US_state_colour_for_map > 2 }
			}
			add_to_variable = { USA_first_party = -1 }
		}
		set_variable = { USA_second_party = 2 }
		set_variable = { USA_map_split = 0 }
	}
	USA_set_variables_for_map = yes
}
USA_set_variables_for_map = {
	clear_variable = USA_alaska_on_map
	clear_variable = USA_cali_on_map
	for_loop_effect = {
		start = 0
		end = 51
		value = idx

		set_variable = { USA_state_number = USA_states^idx }
		set_variable = { var_state_number = idx }
		if = {
			limit = {
				check_variable = { USA_state_number:USA_map_split = 100 }
			}
			set_variable = { USA_state_number:USA_map_split = 0 }
			set_variable = { USA_first_party_temp = USA_state_number:USA_first_party }
			set_variable = { USA_state_number:USA_first_party = USA_state_number:USA_second_party }
			set_variable = { USA_state_number:USA_second_party = USA_first_party_temp }
		}
		set_variable = { USA_frame_for_map^idx = var_state_number }
		if = {
			limit = {
				check_variable = { USA_frame_for_map^idx = 1 }
				OR = {
					AND = {
						NOT = {
							OR = {
								check_variable = { USA_GUI_selected_tab_sub = 4 }
								check_variable = { USA_GUI_selected_tab_sub = 2 }
							}
						}
						USA = { owns_state = 772 }
					}
					AND = {
						OR = {
							check_variable = { USA_GUI_selected_tab_sub = 4 }
							check_variable = { USA_GUI_selected_tab_sub = 2 }
						}
						check_variable = { US_alaska_status = 2 }
					}
				}
			}
			set_variable = { USA_frame_for_map^idx = 51 }
			set_variable = { USA_alaska_on_map = 1 }
		}
		if = {
			limit = {
				check_variable = { USA_frame_for_map^idx = 4 }
				OR = {
					AND = {
						NOT = {
							OR = {
								check_variable = { USA_GUI_selected_tab_sub = 4 }
								check_variable = { USA_GUI_selected_tab_sub = 2 }
							}
						}
						USA = { owns_state = 768 }
					}
					AND = {
						OR = {
							check_variable = { USA_GUI_selected_tab_sub = 4 }
							check_variable = { USA_GUI_selected_tab_sub = 2 }
						}
						check_variable = { US_california_status = 2 }
					}
				}
			}
			set_variable = { USA_frame_for_map^idx = 52 }
			set_variable = { USA_cali_on_map = 1 }
		}
		if = {
			limit = {
				OR = {
					AND = {
						check_variable = { USA_states_icon_array^idx = 50 }
						OR = {
							check_variable = { USA_GUI_selected_tab = 1 }
							AND = {
								check_variable = { USA_GUI_selected_tab_sub = 4 }
								check_variable = { USA_GUI_selected_prev_year < 1961 }
							}
						}
					}
					AND = {
						has_country_flag = USA_senate_elections
						check_variable = { USA_state_senate_status^idx = 0 }
						check_variable = { USA_GUI_selected_tab_sub = 1 }
						has_country_flag = USA_hidden_unelected_states
					}
				}
			}
			set_variable = { USA_state_number:USA_first_party = 0 }
			set_variable = { USA_state_number:USA_second_party = 0 }
			set_variable = { USA_state_number:USA_map_split = 0 }
		}
		add_to_variable = { USA_frame_for_map^idx = 1 }
		multiply_variable = { USA_frame_for_map^idx = 10 }
		add_to_variable = { USA_frame_for_map^idx = USA_state_number:USA_first_party }
		multiply_variable = { USA_frame_for_map^idx = 10 }
		add_to_variable = { USA_frame_for_map^idx = USA_state_number:USA_second_party }
		multiply_variable = { USA_frame_for_map^idx = 100 }
		add_to_variable = { USA_frame_for_map^idx = USA_state_number:USA_map_split }
	}
	USA_setup_variables_for_big_map = yes
}
USA_setup_variables_for_big_map = {
	clear_array = USA_frame_for_big_map
	clear_array = USA_frame_for_big_map_secondary
	clear_variable = USA_GUI_state_offset
	clear_variable = USA_GUI_state_offset_check
	for_loop_effect = {
		start = 0
		end = 51
		value = idx

		set_variable = { USA_GUI_index_checking = idx }
		set_variable = { USA_state_number = USA_states^idx }
		set_variable = { USA_map_var = USA_GUI_index_checking }
		if = {
			limit = {
				OR = {
					check_variable = { USA_GUI_index_checking = 1 }
					check_variable = { USA_GUI_index_checking = 2 }
					check_variable = { USA_GUI_index_checking = 4 }
					check_variable = { USA_GUI_index_checking = 10 }
					check_variable = { USA_GUI_index_checking = 30 }
					check_variable = { USA_GUI_index_checking = 35 }
					check_variable = { USA_GUI_index_checking = 36 }
					check_variable = { USA_GUI_index_checking = 42 }
					check_variable = { USA_GUI_index_checking = 46 }
				}
			}
			add_to_variable = { USA_GUI_state_offset = 1 }
			set_variable = { USA_map_var = USA_GUI_state_offset }
		}
		else = {
			subtract_from_variable = { USA_map_var = USA_GUI_state_offset }
			add_to_variable = { USA_map_var = 2 }
		}
		if = {
			limit = {
				check_variable = { USA_alaska_on_map = 1 }
				check_variable = { USA_GUI_index_checking = 1 }
			}
			set_variable = { USA_map_var = 10 }
		}
		if = {
			limit = {
				check_variable = { USA_cali_on_map = 1 }
				check_variable = { USA_GUI_index_checking = 4 }
			}
			set_variable = { USA_map_var = 11 }
		}
		if = {
			limit = {
				check_variable = { USA_GUI_index_checking = 50 }
			}
			set_variable = { USA_map_var = 1 }
		}
		multiply_variable = { USA_map_var = 10 }
		add_to_variable = { USA_map_var = USA_state_number:USA_first_party }
		multiply_variable = { USA_map_var = 10 }
		add_to_variable = { USA_map_var = USA_state_number:USA_second_party }
		multiply_variable = { USA_map_var = 100 }
		add_to_variable = { USA_map_var = USA_state_number:USA_map_split }
		if = {
			limit = {
				check_variable = { USA_GUI_state_offset = USA_GUI_state_offset_check }
			}
			add_to_array = { USA_frame_for_big_map = USA_map_var }
		}
		else = {
			add_to_array = { USA_frame_for_big_map_secondary = USA_map_var }
			set_variable = { USA_GUI_state_offset_check = USA_GUI_state_offset }
		}
	}
}
USA_GUI_state_colour_previous_setup = {
	# Alabama
	367 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 5 }
		set_variable = { US_state_colour_for_map_prev^1944 = 5 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 7 }
		set_variable = { US_state_colour_for_map_prev^1956 = 7 }
		set_variable = { US_state_colour_for_map_prev^1960 = 2 }
	}

	# Alaska
	463 = {
		set_variable = { US_state_colour_for_map_prev^1960 = 2 }
	}

	# Arizona
	377 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 5 }
		set_variable = { US_state_colour_for_map_prev^1944 = 5 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 5 }
		set_variable = { US_state_colour_for_map_prev^1956 = 5 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}

	# Arkansas
	372 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 5 }
		set_variable = { US_state_colour_for_map_prev^1944 = 5 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 7 }
		set_variable = { US_state_colour_for_map_prev^1956 = 7 }
		set_variable = { US_state_colour_for_map_prev^1960 = 2 }
	}

	# California
	378 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 4 }
		set_variable = { US_state_colour_for_map_prev^1944 = 4 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 5 }
		set_variable = { US_state_colour_for_map_prev^1956 = 5 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}

	# Colorado
	382 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 5 }
		set_variable = { US_state_colour_for_map_prev^1944 = 4 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 5 }
		set_variable = { US_state_colour_for_map_prev^1956 = 5 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}

	# Connecticut
	357 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 5 }
		set_variable = { US_state_colour_for_map_prev^1944 = 4 }
		set_variable = { US_state_colour_for_map_prev^1948 = 4 }
		set_variable = { US_state_colour_for_map_prev^1952 = 5 }
		set_variable = { US_state_colour_for_map_prev^1956 = 5 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}

	# Delaware
	954 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 5 }
		set_variable = { US_state_colour_for_map_prev^1944 = 5 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 5 }
		set_variable = { US_state_colour_for_map_prev^1956 = 5 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}

	# Florida
	366 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 5 }
		set_variable = { US_state_colour_for_map_prev^1944 = 5 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 5 }
		set_variable = { US_state_colour_for_map_prev^1956 = 5 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}

	# Georgia
	365 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 5 }
		set_variable = { US_state_colour_for_map_prev^1944 = 5 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 7 }
		set_variable = { US_state_colour_for_map_prev^1956 = 7 }
		set_variable = { US_state_colour_for_map_prev^1960 = 2 }
	}

	# Idaho
	387 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 5 }
		set_variable = { US_state_colour_for_map_prev^1944 = 4 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 5 }
		set_variable = { US_state_colour_for_map_prev^1956 = 6 }
		set_variable = { US_state_colour_for_map_prev^1960 = 2 }
	}

	# Illinois
	395 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 4 }
		set_variable = { US_state_colour_for_map_prev^1944 = 4 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 4 }
		set_variable = { US_state_colour_for_map_prev^1956 = 5 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}

	# Indiana
	396 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 4 }
		set_variable = { US_state_colour_for_map_prev^1944 = 4 }
		set_variable = { US_state_colour_for_map_prev^1948 = 4 }
		set_variable = { US_state_colour_for_map_prev^1952 = 4 }
		set_variable = { US_state_colour_for_map_prev^1956 = 7 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}

	# Iowa
	392 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 5 }
		set_variable = { US_state_colour_for_map_prev^1944 = 4 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 4 }
		set_variable = { US_state_colour_for_map_prev^1956 = 6 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}

	# Kansas
	383 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 4 }
		set_variable = { US_state_colour_for_map_prev^1944 = 4 }
		set_variable = { US_state_colour_for_map_prev^1948 = 4 }
		set_variable = { US_state_colour_for_map_prev^1952 = 4 }
		set_variable = { US_state_colour_for_map_prev^1956 = 4 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}

	# Kentucky
	369 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 5 }
		set_variable = { US_state_colour_for_map_prev^1944 = 5 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 5 }
		set_variable = { US_state_colour_for_map_prev^1956 = 7 }
		set_variable = { US_state_colour_for_map_prev^1960 = 2 }
	}

	# Louisiana
	371 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 5 }
		set_variable = { US_state_colour_for_map_prev^1944 = 5 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 7 }
		set_variable = { US_state_colour_for_map_prev^1956 = 7 }
		set_variable = { US_state_colour_for_map_prev^1960 = 2 }
	}

	# Maine
	952 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 4 }
		set_variable = { US_state_colour_for_map_prev^1944 = 4 }
		set_variable = { US_state_colour_for_map_prev^1948 = 4 }
		set_variable = { US_state_colour_for_map_prev^1952 = 4 }
		set_variable = { US_state_colour_for_map_prev^1956 = 4 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}

	# Maryland
	361 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 5 }
		set_variable = { US_state_colour_for_map_prev^1944 = 5 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 5 }
		set_variable = { US_state_colour_for_map_prev^1956 = 5 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}

	# Massachusetts
	949 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 4 }
		set_variable = { US_state_colour_for_map_prev^1944 = 4 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 5 }
		set_variable = { US_state_colour_for_map_prev^1956 = 5 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}

	# Michigan
	393 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 4 }
		set_variable = { US_state_colour_for_map_prev^1944 = 4 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 4 }
		set_variable = { US_state_colour_for_map_prev^1956 = 4 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}

	# Minnesota
	391 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 4 }
		set_variable = { US_state_colour_for_map_prev^1944 = 4 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 4 }
		set_variable = { US_state_colour_for_map_prev^1956 = 4 }
		set_variable = { US_state_colour_for_map_prev^1960 = 2 }
	}

	# Mississippi
	370 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 5 }
		set_variable = { US_state_colour_for_map_prev^1944 = 5 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 7 }
		set_variable = { US_state_colour_for_map_prev^1956 = 7 }
		set_variable = { US_state_colour_for_map_prev^1960 = 2 }
	}

	# Missouri
	373 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 5 }
		set_variable = { US_state_colour_for_map_prev^1944 = 4 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 5 }
		set_variable = { US_state_colour_for_map_prev^1956 = 5 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}

	# Montana
	388 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 4 }
		set_variable = { US_state_colour_for_map_prev^1944 = 4 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 5 }
		set_variable = { US_state_colour_for_map_prev^1956 = 6 }
		set_variable = { US_state_colour_for_map_prev^1960 = 2 }
	}

	# Nebraska
	384 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 4 }
		set_variable = { US_state_colour_for_map_prev^1944 = 4 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 4 }
		set_variable = { US_state_colour_for_map_prev^1956 = 4 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}

	# Nevada
	379 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 4 }
		set_variable = { US_state_colour_for_map_prev^1944 = 4 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 5 }
		set_variable = { US_state_colour_for_map_prev^1956 = 5 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}

	# New Hampshire
	951 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 4 }
		set_variable = { US_state_colour_for_map_prev^1944 = 4 }
		set_variable = { US_state_colour_for_map_prev^1948 = 4 }
		set_variable = { US_state_colour_for_map_prev^1952 = 4 }
		set_variable = { US_state_colour_for_map_prev^1956 = 4 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}

	# New Jersey
	359 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 4 }
		set_variable = { US_state_colour_for_map_prev^1944 = 4 }
		set_variable = { US_state_colour_for_map_prev^1948 = 4 }
		set_variable = { US_state_colour_for_map_prev^1952 = 5 }
		set_variable = { US_state_colour_for_map_prev^1956 = 5 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}

	# New Mexico
	376 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 4 }
		set_variable = { US_state_colour_for_map_prev^1944 = 5 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 5 }
		set_variable = { US_state_colour_for_map_prev^1956 = 5 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}

	# New York
	358 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 4 }
		set_variable = { US_state_colour_for_map_prev^1944 = 4 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 5 }
		set_variable = { US_state_colour_for_map_prev^1956 = 5 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}

	# North Carolina
	363 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 5 }
		set_variable = { US_state_colour_for_map_prev^1944 = 5 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 5 }
		set_variable = { US_state_colour_for_map_prev^1956 = 5 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}

	# North Dakota
	389 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 4 }
		set_variable = { US_state_colour_for_map_prev^1944 = 4 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 4 }
		set_variable = { US_state_colour_for_map_prev^1956 = 4 }
		set_variable = { US_state_colour_for_map_prev^1960 = 2 }
	}

	# Ohio
	261 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 5 }
		set_variable = { US_state_colour_for_map_prev^1944 = 4 }
		set_variable = { US_state_colour_for_map_prev^1948 = 4 }
		set_variable = { US_state_colour_for_map_prev^1952 = 4 }
		set_variable = { US_state_colour_for_map_prev^1956 = 4 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}

	# Oklahoma
	374 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 5 }
		set_variable = { US_state_colour_for_map_prev^1944 = 5 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 5 }
		set_variable = { US_state_colour_for_map_prev^1956 = 7 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}

	# Oregon
	385 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 5 }
		set_variable = { US_state_colour_for_map_prev^1944 = 4 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 5 }
		set_variable = { US_state_colour_for_map_prev^1956 = 5 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}

	# Pennsylvania
	360 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 4 }
		set_variable = { US_state_colour_for_map_prev^1944 = 4 }
		set_variable = { US_state_colour_for_map_prev^1948 = 4 }
		set_variable = { US_state_colour_for_map_prev^1952 = 4 }
		set_variable = { US_state_colour_for_map_prev^1956 = 5 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}

	# Rhode Island
	948 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 5 }
		set_variable = { US_state_colour_for_map_prev^1944 = 4 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 5 }
		set_variable = { US_state_colour_for_map_prev^1956 = 5 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}

	# South Carolina
	364 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 5 }
		set_variable = { US_state_colour_for_map_prev^1944 = 5 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 7 }
		set_variable = { US_state_colour_for_map_prev^1956 = 7 }
		set_variable = { US_state_colour_for_map_prev^1960 = 2 }
	}

	# South Dakota
	390 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 4 }
		set_variable = { US_state_colour_for_map_prev^1944 = 4 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 4 }
		set_variable = { US_state_colour_for_map_prev^1956 = 4 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}

	# Tennessee
	368 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 5 }
		set_variable = { US_state_colour_for_map_prev^1944 = 5 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 7 }
		set_variable = { US_state_colour_for_map_prev^1956 = 7 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}

	# Texas
	375 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 5 }
		set_variable = { US_state_colour_for_map_prev^1944 = 5 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 5 }
		set_variable = { US_state_colour_for_map_prev^1956 = 5 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}

	# Utah
	380 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 5 }
		set_variable = { US_state_colour_for_map_prev^1944 = 4 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 5 }
		set_variable = { US_state_colour_for_map_prev^1956 = 5 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}

	# Vermont
	950 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 4 }
		set_variable = { US_state_colour_for_map_prev^1944 = 4 }
		set_variable = { US_state_colour_for_map_prev^1948 = 4 }
		set_variable = { US_state_colour_for_map_prev^1952 = 4 }
		set_variable = { US_state_colour_for_map_prev^1956 = 4 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}

	# Virginia
	362 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 5 }
		set_variable = { US_state_colour_for_map_prev^1944 = 5 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 5 }
		set_variable = { US_state_colour_for_map_prev^1956 = 7 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}

	# Washington
	386 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 4 }
		set_variable = { US_state_colour_for_map_prev^1944 = 4 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 5 }
		set_variable = { US_state_colour_for_map_prev^1956 = 5 }
		set_variable = { US_state_colour_for_map_prev^1960 = 2 }
	}

	# West Virginia
	953 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 5 }
		set_variable = { US_state_colour_for_map_prev^1944 = 5 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 5 }
		set_variable = { US_state_colour_for_map_prev^1956 = 5 }
		set_variable = { US_state_colour_for_map_prev^1960 = 2 }
	}

	# Wisconsin
	394 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 4 }
		set_variable = { US_state_colour_for_map_prev^1944 = 4 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 4 }
		set_variable = { US_state_colour_for_map_prev^1956 = 4 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}

	# Wyoming
	381 = {
		set_variable = { US_state_colour_for_map_prev^1940 = 4 }
		set_variable = { US_state_colour_for_map_prev^1944 = 4 }
		set_variable = { US_state_colour_for_map_prev^1948 = 5 }
		set_variable = { US_state_colour_for_map_prev^1952 = 4 }
		set_variable = { US_state_colour_for_map_prev^1956 = 4 }
		set_variable = { US_state_colour_for_map_prev^1960 = 1 }
	}
}
USA_GUI_state_x_y_setup = {
	clear_array = USA_states_x_array
	clear_array = USA_states_y_array

	add_to_array = { USA_states_x_array = 680 }
	add_to_array = { USA_states_y_array = 468 }

	add_to_array = { USA_states_x_array = 167 }
	add_to_array = { USA_states_y_array = 530 }

	add_to_array = { USA_states_x_array = 275 }
	add_to_array = { USA_states_y_array = 413 }

	add_to_array = { USA_states_x_array = 584 }
	add_to_array = { USA_states_y_array = 447 }

	add_to_array = { USA_states_x_array = 173 }
	add_to_array = { USA_states_y_array = 291 }

	add_to_array = { USA_states_x_array = 374 }
	add_to_array = { USA_states_y_array = 354 }

	add_to_array = { USA_states_x_array = 867 }
	add_to_array = { USA_states_y_array = 305 }

	add_to_array = { USA_states_x_array = 845 }
	add_to_array = { USA_states_y_array = 356 }

	add_to_array = { USA_states_x_array = 695 }
	add_to_array = { USA_states_y_array = 538 }

	add_to_array = { USA_states_x_array = 719 }
	add_to_array = { USA_states_y_array = 464 }

	add_to_array = { USA_states_x_array = 354 }
	add_to_array = { USA_states_y_array = 593 }

	add_to_array = { USA_states_x_array = 279 }
	add_to_array = { USA_states_y_array = 190 }

	add_to_array = { USA_states_x_array = 625 }
	add_to_array = { USA_states_y_array = 332 }

	add_to_array = { USA_states_x_array = 678 }
	add_to_array = { USA_states_y_array = 342 }

	add_to_array = { USA_states_x_array = 555 }
	add_to_array = { USA_states_y_array = 317 }

	add_to_array = { USA_states_x_array = 475 }
	add_to_array = { USA_states_y_array = 381 }

	add_to_array = { USA_states_x_array = 662 }
	add_to_array = { USA_states_y_array = 390 }

	add_to_array = { USA_states_x_array = 593 }
	add_to_array = { USA_states_y_array = 512 }

	add_to_array = { USA_states_x_array = 884 }
	add_to_array = { USA_states_y_array = 198 }

	add_to_array = { USA_states_x_array = 794 }
	add_to_array = { USA_states_y_array = 358 }

	add_to_array = { USA_states_x_array = 866 }
	add_to_array = { USA_states_y_array = 287 }

	add_to_array = { USA_states_x_array = 636 }
	add_to_array = { USA_states_y_array = 241 }

	add_to_array = { USA_states_x_array = 549 }
	add_to_array = { USA_states_y_array = 212 }

	add_to_array = { USA_states_x_array = 632 }
	add_to_array = { USA_states_y_array = 471 }

	add_to_array = { USA_states_x_array = 567 }
	add_to_array = { USA_states_y_array = 371 }

	add_to_array = { USA_states_x_array = 316 }
	add_to_array = { USA_states_y_array = 193 }

	add_to_array = { USA_states_x_array = 452 }
	add_to_array = { USA_states_y_array = 323 }

	add_to_array = { USA_states_x_array = 226 }
	add_to_array = { USA_states_y_array = 305 }

	add_to_array = { USA_states_x_array = 875 }
	add_to_array = { USA_states_y_array = 244 }

	add_to_array = { USA_states_x_array = 849 }
	add_to_array = { USA_states_y_array = 325 }

	add_to_array = { USA_states_x_array = 359 }
	add_to_array = { USA_states_y_array = 426 }

	add_to_array = { USA_states_x_array = 783 }
	add_to_array = { USA_states_y_array = 256 }

	add_to_array = { USA_states_x_array = 737 }
	add_to_array = { USA_states_y_array = 416 }

	add_to_array = { USA_states_x_array = 460 }
	add_to_array = { USA_states_y_array = 215 }

	add_to_array = { USA_states_x_array = 717 }
	add_to_array = { USA_states_y_array = 330 }

	add_to_array = { USA_states_x_array = 460 }
	add_to_array = { USA_states_y_array = 435 }

	add_to_array = { USA_states_x_array = 184 }
	add_to_array = { USA_states_y_array = 217 }

	add_to_array = { USA_states_x_array = 774 }
	add_to_array = { USA_states_y_array = 316 }

	add_to_array = { USA_states_x_array = 889 }
	add_to_array = { USA_states_y_array = 304 }

	add_to_array = { USA_states_x_array = 753 }
	add_to_array = { USA_states_y_array = 456 }

	add_to_array = { USA_states_x_array = 455 }
	add_to_array = { USA_states_y_array = 269 }

	add_to_array = { USA_states_x_array = 651 }
	add_to_array = { USA_states_y_array = 431 }

	add_to_array = { USA_states_x_array = 398 }
	add_to_array = { USA_states_y_array = 445 }

	add_to_array = { USA_states_x_array = 302 }
	add_to_array = { USA_states_y_array = 322 }

	add_to_array = { USA_states_x_array = 856 }
	add_to_array = { USA_states_y_array = 251 }

	add_to_array = { USA_states_x_array = 750 }
	add_to_array = { USA_states_y_array = 372 }

	add_to_array = { USA_states_x_array = 210 } #Washington
	add_to_array = { USA_states_y_array = 173 }

	add_to_array = { USA_states_x_array = 754 }
	add_to_array = { USA_states_y_array = 356 }

	add_to_array = { USA_states_x_array = 603 }
	add_to_array = { USA_states_y_array = 254 }

	add_to_array = { USA_states_x_array = 356 }
	add_to_array = { USA_states_y_array = 276 }

	add_to_array = { USA_states_x_array = 828 }
	add_to_array = { USA_states_y_array = 374 }

	clear_array = USA_states_x_array_retained_order
	clear_array = USA_states_y_array_retained_order
	for_loop_effect = {
		start = 0
		end = 51
		value = idx

		add_to_variable = { USA_states_y_array^idx = -1 }

		add_to_array = { USA_states_x_array_retained_order = USA_states_x_array^idx }
		add_to_array = { USA_states_y_array_retained_order = USA_states_y_array^idx }
	}
	USA_x_y_setup_outlines = yes
	clear_array = US_GUI_map_offset_value_x
	clear_array = US_GUI_map_offset_value_y

	add_to_array = { US_GUI_map_offset_value_x = 0 }
	add_to_array = { US_GUI_map_offset_value_y = 0 }

	add_to_array = { US_GUI_map_offset_value_x = -1124 }
	add_to_array = { US_GUI_map_offset_value_y = 57 }

	add_to_array = { US_GUI_map_offset_value_x = -1002 }
	add_to_array = { US_GUI_map_offset_value_y = 12 }

	add_to_array = { US_GUI_map_offset_value_x = -802 }
	add_to_array = { US_GUI_map_offset_value_y = -259 }

	add_to_array = { US_GUI_map_offset_value_x = -897 }
	add_to_array = { US_GUI_map_offset_value_y = -147 }

	add_to_array = { US_GUI_map_offset_value_x = -822 }
	add_to_array = { US_GUI_map_offset_value_y = 15 }

	add_to_array = { US_GUI_map_offset_value_x = -620 }
	add_to_array = { US_GUI_map_offset_value_y = 18 }

	add_to_array = { US_GUI_map_offset_value_x = -449 }
	add_to_array = { US_GUI_map_offset_value_y = -241 }

	add_to_array = { US_GUI_map_offset_value_x = -296 }
	add_to_array = { US_GUI_map_offset_value_y = 14 }

	add_to_array = { US_GUI_map_offset_value_x = 0 }
	add_to_array = { US_GUI_map_offset_value_y = -15 }

	clear_array = US_GUI_topbar_buttons_x
	clear_array = US_GUI_topbar_buttons_y

	add_to_array = { US_GUI_topbar_buttons_x = 0 }
	add_to_array = { US_GUI_topbar_buttons_y = 0 }

	add_to_array = { US_GUI_topbar_buttons_x = 13 }
	add_to_array = { US_GUI_topbar_buttons_y = 17 }

	add_to_array = { US_GUI_topbar_buttons_x = 372 }
	add_to_array = { US_GUI_topbar_buttons_y = 17 }

	add_to_array = { US_GUI_topbar_buttons_x = 732 }
	add_to_array = { US_GUI_topbar_buttons_y = 17 }

	add_to_array = { US_GUI_topbar_buttons_x = 18 }
	add_to_array = { US_GUI_topbar_buttons_y = 35 }

	add_to_array = { US_GUI_topbar_buttons_x = 192 }
	add_to_array = { US_GUI_topbar_buttons_y = 35 }

	add_to_array = { US_GUI_topbar_buttons_x = 378 }
	add_to_array = { US_GUI_topbar_buttons_y = 35 }

	add_to_array = { US_GUI_topbar_buttons_x = 552 }
	add_to_array = { US_GUI_topbar_buttons_y = 35 }

	add_to_array = { US_GUI_topbar_buttons_x = 737 }
	add_to_array = { US_GUI_topbar_buttons_y = 35 }

	add_to_array = { US_GUI_topbar_buttons_x = 853 }
	add_to_array = { US_GUI_topbar_buttons_y = 35 }

	add_to_array = { US_GUI_topbar_buttons_x = 969 }
	add_to_array = { US_GUI_topbar_buttons_y = 35 }

	USA_GUI_setup_topbar_array = yes
	USA_GUI_current_predictions_button_array = yes

	USA_GUI_set_actual_votes_position = yes
}
USA_GUI_setup_topbar_array = {
	clear_array = US_GUI_topbar_array
	add_to_array = { US_GUI_topbar_array = 0 }
	add_to_array = { US_GUI_topbar_array = 101 }
	add_to_array = { US_GUI_topbar_array = 2 }
	add_to_array = { US_GUI_topbar_array = 3 }
	add_to_array = { US_GUI_topbar_array = 104 }
	add_to_array = { US_GUI_topbar_array = 5 }
	add_to_array = { US_GUI_topbar_array = 6 }
	add_to_array = { US_GUI_topbar_array = 7 }
	add_to_array = { US_GUI_topbar_array = 8 }
	add_to_array = { US_GUI_topbar_array = 9 }
	add_to_array = { US_GUI_topbar_array = 10 }

	set_variable = { USA_topbar_prev_index = 4 }
}
USA_GUI_set_actual_votes_position = {
	set_variable = { US_GUI_actual_votes_y = 182 }
	clear_array = US_GUI_actual_votes_x
	add_to_array = { US_GUI_actual_votes_x = 67 }
	add_to_array = { US_GUI_actual_votes_x = 100 }
	add_to_array = { US_GUI_actual_votes_x = 133 }
	add_to_array = { US_GUI_actual_votes_x = 1022 }
	add_to_array = { US_GUI_actual_votes_x = 1055 }
	add_to_array = { US_GUI_actual_votes_x = 1088 }
}
USA_GUI_current_predictions_button_array = {
	clear_array = US_GUI_current_predictions_array
	add_to_array = { US_GUI_current_predictions_array = 101 }
	add_to_array = { US_GUI_current_predictions_array = 2 }
}
USA_determine_senate_dots = {
	for_loop_effect = {
		start = 0
		end = 51
		value = idx

		set_variable = { state_number = USA_states^idx }
		if = {
			limit = {
				OR = {
					check_variable = { state_number:senator_1 = 1 }
					check_variable = { state_number:senator_1 = 2 }
				}
			}
			set_variable = { USA_senate_dot_colour_1^idx = 1 }
		}
		else_if = {
			limit = {
				OR = {
					check_variable = { state_number:senator_1 = 3 }
					check_variable = { state_number:senator_1 = 4 }
					check_variable = { state_number:senator_1 = 5 }
					check_variable = { state_number:senator_1 = 6 }
				}
			}
			set_variable = { USA_senate_dot_colour_1^idx = 2 }
		}
		else = {
			set_variable = { USA_senate_dot_colour_1^idx = 3 }
		}

		if = {
			limit = {
				OR = {
					check_variable = { state_number:senator_2 = 1 }
					check_variable = { state_number:senator_2 = 2 }
				}
			}
			set_variable = { USA_senate_dot_colour_2^idx = 1 }
		}
		else_if = {
			limit = {
				OR = {
					check_variable = { state_number:senator_2 = 3 }
					check_variable = { state_number:senator_2 = 4 }
					check_variable = { state_number:senator_2 = 5 }
					check_variable = { state_number:senator_2 = 6 }
				}
			}
			set_variable = { USA_senate_dot_colour_2^idx = 2 }
		}
		else = {
			set_variable = { USA_senate_dot_colour_2^idx = 3 }
		}
	}
	USA_save_previous_tab = yes
	set_variable = { USA_GUI_selected_tab = 1 }
	set_variable = { USA_GUI_selected_tab_sub = 1 }
	USA_determine_which_dots_to_glow = yes
	US_determined_if_seat_changed = yes
	set_variable = { USA_GUI_selected_tab = USA_prev_tab_selected } 
	set_variable = { USA_GUI_selected_tab_sub = USA_prev_tab_sub_selected } 
	if = {
		limit = {
			check_variable = { USA_GUI_selected_tab_sub = 1 }
		}
		USA_determine_senate_map_breakdown = yes
	}
	if = {
		limit = {
			check_variable = { USA_GUI_selected_tab_sub = 2 }
		}
		clr_country_flag = USA_predictions_selected
		clr_country_flag = USA_hidden_unelected_states
		USA_recall_senate_election_result = yes
	}
	if = {
		limit = {
			check_variable = { USA_GUI_selected_tab_sub = 3 }
		}
		if = {
			limit = {
				NOT = {
					has_country_flag = USA_presidential_conclusion
				}
			}
			USA_display_current_election = yes
		}
		if = {
			limit = {
				has_country_flag = USA_presidential_conclusion
			}
			USA_display_election_results = yes
		}
	}
	if = {
		limit = {
			check_variable = { USA_GUI_selected_tab_sub = 4 }
		}
		USA_voting_GUI_work_out_previous_presidential_results = yes
		US_calculate_numbers_blocker_offset = yes
		USA_GUI_determine_previous_election_map = yes
	}
	if = {
		limit = {
			check_variable = { USA_GUI_selected_tab_sub = 5 }
		}
		USA_GUI_setup_nat_pop_map = yes
	}
}
USA_determine_which_dots_to_glow = {
	for_each_scope_loop = {
		array = USA_states

		clear_variable = USA_glow_frame
		clear_variable = USA_dot_1_status
		clear_variable = USA_dot_2_status
		if = {
			limit = {
				has_state_flag = elections_senator_1
			}
			add_to_variable = { USA_glow_frame = 1 }
			set_variable = { USA_dot_1_status = 1 }
		}
		if = {
			limit = {
				has_state_flag = elections_senator_2
			}
			add_to_variable = { USA_glow_frame = 2 }
			set_variable = { USA_dot_2_status = 1 }
		}
		else = {
			set_variable = { USA_dot_2_status = 0 }
		}
	}
	for_loop_effect = {
		start = 0
		end = 50
		value = idx

		set_variable = { state_number = USA_states^idx }
		set_variable = { USA_dots_glow^idx = state_number:USA_glow_frame }
		set_variable = { USA_state_dot_1_status^idx = state_number:USA_dot_1_status }
		set_variable = { USA_state_dot_2_status^idx = state_number:USA_dot_2_status }
	}
}
USA_determine_senate_map_breakdown_prediction = {
	for_each_scope_loop = {
		array = USA_states

		if = {
			limit = {
				OR = {
					check_variable = { senate_seat_1_seatwarmer = 1 }
					check_variable = { senate_seat_1_seatwarmer = 2 }
				}
				OR = {
					check_variable = { senate_seat_2_seatwarmer = 1 }
					check_variable = { senate_seat_2_seatwarmer = 2 }
				}
			}
			set_variable = { US_state_colour_for_map = 1 }
			set_variable = { USA_map_split = 0 }
		}
		else_if = {
			limit = {
				check_variable = { senate_seat_1_seatwarmer > 2 }
				check_variable = { senate_seat_2_seatwarmer > 2 }
			}
			set_variable = { US_state_colour_for_map = 2 }
			set_variable = { USA_map_split = 100 }
		}
		else = {
			set_variable = { US_state_colour_for_map = 3 }
			set_variable = { USA_map_split = 50 }
		}
		set_variable = { USA_first_party = 1 }
		set_variable = { USA_second_party = 2 }
	}
	for_loop_effect = {
		start = 0
		end = 51
		value = idx

		set_variable = { state_number = USA_states^idx }
		set_variable = { US_colour_for_prediction_dot_1^idx = state_number:senate_seat_1_seatwarmer }
		set_variable = { US_colour_for_prediction_dot_2^idx = state_number:senate_seat_2_seatwarmer }
	}
	USA_set_variables_for_map = yes
}
US_election_update_gui_post_senate = {
	clr_country_flag = USA_predictions_selected
	clr_country_flag = USA_hidden_unelected_states
	if = {
		limit = {
			check_variable = { USA_GUI_selected_tab_sub = 1 }
		}
		USA_determine_senate_map_breakdown = yes
	}
	US_determined_if_seat_changed = yes
	USA_determine_senate_dots = yes
	USA_GUI_total_up_senators = yes
	USA_GUI_work_out_senate_change = yes
}
US_determined_if_seat_changed = {
	for_each_scope_loop = {
		array = USA_states

		if = {
			limit = {
				check_variable = { senator_1 = prev_senator_1 }
			}
			set_variable = { US_state_sen_1_status = 1 }
		}
		else = {
			set_variable = { US_state_sen_1_status = 2 }
		}

		if = {
			limit = {
				check_variable = { senator_2 = prev_senator_2 }
			}
			set_variable = { US_state_sen_2_status = 1 }
		}
		else = {
			set_variable = { US_state_sen_2_status = 2 }
		}
	}
	for_loop_effect = {
		start = 0
		end = 50
		value = idx

		set_variable = { state_number = USA_states^idx }
		set_variable = { US_seat_1_change_or_not^idx = state_number:US_state_sen_1_status }
		set_variable = { US_seat_2_change_or_not^idx = state_number:US_state_sen_2_status }
	}
}
USA_GUI_opening_effect = {
	if = {
		limit = { NOT = { has_country_flag = US_voting_gui_open } }
		set_country_flag = US_voting_gui_open
		set_variable = { USA_GUI_selected_tab = 1 }
		set_variable = { USA_GUI_selected_tab_sub = 1 }
		USA_determine_senate_map_breakdown = yes
		USA_determine_senate_dots = yes
		if = {
			limit = {
				has_country_flag = USA_animation_in_progress
			}
			set_variable = { US_GUI_topbar_array^1 = 1 }
			set_variable = { US_GUI_topbar_array^2 = 102 }
			set_variable = { US_GUI_topbar_array^4 = 4 }
			set_variable = { US_GUI_topbar_array^6 = 106 }
			set_variable = { USA_GUI_selected_tab = 2 }
			set_variable = { USA_GUI_selected_tab_sub = 3 }
		}
	}
	else_if = {
		limit = { has_country_flag = US_voting_gui_open }
		clr_country_flag = US_voting_gui_open
		USA_save_prev_date = yes
	}
	if = {
		limit = {
			has_country_flag = gui_alert_visible
		}
		USA_polls_setup_effect = yes
	}
	if = {
		limit = {
			is_in_array = { USA_states_dots = 50 }
		}
		remove_from_array = { USA_states_dots = 50 }
	}
	clr_country_flag = gui_alert_visible
	clr_country_flag = gui_alert_visible_2
	if = {
		limit = {
			NOT = {
				has_country_flag = USA_animation_in_progress
			}
		}
		US_election_update_gui_post_senate = yes
		USA_GUI_setup_topbar_array = yes
	}
	every_owned_state = {
		limit = { has_state_flag = US_election_state }
		USA_party_populairty_in_every_state = yes
	}
	USA_GUI_total_up_senators = yes
	if = {
		limit = {
			has_country_flag = USA_animation_in_progress
		}
		set_variable = { US_voting_rdc_electoral_college_votes = US_current_total_pres_votes_rdc }
		set_variable = { US_voting_npp_electoral_college_votes = US_current_total_pres_votes_npp }
		USA_display_pres_bars_animation = yes
	}
	USA_GUI_current_predictions_button_array = yes 
}
US_calculate_numbers_blocker_offset = {
	###This is hard to explain why, but what we need is two variables (3 in the second case) each containing the digits in the number###
	###I do this by comparing a rounded version of the number to the original to determine it###
	###Millions###
	#First gotta check if current or previous#
	if = {
		limit = {
			check_variable = { USA_GUI_selected_tab_sub = 3 }
		}
		set_variable = { US_voting_rd_first_part_offset_1 = US_voting_actual_rd_votes_first_part }
		set_variable = { US_voting_rd_first_part_offset_2 = US_voting_actual_rd_votes_first_part }
		set_variable = { US_voting_rd_first_part_offset_3 = US_voting_actual_rd_votes_first_part }
	}
	else = {
		set_variable = { US_voting_rd_first_part_offset_1 = US_voting_actual_rd_votes_first_part_prev }
		set_variable = { US_voting_rd_first_part_offset_2 = US_voting_actual_rd_votes_first_part_prev }
		set_variable = { US_voting_rd_first_part_offset_3 = US_voting_actual_rd_votes_first_part_prev }
	}
	divide_variable = { US_voting_rd_first_part_offset_1 = 100 }
	divide_variable = { US_voting_rd_first_part_offset_2 = 100 }
	round_variable = US_voting_rd_first_part_offset_1
	subtract_from_variable = { US_voting_rd_first_part_offset_2 = US_voting_rd_first_part_offset_1 }

	if = {
		limit = {
			check_variable = { US_voting_rd_first_part_offset_2 < 0 }
		}
		add_to_variable = { US_voting_rd_first_part_offset_1 = -1 }
		add_to_variable = { US_voting_rd_first_part_offset_2 = 1 }
	}
	multiply_variable = { US_voting_rd_first_part_offset_2 = 10 }

	###That gives us the 100s, now to get the 10s and 1s###

	set_variable = { US_voting_rd_first_part_offset_3 = US_voting_rd_first_part_offset_2 }
	round_variable = US_voting_rd_first_part_offset_2
	subtract_from_variable = { US_voting_rd_first_part_offset_3 = US_voting_rd_first_part_offset_2 }

	if = {
		limit = {
			check_variable = { US_voting_rd_first_part_offset_3 < 0 }
		}
		add_to_variable = { US_voting_rd_first_part_offset_2 = -1 }
		add_to_variable = { US_voting_rd_first_part_offset_3 = 1 }
	}
	multiply_variable = { US_voting_rd_first_part_offset_3 = 10 }



	###Thousands###
	###This one requires 3###
	subtract_from_variable = { US_voting_actual_rd_votes_second_part_prev = 1000 }
	subtract_from_variable = { US_voting_actual_rd_votes_second_part = 1000 }
	#First gotta check if current or previous#
	if = {
		limit = {
			check_variable = { USA_GUI_selected_tab_sub = 3 }
		}
		set_variable = { US_voting_rd_second_part_offset_1 = US_voting_actual_rd_votes_second_part }
		set_variable = { US_voting_rd_second_part_offset_2 = US_voting_actual_rd_votes_second_part }
		set_variable = { US_voting_rd_second_part_offset_3 = US_voting_actual_rd_votes_second_part }
	}
	else = {
		set_variable = { US_voting_rd_second_part_offset_1 = US_voting_actual_rd_votes_second_part_prev }
		set_variable = { US_voting_rd_second_part_offset_2 = US_voting_actual_rd_votes_second_part_prev }
		set_variable = { US_voting_rd_second_part_offset_3 = US_voting_actual_rd_votes_second_part_prev }
	}
	add_to_variable = { US_voting_actual_rd_votes_second_part_prev = 1000 }
	add_to_variable = { US_voting_actual_rd_votes_second_part = 1000 }

	###Now we basically just do what we did first twice###

	divide_variable = { US_voting_rd_second_part_offset_1 = 100 }
	divide_variable = { US_voting_rd_second_part_offset_2 = 100 }
	round_variable = US_voting_rd_second_part_offset_1
	subtract_from_variable = { US_voting_rd_second_part_offset_2 = US_voting_rd_second_part_offset_1 }

	if = {
		limit = {
			check_variable = { US_voting_rd_second_part_offset_2 < 0 }
		}
		add_to_variable = { US_voting_rd_second_part_offset_1 = -1 }
		add_to_variable = { US_voting_rd_second_part_offset_2 = 1 }
	}
	multiply_variable = { US_voting_rd_second_part_offset_2 = 10 }

	###That gives us the 100s, now to get the 10s and 1s###

	set_variable = { US_voting_rd_second_part_offset_3 = US_voting_rd_second_part_offset_2 }
	round_variable = US_voting_rd_second_part_offset_2
	subtract_from_variable = { US_voting_rd_second_part_offset_3 = US_voting_rd_second_part_offset_2 }

	if = {
		limit = {
			check_variable = { US_voting_rd_second_part_offset_3 < 0 }
		}
		add_to_variable = { US_voting_rd_second_part_offset_2 = -1 }
		add_to_variable = { US_voting_rd_second_part_offset_3 = 1 }
	}
	multiply_variable = { US_voting_rd_second_part_offset_3 = 10 }

	#####################Now We Repeat It For The NPP#####################
	###Millions###
	#First gotta check if current or previous#
	if = {
		limit = {
			check_variable = { USA_GUI_selected_tab_sub = 3 }
		}
		set_variable = { US_voting_npp_first_part_offset_1 = US_voting_actual_npp_votes_first_part }
		set_variable = { US_voting_npp_first_part_offset_2 = US_voting_actual_npp_votes_first_part }
		set_variable = { US_voting_npp_first_part_offset_3 = US_voting_actual_npp_votes_first_part }
	}
	else = {
		set_variable = { US_voting_npp_first_part_offset_1 = US_voting_actual_npp_votes_first_part_prev }
		set_variable = { US_voting_npp_first_part_offset_2 = US_voting_actual_npp_votes_first_part_prev }
		set_variable = { US_voting_npp_first_part_offset_3 = US_voting_actual_npp_votes_first_part_prev }
	}
	divide_variable = { US_voting_npp_first_part_offset_1 = 100 }
	divide_variable = { US_voting_npp_first_part_offset_2 = 100 }
	round_variable = US_voting_npp_first_part_offset_1
	subtract_from_variable = { US_voting_npp_first_part_offset_2 = US_voting_npp_first_part_offset_1 }

	if = {
		limit = {
			check_variable = { US_voting_npp_first_part_offset_2 < 0 }
		}
		add_to_variable = { US_voting_npp_first_part_offset_1 = -1 }
		add_to_variable = { US_voting_npp_first_part_offset_2 = 1 }
	}
	multiply_variable = { US_voting_npp_first_part_offset_2 = 10 }

	###That gives us the 100s, now to get the 10s and 1s###

	set_variable = { US_voting_npp_first_part_offset_3 = US_voting_npp_first_part_offset_2 }
	round_variable = US_voting_npp_first_part_offset_2
	subtract_from_variable = { US_voting_npp_first_part_offset_3 = US_voting_npp_first_part_offset_2 }

	if = {
		limit = {
			check_variable = { US_voting_npp_first_part_offset_3 < 0 }
		}
		add_to_variable = { US_voting_npp_first_part_offset_2 = -1 }
		add_to_variable = { US_voting_npp_first_part_offset_3 = 1 }
	}
	multiply_variable = { US_voting_npp_first_part_offset_3 = 10 }



	###Thousands###
	###This one requires 3###
	subtract_from_variable = { US_voting_actual_npp_votes_second_part_prev = 1000 }
	subtract_from_variable = { US_voting_actual_npp_votes_second_part = 1000 }
	#First gotta check if current or previous#
	if = {
		limit = {
			check_variable = { USA_GUI_selected_tab_sub = 3 }
		}
		set_variable = { US_voting_npp_second_part_offset_1 = US_voting_actual_npp_votes_second_part }
		set_variable = { US_voting_npp_second_part_offset_2 = US_voting_actual_npp_votes_second_part }
		set_variable = { US_voting_npp_second_part_offset_3 = US_voting_actual_npp_votes_second_part }
	}
	else = {
		set_variable = { US_voting_npp_second_part_offset_1 = US_voting_actual_npp_votes_second_part_prev }
		set_variable = { US_voting_npp_second_part_offset_2 = US_voting_actual_npp_votes_second_part_prev }
		set_variable = { US_voting_npp_second_part_offset_3 = US_voting_actual_npp_votes_second_part_prev }
	}
	add_to_variable = { US_voting_actual_npp_votes_second_part_prev = 1000 }
	add_to_variable = { US_voting_actual_npp_votes_second_part = 1000 }

	###Now we basically just do what we did first twice###

	divide_variable = { US_voting_npp_second_part_offset_1 = 100 }
	divide_variable = { US_voting_npp_second_part_offset_2 = 100 }
	round_variable = US_voting_npp_second_part_offset_1
	subtract_from_variable = { US_voting_npp_second_part_offset_2 = US_voting_npp_second_part_offset_1 }

	if = {
		limit = {
			check_variable = { US_voting_npp_second_part_offset_2 < 0 }
		}
		add_to_variable = { US_voting_npp_second_part_offset_1 = -1 }
		add_to_variable = { US_voting_npp_second_part_offset_2 = 1 }
	}
	multiply_variable = { US_voting_npp_second_part_offset_2 = 10 }

	###That gives us the 100s, now to get the 10s and 1s###

	set_variable = { US_voting_npp_second_part_offset_3 = US_voting_npp_second_part_offset_2 }
	round_variable = US_voting_npp_second_part_offset_2
	subtract_from_variable = { US_voting_npp_second_part_offset_3 = US_voting_npp_second_part_offset_2 }

	if = {
		limit = {
			check_variable = { US_voting_npp_second_part_offset_3 < 0 }
		}
		add_to_variable = { US_voting_npp_second_part_offset_2 = -1 }
		add_to_variable = { US_voting_npp_second_part_offset_3 = 1 }
	}
	multiply_variable = { US_voting_npp_second_part_offset_3 = 10 }



	#################Finally We Actually Add The Pixel Offset Values (All Predefined)################
	if = {
		limit = {
			check_variable = { US_voting_rd_first_part_offset_1 > 0 }
		}
		set_variable = { US_voting_rd_offset_1 = US_voting_offset_values^US_voting_rd_first_part_offset_1 }
		add_to_variable = { US_voting_rd_offset_1 = US_voting_offset_values^US_voting_rd_first_part_offset_2 }
		add_to_variable = { US_voting_rd_offset_1 = US_voting_offset_values^US_voting_rd_first_part_offset_3 }
	}
	else_if = {
		limit = {
			check_variable = { US_voting_rd_first_part_offset_1 = 0 }
			check_variable = { US_voting_rd_first_part_offset_2 > 0 }
		}
		set_variable = { US_voting_rd_offset_1 = US_voting_offset_values^US_voting_rd_first_part_offset_2 }
		add_to_variable = { US_voting_rd_offset_1 = US_voting_offset_values^US_voting_rd_first_part_offset_3 }
	}
	else = {
		set_variable = { US_voting_rd_offset_1 = US_voting_offset_values^US_voting_rd_first_part_offset_3 }
	}

	set_variable = { US_voting_rd_offset_2 = US_voting_rd_offset_1 }
	add_to_variable = { US_voting_rd_offset_2 = 6 }#to account for comma
	add_to_variable = { US_voting_rd_offset_2 = US_voting_offset_values^US_voting_rd_second_part_offset_1 }
	add_to_variable = { US_voting_rd_offset_2 = US_voting_offset_values^US_voting_rd_second_part_offset_2 }
	add_to_variable = { US_voting_rd_offset_2 = US_voting_offset_values^US_voting_rd_second_part_offset_3 }

	add_to_variable = { US_voting_rd_offset_1 = 1 }
	add_to_variable = { US_voting_rd_offset_2 = 1 }


	if = {
		limit = {
			check_variable = { US_voting_npp_first_part_offset_1 > 0 }
		}
		set_variable = { US_voting_npp_offset_1 = US_voting_offset_values^US_voting_npp_first_part_offset_1 }
		add_to_variable = { US_voting_npp_offset_1 = US_voting_offset_values^US_voting_npp_first_part_offset_2 }
		add_to_variable = { US_voting_npp_offset_1 = US_voting_offset_values^US_voting_npp_first_part_offset_3 }
	}
	else_if = {
		limit = {
			check_variable = { US_voting_npp_first_part_offset_1 = 0 }
			check_variable = { US_voting_npp_first_part_offset_2 > 0 }
		}
		set_variable = { US_voting_npp_offset_1 = US_voting_offset_values^US_voting_npp_first_part_offset_2 }
		add_to_variable = { US_voting_npp_offset_1 = US_voting_offset_values^US_voting_npp_first_part_offset_3 }
	}
	else = {
		set_variable = { US_voting_npp_offset_1 = US_voting_offset_values^US_voting_npp_first_part_offset_3 }
	}
	set_variable = { US_voting_npp_offset_2 = US_voting_npp_offset_1 }
	add_to_variable = { US_voting_npp_offset_2 = 6 }#to account for comma
	add_to_variable = { US_voting_npp_offset_2 = US_voting_offset_values^US_voting_npp_second_part_offset_1 }
	add_to_variable = { US_voting_npp_offset_2 = US_voting_offset_values^US_voting_npp_second_part_offset_2 }
	add_to_variable = { US_voting_npp_offset_2 = US_voting_offset_values^US_voting_npp_second_part_offset_3 }

	add_to_variable = { US_voting_npp_offset_1 = 945 }
	add_to_variable = { US_voting_npp_offset_2 = 945 }
}
USA_save_prev_date = {
	if = {
		limit = {
			check_variable = { USA_GUI_selected_tab_sub = 4 }
		}
		set_variable = { USA_prev_selected_year = USA_GUI_selected_prev_year }
		set_variable = { USA_GUI_selected_prev_year = 1964 }
	}
}
US_GUI_setup_state_values = {
	set_variable = { US_voting_alabama_state_worth^1940 = 11 }
	set_variable = { US_voting_alabama_state_worth^1944 = 11 }
	set_variable = { US_voting_alabama_state_worth^1948 = 11 }
	set_variable = { US_voting_alabama_state_worth^1952 = 11 }
	set_variable = { US_voting_alabama_state_worth^1956 = 11 }
	set_variable = { US_voting_alabama_state_worth^1960 = 11 }
	set_variable = { US_voting_alabama_state_worth^1964 = 11 }
	set_variable = { US_voting_alabama_state_worth^1968 = 11 }
	set_variable = { US_voting_alabama_state_worth^1972 = 11 }
	set_variable = { US_state_worth^0 = 11 }

	set_variable = { US_voting_alaska_state_worth^1940 = 0 }
	set_variable = { US_voting_alaska_state_worth^1944 = 0 }
	set_variable = { US_voting_alaska_state_worth^1948 = 0 }
	set_variable = { US_voting_alaska_state_worth^1952 = 0 }
	set_variable = { US_voting_alaska_state_worth^1956 = 0 }
	set_variable = { US_voting_alaska_state_worth^1960 = 3 }
	set_variable = { US_voting_alaska_state_worth^1964 = 3 }
	set_variable = { US_voting_alaska_state_worth^1968 = 3 }
	set_variable = { US_voting_alaska_state_worth^1972 = 3 }
	set_variable = { US_state_worth^1 = 3 }

	set_variable = { US_voting_arizona_state_worth^1940 = 3 }
	set_variable = { US_voting_arizona_state_worth^1944 = 3 }
	set_variable = { US_voting_arizona_state_worth^1948 = 4 }
	set_variable = { US_voting_arizona_state_worth^1952 = 4 }
	set_variable = { US_voting_arizona_state_worth^1956 = 4 }
	set_variable = { US_voting_arizona_state_worth^1960 = 4 }
	set_variable = { US_voting_arizona_state_worth^1964 = 4 }
	set_variable = { US_voting_arizona_state_worth^1968 = 4 }
	set_variable = { US_voting_arizona_state_worth^1972 = 4 }
	set_variable = { US_state_worth^2 = 4 }

	set_variable = { US_voting_arkansas_state_worth^1940 = 9 }
	set_variable = { US_voting_arkansas_state_worth^1944 = 9 }
	set_variable = { US_voting_arkansas_state_worth^1948 = 9 }
	set_variable = { US_voting_arkansas_state_worth^1952 = 8 }
	set_variable = { US_voting_arkansas_state_worth^1956 = 8 }
	set_variable = { US_voting_arkansas_state_worth^1960 = 8 }
	set_variable = { US_voting_arkansas_state_worth^1964 = 8 }
	set_variable = { US_voting_arkansas_state_worth^1968 = 8 }
	set_variable = { US_voting_arkansas_state_worth^1972 = 8 }
	set_variable = { US_state_worth^3 = 8 }

	set_variable = { US_voting_california_state_worth^1940 = 22 }
	set_variable = { US_voting_california_state_worth^1944 = 22 }
	set_variable = { US_voting_california_state_worth^1948 = 25 }
	set_variable = { US_voting_california_state_worth^1952 = 32 }
	set_variable = { US_voting_california_state_worth^1956 = 32 }
	set_variable = { US_voting_california_state_worth^1960 = 32 }
	set_variable = { US_voting_california_state_worth^1964 = 32 }
	set_variable = { US_voting_california_state_worth^1968 = 32 }
	set_variable = { US_voting_california_state_worth^1972 = 32 }
	set_variable = { US_state_worth^4 = 32 }

	set_variable = { US_voting_colorado_state_worth^1940 = 6 }
	set_variable = { US_voting_colorado_state_worth^1944 = 6 }
	set_variable = { US_voting_colorado_state_worth^1948 = 6 }
	set_variable = { US_voting_colorado_state_worth^1952 = 6 }
	set_variable = { US_voting_colorado_state_worth^1956 = 6 }
	set_variable = { US_voting_colorado_state_worth^1960 = 6 }
	set_variable = { US_voting_colorado_state_worth^1964 = 6 }
	set_variable = { US_voting_colorado_state_worth^1968 = 6 }
	set_variable = { US_voting_colorado_state_worth^1972 = 6 }
	set_variable = { US_state_worth^5 = 6 }

	set_variable = { US_voting_connecticut_state_worth^1940 = 8 }
	set_variable = { US_voting_connecticut_state_worth^1944 = 8 }
	set_variable = { US_voting_connecticut_state_worth^1948 = 8 }
	set_variable = { US_voting_connecticut_state_worth^1952 = 8 }
	set_variable = { US_voting_connecticut_state_worth^1956 = 8 }
	set_variable = { US_voting_connecticut_state_worth^1960 = 8 }
	set_variable = { US_voting_connecticut_state_worth^1964 = 8 }
	set_variable = { US_voting_connecticut_state_worth^1968 = 8 }
	set_variable = { US_voting_connecticut_state_worth^1972 = 8 }
	set_variable = { US_state_worth^6 = 8 }

	set_variable = { US_voting_dc_state_worth^1940 = 0 }
	set_variable = { US_voting_dc_state_worth^1944 = 0 }
	set_variable = { US_voting_dc_state_worth^1948 = 0 }
	set_variable = { US_voting_dc_state_worth^1952 = 0 }
	set_variable = { US_voting_dc_state_worth^1956 = 0 }
	set_variable = { US_voting_dc_state_worth^1960 = 0 }
	set_variable = { US_voting_dc_state_worth^1964 = 3 }
	set_variable = { US_voting_dc_state_worth^1968 = 3 }
	set_variable = { US_voting_dc_state_worth^1972 = 3 }
	set_variable = { US_state_worth^50 = 3 }

	set_variable = { US_voting_delaware_state_worth^1940 = 3 }
	set_variable = { US_voting_delaware_state_worth^1944 = 3 }
	set_variable = { US_voting_delaware_state_worth^1948 = 3 }
	set_variable = { US_voting_delaware_state_worth^1952 = 3 }
	set_variable = { US_voting_delaware_state_worth^1956 = 3 }
	set_variable = { US_voting_delaware_state_worth^1960 = 3 }
	set_variable = { US_voting_delaware_state_worth^1964 = 3 }
	set_variable = { US_voting_delaware_state_worth^1968 = 3 }
	set_variable = { US_voting_delaware_state_worth^1972 = 3 }
	set_variable = { US_state_worth^7 = 3 }

	set_variable = { US_voting_florida_state_worth^1940 = 7 }
	set_variable = { US_voting_florida_state_worth^1944 = 7 }
	set_variable = { US_voting_florida_state_worth^1948 = 8 }
	set_variable = { US_voting_florida_state_worth^1952 = 10 }
	set_variable = { US_voting_florida_state_worth^1956 = 10 }
	set_variable = { US_voting_florida_state_worth^1960 = 10 }
	set_variable = { US_voting_florida_state_worth^1964 = 10 }
	set_variable = { US_voting_florida_state_worth^1968 = 10 }
	set_variable = { US_voting_florida_state_worth^1972 = 10 }
	set_variable = { US_state_worth^8 = 10 }

	set_variable = { US_voting_georgia_state_worth^1940 = 12 }
	set_variable = { US_voting_georgia_state_worth^1944 = 12 }
	set_variable = { US_voting_georgia_state_worth^1948 = 12 }
	set_variable = { US_voting_georgia_state_worth^1952 = 12 }
	set_variable = { US_voting_georgia_state_worth^1956 = 12 }
	set_variable = { US_voting_georgia_state_worth^1960 = 12 }
	set_variable = { US_voting_georgia_state_worth^1964 = 12 }
	set_variable = { US_voting_georgia_state_worth^1968 = 12 }
	set_variable = { US_voting_georgia_state_worth^1972 = 12 }
	set_variable = { US_state_worth^9 = 12 }

	set_variable = { US_voting_hawaii_state_worth^1940 = 0 }
	set_variable = { US_voting_hawaii_state_worth^1944 = 0 }
	set_variable = { US_voting_hawaii_state_worth^1948 = 0 }
	set_variable = { US_voting_hawaii_state_worth^1952 = 0 }
	set_variable = { US_voting_hawaii_state_worth^1956 = 0 }
	set_variable = { US_voting_hawaii_state_worth^1960 = 4 }
	set_variable = { US_voting_hawaii_state_worth^1964 = 4 }
	set_variable = { US_voting_hawaii_state_worth^1968 = 4 }
	set_variable = { US_voting_hawaii_state_worth^1972 = 4 }
	set_variable = { US_state_worth^10 = 4 }

	set_variable = { US_voting_idaho_state_worth^1940 = 4 }
	set_variable = { US_voting_idaho_state_worth^1944 = 4 }
	set_variable = { US_voting_idaho_state_worth^1948 = 4 }
	set_variable = { US_voting_idaho_state_worth^1952 = 4 }
	set_variable = { US_voting_idaho_state_worth^1956 = 4 }
	set_variable = { US_voting_idaho_state_worth^1960 = 4 }
	set_variable = { US_voting_idaho_state_worth^1964 = 4 }
	set_variable = { US_voting_idaho_state_worth^1968 = 4 }
	set_variable = { US_voting_idaho_state_worth^1972 = 4 }
	set_variable = { US_state_worth^11 = 4 }

	set_variable = { US_voting_illinois_state_worth^1940 = 29 }
	set_variable = { US_voting_illinois_state_worth^1944 = 29 }
	set_variable = { US_voting_illinois_state_worth^1948 = 28 }
	set_variable = { US_voting_illinois_state_worth^1952 = 27 }
	set_variable = { US_voting_illinois_state_worth^1956 = 27 }
	set_variable = { US_voting_illinois_state_worth^1960 = 27 }
	set_variable = { US_voting_illinois_state_worth^1964 = 27 }
	set_variable = { US_voting_illinois_state_worth^1968 = 27 }
	set_variable = { US_voting_illinois_state_worth^1972 = 27 }
	set_variable = { US_state_worth^12 = 27 }

	set_variable = { US_voting_indiana_state_worth^1940 = 14 }
	set_variable = { US_voting_indiana_state_worth^1944 = 14 }
	set_variable = { US_voting_indiana_state_worth^1948 = 13 }
	set_variable = { US_voting_indiana_state_worth^1952 = 13 }
	set_variable = { US_voting_indiana_state_worth^1956 = 13 }
	set_variable = { US_voting_indiana_state_worth^1960 = 13 }
	set_variable = { US_voting_indiana_state_worth^1964 = 13 }
	set_variable = { US_voting_indiana_state_worth^1968 = 13 }
	set_variable = { US_voting_indiana_state_worth^1972 = 13 }
	set_variable = { US_state_worth^13 = 13 }

	set_variable = { US_voting_iowa_state_worth^1940 = 11 }
	set_variable = { US_voting_iowa_state_worth^1944 = 11 }
	set_variable = { US_voting_iowa_state_worth^1948 = 10 }
	set_variable = { US_voting_iowa_state_worth^1952 = 10 }
	set_variable = { US_voting_iowa_state_worth^1956 = 10 }
	set_variable = { US_voting_iowa_state_worth^1960 = 10 }
	set_variable = { US_voting_iowa_state_worth^1964 = 10 }
	set_variable = { US_voting_iowa_state_worth^1968 = 10 }
	set_variable = { US_voting_iowa_state_worth^1972 = 10 }
	set_variable = { US_state_worth^14 = 10 }

	set_variable = { US_voting_kansas_state_worth^1940 = 9 }
	set_variable = { US_voting_kansas_state_worth^1944 = 9 }
	set_variable = { US_voting_kansas_state_worth^1948 = 8 }
	set_variable = { US_voting_kansas_state_worth^1952 = 8 }
	set_variable = { US_voting_kansas_state_worth^1956 = 8 }
	set_variable = { US_voting_kansas_state_worth^1960 = 8 }
	set_variable = { US_voting_kansas_state_worth^1964 = 8 }
	set_variable = { US_voting_kansas_state_worth^1968 = 8 }
	set_variable = { US_voting_kansas_state_worth^1972 = 8 }
	set_variable = { US_state_worth^15 = 8 }

	set_variable = { US_voting_kentucky_state_worth^1940 = 11 }
	set_variable = { US_voting_kentucky_state_worth^1944 = 11 }
	set_variable = { US_voting_kentucky_state_worth^1948 = 11 }
	set_variable = { US_voting_kentucky_state_worth^1952 = 10 }
	set_variable = { US_voting_kentucky_state_worth^1956 = 10 }
	set_variable = { US_voting_kentucky_state_worth^1960 = 10 }
	set_variable = { US_voting_kentucky_state_worth^1964 = 10 }
	set_variable = { US_voting_kentucky_state_worth^1968 = 10 }
	set_variable = { US_voting_kentucky_state_worth^1972 = 10 }
	set_variable = { US_state_worth^16 = 10 }

	set_variable = { US_voting_louisiana_state_worth^1940 = 10 }
	set_variable = { US_voting_louisiana_state_worth^1944 = 10 }
	set_variable = { US_voting_louisiana_state_worth^1948 = 10 }
	set_variable = { US_voting_louisiana_state_worth^1952 = 10 }
	set_variable = { US_voting_louisiana_state_worth^1956 = 10 }
	set_variable = { US_voting_louisiana_state_worth^1960 = 10 }
	set_variable = { US_voting_louisiana_state_worth^1964 = 10 }
	set_variable = { US_voting_louisiana_state_worth^1968 = 10 }
	set_variable = { US_voting_louisiana_state_worth^1972 = 10 }
	set_variable = { US_state_worth^17 = 10 }

	set_variable = { US_voting_maine_state_worth^1940 = 5 }
	set_variable = { US_voting_maine_state_worth^1944 = 5 }
	set_variable = { US_voting_maine_state_worth^1948 = 5 }
	set_variable = { US_voting_maine_state_worth^1952 = 5 }
	set_variable = { US_voting_maine_state_worth^1956 = 5 }
	set_variable = { US_voting_maine_state_worth^1960 = 5 }
	set_variable = { US_voting_maine_state_worth^1964 = 5 }
	set_variable = { US_voting_maine_state_worth^1968 = 5 }
	set_variable = { US_voting_maine_state_worth^1972 = 5 }
	set_variable = { US_state_worth^18 = 5 }

	set_variable = { US_voting_maryland_state_worth^1940 = 8 }
	set_variable = { US_voting_maryland_state_worth^1944 = 8 }
	set_variable = { US_voting_maryland_state_worth^1948 = 8 }
	set_variable = { US_voting_maryland_state_worth^1952 = 9 }
	set_variable = { US_voting_maryland_state_worth^1956 = 9 }
	set_variable = { US_voting_maryland_state_worth^1960 = 9 }
	set_variable = { US_voting_maryland_state_worth^1964 = 9 }
	set_variable = { US_voting_maryland_state_worth^1968 = 9 }
	set_variable = { US_voting_maryland_state_worth^1972 = 9 }
	set_variable = { US_state_worth^19 = 9 }

	set_variable = { US_voting_massachusetts_state_worth^1940 = 17 }
	set_variable = { US_voting_massachusetts_state_worth^1944 = 17 }
	set_variable = { US_voting_massachusetts_state_worth^1948 = 16 }
	set_variable = { US_voting_massachusetts_state_worth^1952 = 16 }
	set_variable = { US_voting_massachusetts_state_worth^1956 = 16 }
	set_variable = { US_voting_massachusetts_state_worth^1960 = 16 }
	set_variable = { US_voting_massachusetts_state_worth^1964 = 16 }
	set_variable = { US_voting_massachusetts_state_worth^1968 = 16 }
	set_variable = { US_voting_massachusetts_state_worth^1972 = 16 }
	set_variable = { US_state_worth^20 = 16 }

	set_variable = { US_voting_michigan_state_worth^1940 = 19 }
	set_variable = { US_voting_michigan_state_worth^1944 = 19 }
	set_variable = { US_voting_michigan_state_worth^1948 = 19 }
	set_variable = { US_voting_michigan_state_worth^1952 = 20 }
	set_variable = { US_voting_michigan_state_worth^1956 = 20 }
	set_variable = { US_voting_michigan_state_worth^1960 = 20 }
	set_variable = { US_voting_michigan_state_worth^1964 = 20 }
	set_variable = { US_voting_michigan_state_worth^1968 = 20 }
	set_variable = { US_voting_michigan_state_worth^1972 = 20 }
	set_variable = { US_state_worth^21 = 20 }

	set_variable = { US_voting_minnesota_state_worth^1940 = 11 }
	set_variable = { US_voting_minnesota_state_worth^1944 = 11 }
	set_variable = { US_voting_minnesota_state_worth^1948 = 11 }
	set_variable = { US_voting_minnesota_state_worth^1952 = 11 }
	set_variable = { US_voting_minnesota_state_worth^1956 = 11 }
	set_variable = { US_voting_minnesota_state_worth^1960 = 11 }
	set_variable = { US_voting_minnesota_state_worth^1964 = 11 }
	set_variable = { US_voting_minnesota_state_worth^1968 = 11 }
	set_variable = { US_voting_minnesota_state_worth^1972 = 11 }
	set_variable = { US_state_worth^22 = 11 }

	set_variable = { US_voting_mississippi_state_worth^1940 = 9 }
	set_variable = { US_voting_mississippi_state_worth^1944 = 9 }
	set_variable = { US_voting_mississippi_state_worth^1948 = 9 }
	set_variable = { US_voting_mississippi_state_worth^1952 = 8 }
	set_variable = { US_voting_mississippi_state_worth^1956 = 8 }
	set_variable = { US_voting_mississippi_state_worth^1960 = 8 }
	set_variable = { US_voting_mississippi_state_worth^1964 = 8 }
	set_variable = { US_voting_mississippi_state_worth^1968 = 8 }
	set_variable = { US_voting_mississippi_state_worth^1972 = 8 }
	set_variable = { US_state_worth^23 = 8 }

	set_variable = { US_voting_missouri_state_worth^1940 = 15 }
	set_variable = { US_voting_missouri_state_worth^1944 = 15 }
	set_variable = { US_voting_missouri_state_worth^1948 = 15 }
	set_variable = { US_voting_missouri_state_worth^1952 = 13 }
	set_variable = { US_voting_missouri_state_worth^1956 = 13 }
	set_variable = { US_voting_missouri_state_worth^1960 = 13 }
	set_variable = { US_voting_missouri_state_worth^1964 = 13 }
	set_variable = { US_voting_missouri_state_worth^1968 = 13 }
	set_variable = { US_voting_missouri_state_worth^1972 = 13 }
	set_variable = { US_state_worth^24 = 13 }

	set_variable = { US_voting_montana_state_worth^1940 = 4 }
	set_variable = { US_voting_montana_state_worth^1944 = 4 }
	set_variable = { US_voting_montana_state_worth^1948 = 4 }
	set_variable = { US_voting_montana_state_worth^1952 = 4 }
	set_variable = { US_voting_montana_state_worth^1956 = 4 }
	set_variable = { US_voting_montana_state_worth^1960 = 4 }
	set_variable = { US_voting_montana_state_worth^1964 = 4 }
	set_variable = { US_voting_montana_state_worth^1968 = 4 }
	set_variable = { US_voting_montana_state_worth^1972 = 4 }
	set_variable = { US_state_worth^25 = 4 }

	set_variable = { US_voting_nebraska_state_worth^1940 = 7 }
	set_variable = { US_voting_nebraska_state_worth^1944 = 7 }
	set_variable = { US_voting_nebraska_state_worth^1948 = 6 }
	set_variable = { US_voting_nebraska_state_worth^1952 = 6 }
	set_variable = { US_voting_nebraska_state_worth^1956 = 6 }
	set_variable = { US_voting_nebraska_state_worth^1960 = 6 }
	set_variable = { US_voting_nebraska_state_worth^1964 = 6 }
	set_variable = { US_voting_nebraska_state_worth^1968 = 6 }
	set_variable = { US_voting_nebraska_state_worth^1972 = 6 }
	set_variable = { US_state_worth^26 = 6 }

	set_variable = { US_voting_nevada_state_worth^1940 = 3 }
	set_variable = { US_voting_nevada_state_worth^1944 = 3 }
	set_variable = { US_voting_nevada_state_worth^1948 = 3 }
	set_variable = { US_voting_nevada_state_worth^1952 = 3 }
	set_variable = { US_voting_nevada_state_worth^1956 = 3 }
	set_variable = { US_voting_nevada_state_worth^1960 = 3 }
	set_variable = { US_voting_nevada_state_worth^1964 = 3 }
	set_variable = { US_voting_nevada_state_worth^1968 = 3 }
	set_variable = { US_voting_nevada_state_worth^1972 = 3 }
	set_variable = { US_state_worth^27 = 3 }

	set_variable = { US_voting_new_hampshire_state_worth^1940 = 4 }
	set_variable = { US_voting_new_hampshire_state_worth^1944 = 4 }
	set_variable = { US_voting_new_hampshire_state_worth^1948 = 4 }
	set_variable = { US_voting_new_hampshire_state_worth^1952 = 4 }
	set_variable = { US_voting_new_hampshire_state_worth^1956 = 4 }
	set_variable = { US_voting_new_hampshire_state_worth^1960 = 4 }
	set_variable = { US_voting_new_hampshire_state_worth^1964 = 4 }
	set_variable = { US_voting_new_hampshire_state_worth^1968 = 4 }
	set_variable = { US_voting_new_hampshire_state_worth^1972 = 4 }
	set_variable = { US_state_worth^28 = 4 }

	set_variable = { US_voting_new_jersey_state_worth^1940 = 16 }
	set_variable = { US_voting_new_jersey_state_worth^1944 = 16 }
	set_variable = { US_voting_new_jersey_state_worth^1948 = 16 }
	set_variable = { US_voting_new_jersey_state_worth^1952 = 16 }
	set_variable = { US_voting_new_jersey_state_worth^1956 = 16 }
	set_variable = { US_voting_new_jersey_state_worth^1960 = 16 }
	set_variable = { US_voting_new_jersey_state_worth^1964 = 16 }
	set_variable = { US_voting_new_jersey_state_worth^1968 = 16 }
	set_variable = { US_voting_new_jersey_state_worth^1972 = 16 }
	set_variable = { US_state_worth^29 = 16 }

	set_variable = { US_voting_new_mexico_state_worth^1940 = 3 }
	set_variable = { US_voting_new_mexico_state_worth^1944 = 3 }
	set_variable = { US_voting_new_mexico_state_worth^1948 = 4 }
	set_variable = { US_voting_new_mexico_state_worth^1952 = 4 }
	set_variable = { US_voting_new_mexico_state_worth^1956 = 4 }
	set_variable = { US_voting_new_mexico_state_worth^1960 = 4 }
	set_variable = { US_voting_new_mexico_state_worth^1964 = 4 }
	set_variable = { US_voting_new_mexico_state_worth^1968 = 4 }
	set_variable = { US_voting_new_mexico_state_worth^1972 = 4 }
	set_variable = { US_state_worth^30 = 4 }

	set_variable = { US_voting_new_york_state_worth^1940 = 47 }
	set_variable = { US_voting_new_york_state_worth^1944 = 47 }
	set_variable = { US_voting_new_york_state_worth^1948 = 47 }
	set_variable = { US_voting_new_york_state_worth^1952 = 45 }
	set_variable = { US_voting_new_york_state_worth^1956 = 45 }
	set_variable = { US_voting_new_york_state_worth^1960 = 45 }
	set_variable = { US_voting_new_york_state_worth^1964 = 45 }
	set_variable = { US_voting_new_york_state_worth^1968 = 45 }
	set_variable = { US_voting_new_york_state_worth^1972 = 45 }
	set_variable = { US_state_worth^31 = 45 }

	set_variable = { US_voting_north_carolina_state_worth^1940 = 13 }
	set_variable = { US_voting_north_carolina_state_worth^1944 = 13 }
	set_variable = { US_voting_north_carolina_state_worth^1948 = 14 }
	set_variable = { US_voting_north_carolina_state_worth^1952 = 14 }
	set_variable = { US_voting_north_carolina_state_worth^1956 = 14 }
	set_variable = { US_voting_north_carolina_state_worth^1960 = 14 }
	set_variable = { US_voting_north_carolina_state_worth^1964 = 14 }
	set_variable = { US_voting_north_carolina_state_worth^1968 = 14 }
	set_variable = { US_voting_north_carolina_state_worth^1972 = 14 }
	set_variable = { US_state_worth^32 = 14 }

	set_variable = { US_voting_north_dakota_state_worth^1940 = 4 }
	set_variable = { US_voting_north_dakota_state_worth^1944 = 4 }
	set_variable = { US_voting_north_dakota_state_worth^1948 = 4 }
	set_variable = { US_voting_north_dakota_state_worth^1952 = 4 }
	set_variable = { US_voting_north_dakota_state_worth^1956 = 4 }
	set_variable = { US_voting_north_dakota_state_worth^1960 = 4 }
	set_variable = { US_voting_north_dakota_state_worth^1964 = 4 }
	set_variable = { US_voting_north_dakota_state_worth^1968 = 4 }
	set_variable = { US_voting_north_dakota_state_worth^1972 = 4 }
	set_variable = { US_state_worth^33 = 4 }

	set_variable = { US_voting_ohio_state_worth^1940 = 26 }
	set_variable = { US_voting_ohio_state_worth^1944 = 26 }
	set_variable = { US_voting_ohio_state_worth^1948 = 25 }
	set_variable = { US_voting_ohio_state_worth^1952 = 25 }
	set_variable = { US_voting_ohio_state_worth^1956 = 25 }
	set_variable = { US_voting_ohio_state_worth^1960 = 25 }
	set_variable = { US_voting_ohio_state_worth^1964 = 25 }
	set_variable = { US_voting_ohio_state_worth^1968 = 25 }
	set_variable = { US_voting_ohio_state_worth^1972 = 25 }
	set_variable = { US_state_worth^34 = 25 }

	set_variable = { US_voting_oklahoma_state_worth^1940 = 11 }
	set_variable = { US_voting_oklahoma_state_worth^1944 = 11 }
	set_variable = { US_voting_oklahoma_state_worth^1948 = 10 }
	set_variable = { US_voting_oklahoma_state_worth^1952 = 8 }
	set_variable = { US_voting_oklahoma_state_worth^1956 = 8 }
	set_variable = { US_voting_oklahoma_state_worth^1960 = 8 }
	set_variable = { US_voting_oklahoma_state_worth^1964 = 8 }
	set_variable = { US_voting_oklahoma_state_worth^1968 = 8 }
	set_variable = { US_voting_oklahoma_state_worth^1972 = 8 }
	set_variable = { US_state_worth^35 = 8 }

	set_variable = { US_voting_oregon_state_worth^1940 = 5 }
	set_variable = { US_voting_oregon_state_worth^1944 = 5 }
	set_variable = { US_voting_oregon_state_worth^1948 = 6 }
	set_variable = { US_voting_oregon_state_worth^1952 = 6 }
	set_variable = { US_voting_oregon_state_worth^1956 = 6 }
	set_variable = { US_voting_oregon_state_worth^1960 = 6 }
	set_variable = { US_voting_oregon_state_worth^1964 = 6 }
	set_variable = { US_voting_oregon_state_worth^1968 = 6 }
	set_variable = { US_voting_oregon_state_worth^1972 = 6 }
	set_variable = { US_state_worth^36 = 6 }

	set_variable = { US_voting_pennsylvania_state_worth^1940 = 36 }
	set_variable = { US_voting_pennsylvania_state_worth^1944 = 36 }
	set_variable = { US_voting_pennsylvania_state_worth^1948 = 35 }
	set_variable = { US_voting_pennsylvania_state_worth^1952 = 32 }
	set_variable = { US_voting_pennsylvania_state_worth^1956 = 32 }
	set_variable = { US_voting_pennsylvania_state_worth^1960 = 32 }
	set_variable = { US_voting_pennsylvania_state_worth^1964 = 32 }
	set_variable = { US_voting_pennsylvania_state_worth^1968 = 32 }
	set_variable = { US_voting_pennsylvania_state_worth^1972 = 32 }
	set_variable = { US_state_worth^37 = 32 }

	set_variable = { US_voting_rhode_island_state_worth^1940 = 4 }
	set_variable = { US_voting_rhode_island_state_worth^1944 = 4 }
	set_variable = { US_voting_rhode_island_state_worth^1948 = 4 }
	set_variable = { US_voting_rhode_island_state_worth^1952 = 4 }
	set_variable = { US_voting_rhode_island_state_worth^1956 = 4 }
	set_variable = { US_voting_rhode_island_state_worth^1960 = 4 }
	set_variable = { US_voting_rhode_island_state_worth^1964 = 4 }
	set_variable = { US_voting_rhode_island_state_worth^1968 = 4 }
	set_variable = { US_voting_rhode_island_state_worth^1972 = 4 }
	set_variable = { US_state_worth^38 = 4 }

	set_variable = { US_voting_south_carolina_state_worth^1940 = 8 }
	set_variable = { US_voting_south_carolina_state_worth^1944 = 8 }
	set_variable = { US_voting_south_carolina_state_worth^1948 = 8 }
	set_variable = { US_voting_south_carolina_state_worth^1952 = 8 }
	set_variable = { US_voting_south_carolina_state_worth^1956 = 8 }
	set_variable = { US_voting_south_carolina_state_worth^1960 = 8 }
	set_variable = { US_voting_south_carolina_state_worth^1964 = 8 }
	set_variable = { US_voting_south_carolina_state_worth^1968 = 8 }
	set_variable = { US_voting_south_carolina_state_worth^1972 = 8 }
	set_variable = { US_state_worth^39 = 8 }

	set_variable = { US_voting_south_dakota_state_worth^1940 = 4 }
	set_variable = { US_voting_south_dakota_state_worth^1944 = 4 }
	set_variable = { US_voting_south_dakota_state_worth^1948 = 4 }
	set_variable = { US_voting_south_dakota_state_worth^1952 = 4 }
	set_variable = { US_voting_south_dakota_state_worth^1956 = 4 }
	set_variable = { US_voting_south_dakota_state_worth^1960 = 4 }
	set_variable = { US_voting_south_dakota_state_worth^1964 = 4 }
	set_variable = { US_voting_south_dakota_state_worth^1968 = 4 }
	set_variable = { US_voting_south_dakota_state_worth^1972 = 4 }
	set_variable = { US_state_worth^40 = 4 }

	set_variable = { US_voting_tennessee_state_worth^1940 = 11 }
	set_variable = { US_voting_tennessee_state_worth^1944 = 12 }
	set_variable = { US_voting_tennessee_state_worth^1948 = 12 }
	set_variable = { US_voting_tennessee_state_worth^1952 = 11 }
	set_variable = { US_voting_tennessee_state_worth^1956 = 11 }
	set_variable = { US_voting_tennessee_state_worth^1960 = 11 }
	set_variable = { US_voting_tennessee_state_worth^1964 = 11 }
	set_variable = { US_voting_tennessee_state_worth^1968 = 11 }
	set_variable = { US_voting_tennessee_state_worth^1972 = 11 }
	set_variable = { US_state_worth^41 = 11 }

	set_variable = { US_voting_texas_state_worth^1940 = 23 }
	set_variable = { US_voting_texas_state_worth^1944 = 23 }
	set_variable = { US_voting_texas_state_worth^1948 = 23 }
	set_variable = { US_voting_texas_state_worth^1952 = 24 }
	set_variable = { US_voting_texas_state_worth^1956 = 24 }
	set_variable = { US_voting_texas_state_worth^1960 = 24 }
	set_variable = { US_voting_texas_state_worth^1964 = 24 }
	set_variable = { US_voting_texas_state_worth^1968 = 24 }
	set_variable = { US_voting_texas_state_worth^1972 = 24 }
	set_variable = { US_state_worth^42 = 24 }

	set_variable = { US_voting_utah_state_worth^1940 = 4 }
	set_variable = { US_voting_utah_state_worth^1944 = 4 }
	set_variable = { US_voting_utah_state_worth^1948 = 4 }
	set_variable = { US_voting_utah_state_worth^1952 = 4 }
	set_variable = { US_voting_utah_state_worth^1956 = 4 }
	set_variable = { US_voting_utah_state_worth^1960 = 4 }
	set_variable = { US_voting_utah_state_worth^1964 = 4 }
	set_variable = { US_voting_utah_state_worth^1968 = 4 }
	set_variable = { US_voting_utah_state_worth^1972 = 4 }
	set_variable = { US_state_worth^43 = 4 }

	set_variable = { US_voting_vermont_state_worth^1940 = 3 }
	set_variable = { US_voting_vermont_state_worth^1944 = 3 }
	set_variable = { US_voting_vermont_state_worth^1948 = 4 }
	set_variable = { US_voting_vermont_state_worth^1952 = 4 }
	set_variable = { US_voting_vermont_state_worth^1956 = 3 }
	set_variable = { US_voting_vermont_state_worth^1960 = 3 }
	set_variable = { US_voting_vermont_state_worth^1964 = 3 }
	set_variable = { US_voting_vermont_state_worth^1968 = 3 }
	set_variable = { US_voting_vermont_state_worth^1972 = 3 }
	set_variable = { US_state_worth^44 = 3 }

	set_variable = { US_voting_virginia_state_worth^1940 = 11 }
	set_variable = { US_voting_virginia_state_worth^1944 = 11 }
	set_variable = { US_voting_virginia_state_worth^1948 = 11 }
	set_variable = { US_voting_virginia_state_worth^1952 = 12 }
	set_variable = { US_voting_virginia_state_worth^1956 = 12 }
	set_variable = { US_voting_virginia_state_worth^1960 = 12 }
	set_variable = { US_voting_virginia_state_worth^1964 = 12 }
	set_variable = { US_voting_virginia_state_worth^1968 = 12 }
	set_variable = { US_voting_virginia_state_worth^1972 = 12 }
	set_variable = { US_state_worth^45 = 12 }

	set_variable = { US_voting_washington_state_worth^1940 = 8 }
	set_variable = { US_voting_washington_state_worth^1944 = 8 }
	set_variable = { US_voting_washington_state_worth^1948 = 8 }
	set_variable = { US_voting_washington_state_worth^1952 = 9 }
	set_variable = { US_voting_washington_state_worth^1956 = 9 }
	set_variable = { US_voting_washington_state_worth^1960 = 9 }
	set_variable = { US_voting_washington_state_worth^1964 = 9 }
	set_variable = { US_voting_washington_state_worth^1968 = 9 }
	set_variable = { US_voting_washington_state_worth^1972 = 9 }
	set_variable = { US_state_worth^46 = 9 }

	set_variable = { US_voting_west_virginia_state_worth^1940 = 8 }
	set_variable = { US_voting_west_virginia_state_worth^1944 = 8 }
	set_variable = { US_voting_west_virginia_state_worth^1948 = 8 }
	set_variable = { US_voting_west_virginia_state_worth^1952 = 8 }
	set_variable = { US_voting_west_virginia_state_worth^1956 = 8 }
	set_variable = { US_voting_west_virginia_state_worth^1960 = 8 }
	set_variable = { US_voting_west_virginia_state_worth^1964 = 8 }
	set_variable = { US_voting_west_virginia_state_worth^1968 = 8 }
	set_variable = { US_voting_west_virginia_state_worth^1972 = 8 }
	set_variable = { US_state_worth^47 = 8 }

	set_variable = { US_voting_wisconsin_state_worth^1940 = 12 }
	set_variable = { US_voting_wisconsin_state_worth^1944 = 12 }
	set_variable = { US_voting_wisconsin_state_worth^1948 = 12 }
	set_variable = { US_voting_wisconsin_state_worth^1952 = 12 }
	set_variable = { US_voting_wisconsin_state_worth^1956 = 12 }
	set_variable = { US_voting_wisconsin_state_worth^1960 = 12 }
	set_variable = { US_voting_wisconsin_state_worth^1964 = 12 }
	set_variable = { US_voting_wisconsin_state_worth^1968 = 12 }
	set_variable = { US_voting_wisconsin_state_worth^1972 = 12 }
	set_variable = { US_state_worth^48 = 12 }

	set_variable = { US_voting_wyoming_state_worth^1940 = 3 }
	set_variable = { US_voting_wyoming_state_worth^1944 = 3 }
	set_variable = { US_voting_wyoming_state_worth^1948 = 3 }
	set_variable = { US_voting_wyoming_state_worth^1952 = 3 }
	set_variable = { US_voting_wyoming_state_worth^1956 = 3 }
	set_variable = { US_voting_wyoming_state_worth^1960 = 3 }
	set_variable = { US_voting_wyoming_state_worth^1964 = 3 }
	set_variable = { US_voting_wyoming_state_worth^1968 = 3 }
	set_variable = { US_voting_wyoming_state_worth^1972 = 3 }
	set_variable = { US_state_worth^49 = 3 }
}
USA_GUI_work_out_predicted_differences = {
	clear_variable = US_no_of_predicted_senators^1
	clear_variable = US_no_of_predicted_senators^2
	clear_variable = US_no_of_predicted_senators^3
	clear_variable = US_no_of_predicted_senators^4
	clear_variable = US_no_of_predicted_senators^5
	clear_variable = US_no_of_predicted_senators^6
	for_loop_effect = {
		start = 0
		end = 50
		value = idx

		set_variable = { USA_state_number = USA_states^idx }
		set_variable = { senator_1_to_add = USA_state_number:senate_seat_1_seatwarmer }
		set_variable = { senator_2_to_add = USA_state_number:senate_seat_2_seatwarmer }
		add_to_variable = { US_no_of_predicted_senators^senator_1_to_add = 1 }
		add_to_variable = { US_no_of_predicted_senators^senator_2_to_add = 1 }
	}

	set_variable = { US_senators_predicted_difference^1 = US_no_of_predicted_senators^1 }
	set_variable = { US_senators_predicted_difference^2 = US_no_of_predicted_senators^2 }
	set_variable = { US_senators_predicted_difference^3 = US_no_of_predicted_senators^3 }
	set_variable = { US_senators_predicted_difference^4 = US_no_of_predicted_senators^4 }
	set_variable = { US_senators_predicted_difference^5 = US_no_of_predicted_senators^5 }
	set_variable = { US_senators_predicted_difference^6 = US_no_of_predicted_senators^6 }

	subtract_from_variable = { US_senators_predicted_difference^1 = RD_R_senators }
	subtract_from_variable = { US_senators_predicted_difference^2 = RD_D_senators }
	subtract_from_variable = { US_senators_predicted_difference^3 = NPP_L_senators }
	subtract_from_variable = { US_senators_predicted_difference^4 = NPP_C_senators }
	subtract_from_variable = { US_senators_predicted_difference^5 = NPP_R_senators }
	subtract_from_variable = { US_senators_predicted_difference^6 = NPP_FR_senators }

	set_variable = { US_senators_predicted_difference^7 = US_senators_predicted_difference^1 }
	add_to_variable = { US_senators_predicted_difference^7 = US_senators_predicted_difference^2 }

	set_variable = { US_senators_predicted_difference^8 = US_senators_predicted_difference^3 }
	add_to_variable = { US_senators_predicted_difference^8 = US_senators_predicted_difference^4 }
	add_to_variable = { US_senators_predicted_difference^8 = US_senators_predicted_difference^5 }
	add_to_variable = { US_senators_predicted_difference^8 = US_senators_predicted_difference^6 }

	if = {
		limit = {
			NOT = {
				has_country_flag = USA_senate_elections
			}
		}
		set_variable = { US_no_of_predicted_senators^1 = RD_R_senators }
		set_variable = { US_no_of_predicted_senators^2 = RD_D_senators }
		set_variable = { US_no_of_predicted_senators^3 = NPP_L_senators }
		set_variable = { US_no_of_predicted_senators^4 = NPP_C_senators }
		set_variable = { US_no_of_predicted_senators^5 = NPP_R_senators }
		set_variable = { US_no_of_predicted_senators^6 = NPP_FR_senators }
	}
	set_variable = { rep_senators_predicted_value = US_no_of_predicted_senators^1 }
	set_variable = { dem_senators_predicted_value = US_no_of_predicted_senators^2 }
	set_variable = { com_senators_predicted_value = US_no_of_predicted_senators^3 }
	set_variable = { pro_senators_predicted_value = US_no_of_predicted_senators^4 }
	set_variable = { anv_senators_predicted_value = US_no_of_predicted_senators^5 }
	set_variable = { nat_senators_predicted_value = US_no_of_predicted_senators^6 }
}
USA_GUI_total_up_senators = {
	clear_variable = US_no_of_senators^1
	clear_variable = US_no_of_senators^2
	clear_variable = US_no_of_senators^3
	clear_variable = US_no_of_senators^4
	clear_variable = US_no_of_senators^5
	clear_variable = US_no_of_senators^6
	for_loop_effect = {
		start = 0
		end = 50
		value = idx

		set_variable = { USA_state_number = USA_states^idx }
		set_variable = { senator_1_to_add = USA_state_number:senator_1 }
		set_variable = { senator_2_to_add = USA_state_number:senator_2 }
		add_to_variable = { US_no_of_senators^senator_1_to_add = 1 }
		add_to_variable = { US_no_of_senators^senator_2_to_add = 1 }
	}
	set_variable = { RD_R_SENATORS = US_no_of_senators^1 }
	set_variable = { RD_D_SENATORS = US_no_of_senators^2 }
	set_variable = { NPP_L_SENATORS = US_no_of_senators^3 }
	set_variable = { NPP_C_SENATORS = US_no_of_senators^4 }
	set_variable = { NPP_R_SENATORS = US_no_of_senators^5 }
	set_variable = { NPP_FR_SENATORS = US_no_of_senators^6 }

	set_variable = { RDC_senators = RD_R_senators }
	add_to_variable = { RDC_senators = RD_D_senators }
	set_variable = { NPP_senators = NPP_C_senators }
	add_to_variable = { NPP_senators = NPP_L_senators }
	add_to_variable = { NPP_senators = NPP_FR_senators }
	add_to_variable = { NPP_senators = NPP_R_senators }
}
USA_GUI_work_out_senate_change = {
	clear_variable = US_no_of_previous_senators^1
	clear_variable = US_no_of_previous_senators^2
	clear_variable = US_no_of_previous_senators^3
	clear_variable = US_no_of_previous_senators^4
	clear_variable = US_no_of_previous_senators^5
	clear_variable = US_no_of_previous_senators^6
	for_loop_effect = {
		start = 0
		end = 50
		value = idx

		set_variable = { USA_state_number = USA_states^idx }
		set_variable = { senator_1_to_add = USA_state_number:prev_senator_1 }
		set_variable = { senator_2_to_add = USA_state_number:prev_senator_2 }
		add_to_variable = { US_no_of_previous_senators^senator_1_to_add = 1 }
		add_to_variable = { US_no_of_previous_senators^senator_2_to_add = 1 }
	}

	set_variable = { US_senators_difference^1 = RD_R_senators }
	set_variable = { US_senators_difference^2 = RD_D_senators }
	set_variable = { US_senators_difference^3 = NPP_L_senators }
	set_variable = { US_senators_difference^4 = NPP_C_senators }
	set_variable = { US_senators_difference^5 = NPP_R_senators }
	set_variable = { US_senators_difference^6 = NPP_FR_senators }

	subtract_from_variable = { US_senators_difference^1 = US_no_of_previous_senators^1 }
	subtract_from_variable = { US_senators_difference^2 = US_no_of_previous_senators^2 }
	subtract_from_variable = { US_senators_difference^3 = US_no_of_previous_senators^3 }
	subtract_from_variable = { US_senators_difference^4 = US_no_of_previous_senators^4 }
	subtract_from_variable = { US_senators_difference^5 = US_no_of_previous_senators^5 }
	subtract_from_variable = { US_senators_difference^6 = US_no_of_previous_senators^6 }

	set_variable = { US_senators_difference^7 = US_senators_difference^1 }
	add_to_variable = { US_senators_difference^7 = US_senators_difference^2 }

	set_variable = { US_senators_difference^8 = US_senators_difference^3 }
	add_to_variable = { US_senators_difference^8 = US_senators_difference^4 }
	add_to_variable = { US_senators_difference^8 = US_senators_difference^5 }
	add_to_variable = { US_senators_difference^8 = US_senators_difference^6 }
}
USA_display_current_election = {
	set_variable = { USA_GUI_pres_left_side_frame = 1 }
	set_variable = { USA_GUI_pres_right_side_frame = 1 }
	set_variable = { USA_pres_contender_rd = USA_current_election_rd_candidate }
	set_variable = { USA_pres_contender_npp = USA_current_election_npp_candidate }
	set_variable = { USA_pres_contender_rd_animation = USA_current_election_rd_candidate }
	set_variable = { USA_pres_contender_npp_animation = USA_current_election_npp_candidate }
	USA_display_map_for_presidential_race = yes
	USA_display_pres_bars_current = yes
	US_GUI_update_elec_college_display = yes
}
USA_display_map_for_presidential_race = {
	clear_variable = US_voting_uncertain_electoral_college_votes
	clear_variable = US_voting_rdc_electoral_college_votes
	clear_variable = US_voting_npp_electoral_college_votes
	for_loop_effect = {
		start = 0
		end = 51
		value = idx

		set_variable = { USA_state_number = USA_states^idx }
		if = {
			limit = {
				OR = {
					AND = {
						check_variable = { USA_state_number:RDC_popularity_prespoll_unrounded_upper > USA_state_number:NPP_popularity_prespoll_unrounded_lower }
						check_variable = { USA_state_number:RDC_popularity_prespoll_unrounded_upper < USA_state_number:NPP_popularity_prespoll_unrounded_upper }
					}
					AND = {
						check_variable = { USA_state_number:NPP_popularity_prespoll_unrounded_upper > USA_state_number:RDC_popularity_prespoll_unrounded_lower }
						check_variable = { USA_state_number:NPP_popularity_prespoll_unrounded_upper < USA_state_number:RDC_popularity_prespoll_unrounded_upper }
					}
					AND = {
						check_variable = { USA_state_number:NPP_popularity_prespoll_unrounded_lower = USA_state_number:RDC_popularity_prespoll_unrounded_lower }
						check_variable = { USA_state_number:NPP_popularity_prespoll_unrounded_upper = USA_state_number:RDC_popularity_prespoll_unrounded_upper }
					}
				}
			}
			add_to_variable = { US_voting_uncertain_electoral_college_votes = US_state_worth^idx }
			set_variable = { USA_state_number:US_state_colour_for_map = 3 }
			set_variable = { USA_state_number:USA_map_split = 50 }
		}
		if = {
			limit = {
				check_variable = { USA_state_number:RDC_popularity_prespoll_unrounded_lower > USA_state_number:NPP_popularity_prespoll_unrounded_upper }
			}
			add_to_variable = { US_voting_rdc_electoral_college_votes = US_state_worth^idx }
			set_variable = { USA_state_number:US_state_colour_for_map = 1 }
			set_variable = { USA_state_number:USA_map_split = 0 }
		}
		if = {
			limit = {
				check_variable = { USA_state_number:NPP_popularity_prespoll_unrounded_lower > USA_state_number:RDC_popularity_prespoll_unrounded_upper }
			}
			add_to_variable = { US_voting_npp_electoral_college_votes = US_state_worth^idx }
			set_variable = { USA_state_number:US_state_colour_for_map = 2 }
			set_variable = { USA_state_number:USA_map_split = 100 }
		}
		set_variable = { USA_state_number:USA_first_party = 1 }
		set_variable = { USA_state_number:USA_second_party = 2 }
	}
	if = {
		limit = {
			NOT = {
				USA = {
					owns_state = 629
				}
			}
		}
		if = {
			limit = {
				check_variable = { 629.US_state_colour_for_map = 1 }
			}
			subtract_from_variable = { US_voting_rdc_electoral_college_votes = US_state_worth^10 }
		}
		else_if = {
			limit = {
				check_variable = { 629.US_state_colour_for_map = 2 }
			}
			subtract_from_variable = { US_voting_npp_electoral_college_votes = US_state_worth^10 }
		}
		else = {
			subtract_from_variable = { US_voting_uncertain_electoral_college_votes = US_state_worth^10 }
		}
	}
	USA_display_pres_bars_current = yes
	USA_set_variables_for_map = yes
}
USA_display_pres_bars_current = {
	set_variable = { USA_current_election_total_votes = US_voting_rdc_electoral_college_votes }
	add_to_variable = { USA_current_election_total_votes = US_voting_npp_electoral_college_votes }
	add_to_variable = { USA_current_election_total_votes = US_voting_uncertain_electoral_college_votes }

	set_variable = { US_voting_animated_bar_frame = 1100000 }

	set_variable = { US_voting_rdc_bar_frame = US_voting_rdc_electoral_college_votes }
	divide_variable = { US_voting_rdc_bar_frame = USA_current_election_total_votes }
	multiply_variable = { US_voting_rdc_bar_frame = 100 }
	round_variable = US_voting_rdc_bar_frame

	set_variable = { US_voting_npp_bar_frame = US_voting_npp_electoral_college_votes }
	divide_variable = { US_voting_npp_bar_frame = USA_current_election_total_votes }
	multiply_variable = { US_voting_npp_bar_frame = 100 }
	round_variable = US_voting_npp_bar_frame

	multiply_variable = { US_voting_npp_bar_frame = 1000 }
	subtract_from_variable = { US_voting_animated_bar_frame = US_voting_npp_bar_frame }
	add_to_variable = { US_voting_animated_bar_frame = US_voting_rdc_bar_frame }

	set_variable = { US_voting_rdc_electoral_college_votes = US_voting_rdc_electoral_college_votes }
	set_variable = { US_voting_rdc_electoral_college_votes_prev = 0 }
	set_variable = { US_voting_npp_electoral_college_votes = US_voting_npp_electoral_college_votes }
	set_variable = { US_voting_npp_electoral_college_votes_prev = 0 }

	US_GUI_update_elec_college_display = yes
	US_GUI_update_elec_bar = yes
}
USA_GUI_previous_election_display_shenanigans = {
	if = {
		limit = {
			check_variable = { USA_GUI_selected_tab_sub = 4 }
		}
		set_variable = { USA_pres_contender_rd_prev = USA_pres_contender_rd } 
		set_variable = { USA_pres_contender_npp_prev = USA_pres_contender_npp }
		set_variable = { USA_GUI_pres_left_side_frame_prev = USA_GUI_pres_left_side_frame }
		set_variable = { USA_GUI_pres_right_side_frame_prev = USA_GUI_pres_right_side_frame }
	}
	if = {
		limit = {
			check_variable = { USA_GUI_selected_tab_sub = 3 }
		}
		set_variable = { USA_pres_contender_rd = USA_pres_contender_rd_prev }
		set_variable = { USA_pres_contender_npp = USA_pres_contender_npp_prev }
		set_variable = { USA_pres_contender_rd_animation = USA_pres_contender_rd_prev }
		set_variable = { USA_pres_contender_npp_animation = USA_pres_contender_npp_prev }
		set_variable = { USA_GUI_pres_left_side_frame = USA_GUI_pres_left_side_frame_prev }
		set_variable = { USA_GUI_pres_right_side_frame = USA_GUI_pres_right_side_frame_prev }
	}
}
USA_GUI_check_to_update_screen = {
	if = {
		limit = {
			check_variable = { USA_GUI_selected_tab_sub = 3 }
		}
		USA_display_current_election = yes
	}
}
US_initiate_animation = {
	#Begins the animation (please just do it through the setup effect or it won't work)#
	add_to_variable = { US_no_of_presidential_elections_held = 1 }
	USA_display_election_results = yes
	US_clear_animation_vars = yes
	US_cool_animation_setup = yes
	set_variable = { US_state_position = 0 }
	US_grab_state_frames_and_votes_for_animation = yes
	set_country_flag = USA_animation_in_progress
	set_variable = { US_voting_rdc_bar_frame = 0 }
	set_variable = { US_voting_npp_bar_frame = 0 }
	set_variable = { US_voting_uncertainty_bar_frame = 0 }
	set_variable = { USA_rd_total_votes_from_election = 0 }
	set_variable = { USA_npp_total_votes_from_election = 0 }
	set_variable = { US_voting_rdc_electoral_college_votes = 0 }
	set_variable = { US_voting_npp_electoral_college_votes = 0 }
	set_variable = { US_voting_rdc_total_votes = 0 }
	set_variable = { US_voting_npp_total_votes = 0 }
	set_variable = { US_voting_actual_rd_votes_first_part = 0 }
	set_variable = { US_voting_actual_rd_votes_second_part = 0 }
	set_variable = { US_voting_actual_rd_votes_third_part = 0 }
	set_variable = { US_voting_actual_npp_votes_first_part = 0 }
	set_variable = { US_voting_actual_npp_votes_second_part = 0 }
	set_variable = { US_voting_actual_npp_votes_third_part = 0 }
	set_variable = { US_rdc_electoral_votes_animated = 000010 }
	set_variable = { US_npp_electoral_votes_animated = 1000010 }
	set_variable = { US_voting_animated_bar_frame = 1000050 }
	USA_set_up_portrait_animation = yes
	USA_sort_out_total_votes_display = yes
	if = {
		limit = {
			has_country_flag = US_animation_disabled
		}
		clear_array = USA_states_icon_array
		clear_array = USA_states_x_array
		clear_array = USA_states_y_array
	}
	if = {
		limit = {
			NOT = {
				is_in_array = { USA_states_dots = 50 }
			}
		}
		add_to_array = { USA_states_dots = 50 }
	}
	USA = {
		country_event = { id = USA.animation.1 hours = 2 }
	}
	USA_GUI_setup_topbar_array = yes
	set_variable = { US_GUI_topbar_array^1 = 1 }
	set_variable = { US_GUI_topbar_array^2 = 102 }
	set_variable = { US_GUI_topbar_array^4 = 4 }
	set_variable = { US_GUI_topbar_array^6 = 106 }
	set_variable = { USA_GUI_selected_tab = 2 }
	set_variable = { USA_GUI_selected_tab_sub = 3 }

	set_variable = { US_rdc_elec_votes_y = 63 }
	set_variable = { US_rdc_elec_votes_x = 97 }

	US_GUI_update_elec_votes = yes
	set_variable = { USA_topbar_prev_index = 6 }
	US_GUI_update_elec_bar = yes
}
USA_set_up_portrait_animation = {
	set_variable = { USA_pres_contender_rd_animation = USA_current_election_rd_candidate }
	set_variable = { USA_pres_contender_npp_animation = USA_current_election_npp_candidate }

	multiply_variable = { USA_pres_contender_rd_animation = 100 }
	multiply_variable = { USA_pres_contender_npp_animation = 100 }

	if = {
		limit = {
			check_variable = { USA_no_of_presidential_elections = 0 }
		}
		add_to_variable = { USA_pres_contender_rd_animation = USA_current_election_rd_candidate }
		add_to_variable = { USA_pres_contender_npp_animation = USA_current_election_npp_candidate }

		multiply_variable = { USA_pres_contender_rd_animation = 100 }
		multiply_variable = { USA_pres_contender_npp_animation = 100 }

		add_to_variable = { USA_pres_contender_rd_animation = USA_current_election_rd_candidate }
		add_to_variable = { USA_pres_contender_npp_animation = USA_current_election_npp_candidate }
	}

	if = {
		limit = {
			check_variable = { USA_no_of_presidential_elections = 1 }
		}
		add_to_variable = { USA_pres_contender_rd_animation = USA_current_election_rd_candidate }
		add_to_variable = { USA_pres_contender_npp_animation = USA_current_election_npp_candidate }

		multiply_variable = { USA_pres_contender_rd_animation = 100 }
		multiply_variable = { USA_pres_contender_npp_animation = 100 }

		add_to_variable = { USA_pres_contender_rd_animation = USA_pres_contender_rd_prev^1964 }
		add_to_variable = { USA_pres_contender_npp_animation = USA_pres_contender_rd_prev^1964 }
	}

	if = {
		limit = {
			check_variable = { USA_no_of_presidential_elections = 2 }
		}
		add_to_variable = { USA_pres_contender_rd_animation = USA_pres_contender_rd_prev^1964 }
		add_to_variable = { USA_pres_contender_npp_animation = USA_pres_contender_rd_prev^1964 }

		multiply_variable = { USA_pres_contender_rd_animation = 100 }
		multiply_variable = { USA_pres_contender_npp_animation = 100 }

		add_to_variable = { USA_pres_contender_rd_animation = USA_pres_contender_rd_prev^1968 }
		add_to_variable = { USA_pres_contender_npp_animation = USA_pres_contender_rd_prev^1968 }
	}
	set_variable = { USA_GUI_selected_tab_fade_animation_play = 1 }
}
US_clear_animation_vars = {
	#Otherwise it won't work#
	for_loop_effect = {
		start = 0
		end = 51
		value = idx

		clear_variable = US_GUI_animated_icon_play^idx
	}
}
US_cool_animation_setup = {
	#Got To Add Them In A Specific Order#
	###This preps and launches all the stuff for the presidential animation###
	US_add_to_array_in_specific_order = yes

	set_variable = { USA_GUI_selected_tab = 2 }
	set_variable = { USA_GUI_selected_tab_sub = 3 }
	set_country_flag = US_voting_gui_open
	clr_country_flag = USA_predictions_selected
	clr_country_flag = USA_hidden_unelected_states
	clr_country_flag = US_voting_region_window_open

	clear_array = US_state_value
	clear_array = US_state_indx
	for_loop_effect = {
		start = 0
		end = 50


		find_highest_in_array = { array = US_states_results_difference }
		add_to_array = { US_state_value = v }
		add_to_array = { US_state_indx = i }
		set_variable = { US_states_results_difference^i = 0 }
	}
}
US_grab_state_frames_and_votes_for_animation = {
	#Grabs which state voted which way for when counting up the tallies and makes sure all values are set#
	#Note Done In Alphabetical Order#
	for_loop_effect = {
		start = 0
		end = 51
		value = idx

		set_temp_variable = { temp_state = USA_states^idx }
		set_variable = { US_state_voted_which_way^idx = temp_state:US_state_colour_for_map }
		set_variable = { US_state_voted_college_votes^idx = US_state_worth^idx }
		set_variable = { rdc_votes_index^idx = temp_state:rdc_votes }
		set_variable = { npp_votes_index^idx = temp_state:npp_votes }
		set_variable = { state_pop_index^idx = temp_state:state_population_k }

		set_variable = { USA_frame_for_map_animated^idx = idx }
		multiply_variable = { USA_frame_for_map_animated^idx = 10 }
		add_to_variable = { USA_frame_for_map_animated^idx = temp_state:US_state_colour_for_map }
		multiply_variable = { USA_frame_for_map_animated^idx = 100 }
		set_variable = { USA_animation_random_var = random } #Surprise tool
		multiply_variable = { USA_animation_random_var = 99 } #needs to be 0-99
		round_variable = USA_animation_random_var
		add_to_variable = { USA_frame_for_map_animated^idx = USA_animation_random_var }
	}
	if = {
		limit = {
			629 = {
				is_owned_by = JAP
			}
		}
		set_variable = { US_state_voted_college_votes^10 = 0 }
	}
}
US_add_to_array_in_specific_order = {
	clear_array = US_states_results_difference
	for_each_scope_loop = {
		array = USA_states

		set_variable = { US_rdc_percentage = rdc_votes }
		set_variable = { US_npp_percentage = npp_votes }
		set_variable = { US_total_percentage = rdc_votes }
		add_to_variable = { US_total_percentage = npp_votes }
		divide_variable = { US_rdc_percentage = US_total_percentage }
		divide_variable = { US_npp_percentage = US_total_percentage }
		set_variable = { US_difference_gap = US_rdc_percentage }
		subtract_from_variable = { US_difference_gap = US_npp_percentage }
		if = {
			limit = {
				check_variable = { US_difference_gap < 0 }
			}
			multiply_variable = { US_difference_gap = -1 }
		}
	}
	for_loop_effect = {
		start = 0
		end = 51
		value = idx

		set_temp_variable = { temp_state = USA_states^idx }
		add_to_array = { US_states_results_difference = temp_state:US_difference_gap }
	}
}
US_animation_progress = {
	#Brings next state on or ends the animation#
	set_variable = { US_animation_state_index = US_state_indx^US_state_position }
	set_variable = { US_GUI_animated_icon_play^US_animation_state_index = 1 }
	set_variable = { US_GUI_rdc_elec_votes_prev = US_voting_rdc_electoral_college_votes }
	set_variable = { US_GUI_npp_elec_votes_prev = US_voting_npp_electoral_college_votes }
	if = {
		limit = {
			check_variable = { US_state_voted_which_way^US_animation_state_index = 1 }
		}
		add_to_variable = { US_voting_rdc_electoral_college_votes = US_state_voted_college_votes^US_animation_state_index }
	}
	if = {
		limit = {
			check_variable = { US_state_voted_which_way^US_animation_state_index = 2 }
		}
		add_to_variable = { US_voting_npp_electoral_college_votes = US_state_voted_college_votes^US_animation_state_index }
	}
	US_GUI_update_elec_college_display = yes
	set_variable = { US_total_votes_in_each_state = rdc_votes_index^US_animation_state_index }
	add_to_variable = { US_total_votes_in_each_state = npp_votes_index^US_animation_state_index }
	set_variable = { US_rdc_pct = rdc_votes_index^US_animation_state_index }
	set_variable = { US_npp_pct = npp_votes_index^US_animation_state_index }
	divide_variable = { US_rdc_pct = US_total_votes_in_each_state }
	divide_variable = { US_npp_pct = US_total_votes_in_each_state }
	set_variable = { US_rdc_real_votes = state_pop_index^US_animation_state_index }
	set_variable = { US_npp_real_votes = state_pop_index^US_animation_state_index }
	multiply_variable = { US_rdc_real_votes = 0.419 }
	multiply_variable = { US_npp_real_votes = 0.419 }
	multiply_variable = { US_rdc_real_votes = US_rdc_pct }
	multiply_variable = { US_npp_real_votes = US_npp_pct }

	add_to_variable = { USA_rd_total_votes_from_election = US_rdc_real_votes }
	add_to_variable = { USA_npp_total_votes_from_election = US_npp_real_votes }

	USA_sort_out_total_votes_display = yes
	USA = {
		country_event = { id = USA.animation.1 hours = 1 }
	}
	set_variable = { US_current_total_pres_votes_rdc = US_voting_rdc_electoral_college_votes }
	set_variable = { US_current_total_pres_votes_npp = US_voting_npp_electoral_college_votes }
	USA_display_pres_bars_animation = yes
	add_to_variable = { US_state_position = 1 }
	set_variable = { USA_GUI_selected_tab_fade_animation_play = 0 }
	set_variable = { USA_pres_contender_rd_animation = USA_current_election_rd_candidate }
	set_variable = { USA_pres_contender_npp_animation = USA_current_election_npp_candidate }
}
USA_display_pres_bars_animation = {
	set_variable = { USA_total_votes = US_current_total_pres_votes_rdc }
	add_to_variable = { USA_total_votes = US_current_total_pres_votes_npp }

	set_variable = { US_GUI_bar_frame_previous = US_voting_rdc_bar_frame }
	set_variable = { US_voting_rdc_bar_frame = US_voting_rdc_electoral_college_votes }
	divide_variable = { US_voting_rdc_bar_frame = USA_total_votes }
	multiply_variable = { US_voting_rdc_bar_frame = 100 }
	round_variable = US_voting_rdc_bar_frame
	set_variable = { US_voting_animated_bar_frame = US_voting_rdc_bar_frame }
	multiply_variable = { US_voting_animated_bar_frame = 1000 }
	if = {
		limit = {
			check_variable = { US_state_position = 0 }
		}
		add_to_variable = { US_voting_animated_bar_frame = 50 }
	}
	else = {
		add_to_variable = { US_voting_animated_bar_frame = US_GUI_bar_frame_previous }
	}
	US_GUI_update_elec_bar = yes
}
US_GUI_update_elec_college_display = {
	set_variable = { US_rdc_elec_votes_y = 63 }
	set_variable = { US_rdc_elec_votes_x = 97 }
	set_variable = { US_rdc_electoral_votes_animated = US_voting_rdc_electoral_college_votes }
	multiply_variable = { US_rdc_electoral_votes_animated = 1000 }
	add_to_variable = { US_rdc_electoral_votes_animated = US_GUI_rdc_elec_votes_prev }

	set_variable = { US_npp_electoral_votes_animated = US_voting_npp_electoral_college_votes }
	multiply_variable = { US_npp_electoral_votes_animated = 1000 }
	add_to_variable = { US_npp_electoral_votes_animated = US_GUI_npp_elec_votes_prev }
	add_to_variable = { US_npp_electoral_votes_animated = 1000000 }

	US_GUI_update_elec_votes = yes

	if = {
		limit = {
			check_variable = { US_voting_rdc_electoral_college_votes > 9 }
		}
		set_variable = { US_rdc_elec_votes_x = 117 }
	}
	if = {
		limit = {
			check_variable = { US_voting_rdc_electoral_college_votes > 99 }
		}
		set_variable = { US_rdc_elec_votes_x = 137 }
	}
}
US_GUI_update_elec_votes = {
	add_to_variable = { US_vote_elec_animation_update = 1 }
	if = {
		limit = {
			check_variable = { US_vote_elec_animation_update = 2 }
		}
		set_variable = { US_vote_elec_animation_update = 0 }
	}
}
US_GUI_update_elec_bar = {
	add_to_variable = { US_animated_bar_refresh = 1 }
	if = {
		limit = {
			check_variable = { US_animated_bar_refresh = 2 }
		}
		set_variable = { US_animated_bar_refresh = 0 }
	}
}
US_GUI_save_senate_election_result = {
	set_variable = { USA_GUI_selected_tab = 1 }
	set_variable = { USA_GUI_selected_tab_sub = 1 }
	USA_determine_senate_map_breakdown = yes
	USA_determine_senate_dots = yes
	set_variable = { US_GUI_year_to_save = USA_GUI_saving_years^USA_GUI_no_of_senate_elections }
	if = {
		limit = {
			USA = {
				owns_state = 629
			}
		}
		set_variable = { US_hawaii_status_prev^US_GUI_year_to_save = 2 }
	}
	else = {
		set_variable = { US_hawaii_status_prev^US_GUI_year_to_save = 1 }
	}

	if = {
		limit = {
			USA = {
				owns_state = 772
			}
		}
		set_variable = { US_alaska_status_prev^US_GUI_year_to_save = 2 }
	}
	else = {
		set_variable = { US_alaska_status_prev^US_GUI_year_to_save = 1 }
	}

	if = {
		limit = {
			USA = {
				owns_state = 768
			}
		}
		set_variable = { US_cali_status_prev^US_GUI_year_to_save = 2 }
	}
	else = {
		set_variable = { US_cali_status_prev^US_GUI_year_to_save = 1 }
	}

	for_each_scope_loop = {
		array = USA_states

		set_variable = { US_state_colour_for_map_prev_senate^USA.US_GUI_year_to_save = US_state_colour_for_map }
		set_variable = { historic_senator_1^USA.US_GUI_year_to_save = senator_1 }
		set_variable = { historic_senator_2^USA.US_GUI_year_to_save = senator_2 }
		set_variable = { historic_prev_senator_1^USA.US_GUI_year_to_save = prev_senator_1 }
		set_variable = { historic_prev_senator_2^USA.US_GUI_year_to_save = prev_senator_2 }
	}
	set_variable = { RD_R_SENATOR_PREV^US_GUI_year_to_save = RD_R_SENATORS }
	set_variable = { RD_D_SENATOR_PREV^US_GUI_year_to_save = RD_D_SENATORS }
	set_variable = { RDC_SENATOR_PREV^US_GUI_year_to_save = RDC_SENATORS }
	set_variable = { NPP_C_SENATOR_PREV^US_GUI_year_to_save = NPP_C_SENATORS }
	set_variable = { NPP_FR_SENATOR_PREV^US_GUI_year_to_save = NPP_FR_SENATORS }
	set_variable = { NPP_L_SENATOR_PREV^US_GUI_year_to_save = NPP_L_SENATORS }
	set_variable = { NPP_R_SENATOR_PREV^US_GUI_year_to_save = NPP_R_SENATORS }
	set_variable = { NPP_SENATOR_PREV^US_GUI_year_to_save = NPP_SENATORS }

	set_variable = { US_senators_difference_prev_rep^US_GUI_year_to_save = US_senators_difference^1 }
	set_variable = { US_senators_difference_prev_dem^US_GUI_year_to_save = US_senators_difference^2 }
	set_variable = { US_senators_difference_prev_rdc^US_GUI_year_to_save = US_senators_difference^7 }
	set_variable = { US_senators_difference_prev_left^US_GUI_year_to_save = US_senators_difference^3 }
	set_variable = { US_senators_difference_prev_centre^US_GUI_year_to_save = US_senators_difference^4 }
	set_variable = { US_senators_difference_prev_far_right^US_GUI_year_to_save = US_senators_difference^6 }
	set_variable = { US_senators_difference_prev_yockey^US_GUI_year_to_save = US_senators_difference^5 }
	set_variable = { US_senators_difference_prev_npp^US_GUI_year_to_save = US_senators_difference^8 }

	for_loop_effect = {
		start = 0
		end = 50
		value = idx

		set_variable = { USA_state_number = USA_states^idx }
		set_variable = { USA_state_number:USA_state_dot_1_status_prev^US_GUI_year_to_save = USA_state_dot_1_status^idx }
		set_variable = { USA_state_number:USA_state_dot_2_status_prev^US_GUI_year_to_save = USA_state_dot_2_status^idx }
		set_variable = { USA_state_number:US_seat_1_change_or_not_prev^US_GUI_year_to_save = US_seat_1_change_or_not^idx }
		set_variable = { USA_state_number:US_seat_2_change_or_not_prev^US_GUI_year_to_save = US_seat_2_change_or_not^idx }
	}
}
USA_save_previous_tab = {
	set_variable = { USA_prev_tab_selected = USA_GUI_selected_tab }
	set_variable = { USA_prev_tab_sub_selected = USA_GUI_selected_tab_sub }
}
USA_recall_previously_selected_tab = {
	set_variable = { USA_GUI_selected_tab = USA_prev_tab_selected } 
	set_variable = { USA_GUI_selected_tab_sub = USA_prev_tab_sub_selected } 
	if = {
		limit = {
			check_variable = { USA_GUI_selected_tab_sub = 1 }
		}
		USA_determine_senate_map_breakdown = yes
		USA_determine_senate_dots = yes
	}
	if = {
		limit = {
			check_variable = { USA_GUI_selected_tab_sub = 2 }
		}
		clr_country_flag = USA_predictions_selected
		clr_country_flag = USA_hidden_unelected_states
		USA_recall_senate_election_result = yes
	}
	if = {
		limit = {
			check_variable = { USA_GUI_selected_tab_sub = 3 }
		}
		if = {
			limit = {
				NOT = {
					has_country_flag = USA_presidential_conclusion
				}
			}
			USA_display_current_election = yes
		}
		if = {
			limit = {
				has_country_flag = USA_presidential_conclusion
			}
			USA_display_election_results = yes
		}
	}
	if = {
		limit = {
			check_variable = { USA_GUI_selected_tab_sub = 4 }
		}
		USA_voting_GUI_work_out_previous_presidential_results = yes
		US_calculate_numbers_blocker_offset = yes
		USA_GUI_determine_previous_election_map = yes
	}
	if = {
		limit = {
			check_variable = { USA_GUI_selected_tab_sub = 5 }
		}
		USA_GUI_setup_nat_pop_map = yes
	}
}
USA_recall_senate_election_result = {
	set_variable = { US_california_status = US_cali_status_prev^USA_GUI_selected_prev_year_senate }
	set_variable = { US_alaska_status = US_alaska_status_prev^USA_GUI_selected_prev_year_senate }
	set_variable = { US_hawaii_status = US_hawaii_status_prev^USA_GUI_selected_prev_year_senate }

	set_variable = { RD_R_senators_prev = RD_R_SENATOR_PREV^USA_GUI_selected_prev_year_senate }
	set_variable = { RD_D_senators_prev = RD_D_SENATOR_PREV^USA_GUI_selected_prev_year_senate }
	set_variable = { NPP_C_senators_prev = NPP_C_SENATOR_PREV^USA_GUI_selected_prev_year_senate }
	set_variable = { NPP_L_senators_prev = NPP_L_SENATOR_PREV^USA_GUI_selected_prev_year_senate }
	set_variable = { NPP_FR_senators_prev = NPP_FR_SENATOR_PREV^USA_GUI_selected_prev_year_senate }
	set_variable = { NPP_R_senators_prev = NPP_R_SENATOR_PREV^USA_GUI_selected_prev_year_senate }
	set_variable = { RDC_senators_prev = RDC_SENATOR_PREV^USA_GUI_selected_prev_year_senate }
	set_variable = { NPP_senators_prev = NPP_SENATOR_PREV^USA_GUI_selected_prev_year_senate }

	set_variable = { US_senators_difference_previous^1 = US_senators_difference_prev_rep^USA_GUI_selected_prev_year_senate }
	set_variable = { US_senators_difference_previous^2 = US_senators_difference_prev_dem^USA_GUI_selected_prev_year_senate }
	set_variable = { US_senators_difference_previous^7 = US_senators_difference_prev_rdc^USA_GUI_selected_prev_year_senate }
	set_variable = { US_senators_difference_previous^4 = US_senators_difference_prev_centre^USA_GUI_selected_prev_year_senate }
	set_variable = { US_senators_difference_previous^6 = US_senators_difference_prev_far_right^USA_GUI_selected_prev_year_senate }
	set_variable = { US_senators_difference_previous^3 = US_senators_difference_prev_left^USA_GUI_selected_prev_year_senate }
	set_variable = { US_senators_difference_previous^5 = US_senators_difference_prev_yockey^USA_GUI_selected_prev_year_senate }
	set_variable = { US_senators_difference_previous^8 = US_senators_difference_prev_npp^USA_GUI_selected_prev_year_senate }

	for_each_scope_loop = {
		array = USA_states

		set_variable = { US_state_colour_for_map = US_state_colour_for_map_prev_senate^USA.USA_GUI_selected_prev_year_senate }
		set_variable = { USA_recalled_senator_1 = historic_senator_1^USA.USA_GUI_selected_prev_year_senate }
		set_variable = { USA_recalled_senator_2 = historic_senator_2^USA.USA_GUI_selected_prev_year_senate }
		set_variable = { USA_recalled_prev_senator_1 = historic_prev_senator_1^USA.USA_GUI_selected_prev_year_senate }
		set_variable = { USA_recalled_prev_senator_2 = historic_prev_senator_2^USA.USA_GUI_selected_prev_year_senate }
		set_variable = { USA_first_party = 1 }
		set_variable = { USA_second_party = 2 }
		if = {
			limit = {
				check_variable = { US_state_colour_for_map = 1 }
			}
			set_variable = { USA_map_split = 0 }
		}
		else_if = {
			limit = {
				check_variable = { US_state_colour_for_map = 2 }
			}
			set_variable = { USA_map_split = 100 }
		}
		else = {
			set_variable = { USA_map_split = 50 }
		}
	}
	for_loop_effect = {
		start = 0
		end = 50
		value = idx

		set_variable = { USA_state_number = USA_states^idx }
		set_variable = { USA_state_dot_1_status^idx = USA_state_number:USA_state_dot_1_status_prev^USA_GUI_selected_prev_year_senate }
		set_variable = { USA_state_dot_2_status^idx = USA_state_number:USA_state_dot_2_status_prev^USA_GUI_selected_prev_year_senate }
		if = {
			limit = {
				check_variable = { USA_state_number:historic_senator_1^USA_GUI_selected_prev_year_senate < 3 }
				check_variable = { USA_state_number:historic_senator_1^USA_GUI_selected_prev_year_senate > 0 }
			}
			set_variable = { USA_senate_dot_colour_1^idx = 1 }
		}
		else_if = {
			limit = {
				check_variable = { USA_state_number:historic_senator_1^USA_GUI_selected_prev_year_senate > 2 }
			}
			set_variable = { USA_senate_dot_colour_1^idx = 2 }
		}
		else = {
			set_variable = { USA_senate_dot_colour_1^idx = 3 }
		}
		if = {
			limit = {
				check_variable = { USA_state_number:historic_senator_2^USA_GUI_selected_prev_year_senate < 3 }
				check_variable = { USA_state_number:historic_senator_2^USA_GUI_selected_prev_year_senate > 0 }
			}
			set_variable = { USA_senate_dot_colour_2^idx = 1 }
		}
		else_if = {
			limit = {
				check_variable = { USA_state_number:historic_senator_2^USA_GUI_selected_prev_year_senate > 2 }
			}
			set_variable = { USA_senate_dot_colour_2^idx = 2 }
		}
		else = {
			set_variable = { USA_senate_dot_colour_2^idx = 3 }
		}

		set_variable = { US_seat_1_change_or_not^idx = USA_state_number:US_seat_1_change_or_not_prev^USA_GUI_selected_prev_year_senate }
		set_variable = { US_seat_2_change_or_not^idx = USA_state_number:US_seat_2_change_or_not_prev^USA_GUI_selected_prev_year_senate }
	}
	USA_set_variables_for_map = yes
}
USA_debug_randomise_pops = {
	set_variable = { multiplier_1 = random }
	set_variable = { multiplier_2 = random }
	multiply_variable = { multiplier_1 = 2 }
	multiply_variable = { multiplier_2 = 2 }
	multiply_variable = { rdc_votes_sen = multiplier_1 }
	multiply_variable = { npp_votes_sen = multiplier_2 }
}
USA_debug_randomise_nomination_pops = {
	set_variable = { multiplier_1 = random }
	set_variable = { multiplier_2 = random }
	multiply_variable = { multiplier_1 = 2 }
	multiply_variable = { multiplier_2 = 2 }
	multiply_variable = { democrat_pref = multiplier_1 }
	multiply_variable = { republican_pref = multiplier_2 }
}
USA_debug_randomise_nomination_pops_npp1 = {
	set_variable = { multiplier_1 = random }
	set_variable = { multiplier_2 = random }
	multiply_variable = { multiplier_1 = 2 }
	multiply_variable = { multiplier_2 = 2 }
	multiply_variable = { progressive_pref = multiplier_1 }
	multiply_variable = { nationalist_pref = multiplier_2 }
}
USA_save_previous_regions_selected_state = {
	set_variable = { USA_previously_selected_state_in_region^US_voting_region = US_voting_selected_state }
}
USA_recall_previous_regions_selected_state = {
	set_variable = { US_voting_selected_state = USA_previously_selected_state_in_region^US_voting_region }
}
USA_display_election_results = {
	clear_variable = US_voting_uncertain_electoral_college_votes
	for_each_scope_loop = {
		array = USA_states

		clear_variable = US_state_colour_for_map
		if = {
			limit = {
				check_variable = { US_map_colour_post_election = 1 }
			}
			set_variable = { US_state_colour_for_map = 1 }
			set_variable = { USA_map_split = 0 }
		}
		else = {
			set_variable = { US_state_colour_for_map = 2 }
			set_variable = { USA_map_split = 100 }
		}
		set_variable = { USA_first_party = 1 }
		set_variable = { USA_second_party = 2 }
	}
	USA_set_variables_for_map = yes
	clear_variable = US_voting_rdc_electoral_college_votes
	clear_variable = US_voting_npp_electoral_college_votes
	set_variable = { US_voting_rdc_electoral_college_votes = RDC_electoral_votes_this_election }
	set_variable = { US_voting_npp_electoral_college_votes = NPP_electoral_votes_this_election }
	USA_display_pres_bars_current = yes

	set_variable = { USA_pres_contender_rd = USA_current_election_rd_candidate }
	set_variable = { USA_pres_contender_npp = USA_current_election_npp_candidate }

	set_variable = { USA_pres_contender_rd_animation = USA_current_election_rd_candidate }
	set_variable = { USA_pres_contender_npp_animation = USA_current_election_npp_candidate }

	set_variable = { US_voting_rdc_electoral_college_votes = RDC_electoral_votes_this_election }
	set_variable = { US_GUI_rdc_elec_votes_prev = 0 }
	set_variable = { US_voting_npp_electoral_college_votes = NPP_electoral_votes_this_election }
	set_variable = { US_GUI_npp_elec_votes_prev = 0 }
	US_GUI_update_elec_college_display = yes

	USA_display_finished_election_results = yes

	USA_GUI_update_text_animation = yes
	US_GUI_update_elec_college_display = yes
	US_GUI_update_elec_bar = yes
}
USA_display_finished_election_results = {
	set_variable = { US_voting_votes_display^2 = US_voting_actual_rd_votes_third_part }
	multiply_variable = { US_voting_votes_display^2 = 1000 }
	add_to_variable = { US_voting_votes_display^2 = US_voting_actual_npp_votes_third_part }

	set_variable = { US_voting_votes_display^1 = US_voting_actual_rd_votes_second_part }
	multiply_variable = { US_voting_votes_display^1 = 1000 }
	add_to_variable = { US_voting_votes_display^1 = US_voting_actual_rd_votes_second_part }
	subtract_from_variable = { US_voting_votes_display^1 = 1000 }

	set_variable = { US_voting_votes_display^0 = US_voting_actual_rd_votes_first_part }
	multiply_variable = { US_voting_votes_display^0 = 1000 }
	add_to_variable = { US_voting_votes_display^0 = US_voting_actual_rd_votes_first_part }

	set_variable = { US_voting_votes_display^5 = US_voting_actual_npp_votes_third_part }
	multiply_variable = { US_voting_votes_display^5 = 1000 }
	add_to_variable = { US_voting_votes_display^5 = US_voting_actual_npp_votes_third_part }

	set_variable = { US_voting_votes_display^4 = US_voting_actual_npp_votes_second_part }
	multiply_variable = { US_voting_votes_display^4 = 1000 }
	add_to_variable = { US_voting_votes_display^4 = US_voting_actual_npp_votes_second_part }
	subtract_from_variable = { US_voting_votes_display^4 = 1000 }

	set_variable = { US_voting_votes_display^3 = US_voting_actual_npp_votes_first_part }
	multiply_variable = { US_voting_votes_display^3 = 1000 }
	add_to_variable = { US_voting_votes_display^3 = US_voting_actual_npp_votes_first_part }
}
USA_clear_campaiging_vars = {
	clear_variable = 1:US_voting_campaign_countdown
	clear_variable = 2:US_voting_campaign_countdown
	clear_variable = 3:US_voting_campaign_countdown
	clear_variable = 4:US_voting_campaign_countdown
	clear_variable = 5:US_voting_campaign_countdown
	clear_variable = 6:US_voting_campaign_countdown
	clear_variable = 7:US_voting_campaign_countdown
	clear_variable = 8:US_voting_campaign_countdown
	clear_variable = 9:US_voting_campaign_countdown

	clear_variable = 1:US_voting_campaign_timer
	clear_variable = 2:US_voting_campaign_timer
	clear_variable = 3:US_voting_campaign_timer
	clear_variable = 4:US_voting_campaign_timer
	clear_variable = 5:US_voting_campaign_timer
	clear_variable = 6:US_voting_campaign_timer
	clear_variable = 7:US_voting_campaign_timer
	clear_variable = 8:US_voting_campaign_timer
	clear_variable = 9:US_voting_campaign_timer
}
US_add_hawaii_to_senate_gui = {
	US_GUI_sort_out_hawaii_senate_class = yes

	if = {
		limit = {
			check_variable = { USA_GUI_selected_tab_sub = 1 }
		}
		USA_determine_senate_map_breakdown_prediction = yes
	}
	USA_GUI_total_up_senators = yes
}
US_GUI_sort_out_hawaii_senate_class = {
	#Set's it's class to that of whichever class was elected most recently#
	if = {
		limit = {
			OR = {
				check_variable = { USA_GUI_no_of_senate_elections = 0 }
				check_variable = { USA_GUI_no_of_senate_elections = 3 }
			}
		}
		set_variable = { USA_GUI_hawaii_election_class = 2 }
	}
	if = {
		limit = {
			OR = {
				check_variable = { USA_GUI_no_of_senate_elections = 1 }
				check_variable = { USA_GUI_no_of_senate_elections = 4 }
			}
		}
		set_variable = { USA_GUI_hawaii_election_class = 3 }
	}
	if = {
		limit = {
			OR = {
				check_variable = { USA_GUI_no_of_senate_elections = 2 }
				check_variable = { USA_GUI_no_of_senate_elections = 5 }
			}
		}
		set_variable = { USA_GUI_hawaii_election_class = 1 }
	}
}
USA_prepare_predictions_for_rubber_band = {
	set_variable = { rep_senators_predicted_value = RD_R_senators }
	set_variable = { dem_senators_predicted_value = RD_D_senators }
	set_variable = { com_senators_predicted_value = NPP_L_senators }
	set_variable = { pro_senators_predicted_value = NPP_C_senators }
	set_variable = { anv_senators_predicted_value = NPP_R_senators }
	set_variable = { nat_senators_predicted_value = NPP_FR_senators }
}
USA_x_y_setup_outlines = {
	clear_array = state_outline_main_x
	clear_array = state_outline_main_y

	add_to_array = { state_outline_main_x = 581 }
	add_to_array = { state_outline_main_y = 443 }

	add_to_array = { state_outline_main_x = 581 }
	add_to_array = { state_outline_main_y = 443 }

	add_to_array = { state_outline_main_x = 581 }
	add_to_array = { state_outline_main_y = 443 }

	add_to_array = { state_outline_main_x = 223 }
	add_to_array = { state_outline_main_y = 187 }

	add_to_array = { state_outline_main_x = 854 }
	add_to_array = { state_outline_main_y = 195 }

	add_to_array = { state_outline_main_x = 751 }
	add_to_array = { state_outline_main_y = 252 }

	add_to_array = { state_outline_main_x = 581 }
	add_to_array = { state_outline_main_y = 443 }

	add_to_array = { state_outline_main_x = 581 }
	add_to_array = { state_outline_main_y = 443 }

	add_to_array = { state_outline_main_x = 223 }
	add_to_array = { state_outline_main_y = 187 }

	add_to_array = { state_outline_main_x = 600 }
	add_to_array = { state_outline_main_y = 239 }

	add_to_array = { state_outline_main_x = 600 }
	add_to_array = { state_outline_main_y = 239 }

	add_to_array = { state_outline_main_x = 450 }
	add_to_array = { state_outline_main_y = 209 }

	add_to_array = { state_outline_main_x = 450 }
	add_to_array = { state_outline_main_y = 209 }

	add_to_array = { state_outline_main_x = 647 }
	add_to_array = { state_outline_main_y = 370 }

	add_to_array = { state_outline_main_x = 581 }
	add_to_array = { state_outline_main_y = 443 }

	add_to_array = { state_outline_main_x = 854 }
	add_to_array = { state_outline_main_y = 195 }

	add_to_array = { state_outline_main_x = 751 }
	add_to_array = { state_outline_main_y = 252 }

	add_to_array = { state_outline_main_x = 854 }
	add_to_array = { state_outline_main_y = 195 }

	add_to_array = { state_outline_main_x = 600 }
	add_to_array = { state_outline_main_y = 239 }

	add_to_array = { state_outline_main_x = 450 }
	add_to_array = { state_outline_main_y = 209 }

	add_to_array = { state_outline_main_x = 581 }
	add_to_array = { state_outline_main_y = 443 }

	add_to_array = { state_outline_main_x = 450 }
	add_to_array = { state_outline_main_y = 209 }

	add_to_array = { state_outline_main_x = 223 }
	add_to_array = { state_outline_main_y = 187 }

	add_to_array = { state_outline_main_x = 450 }
	add_to_array = { state_outline_main_y = 209 }

	add_to_array = { state_outline_main_x = 223 }
	add_to_array = { state_outline_main_y = 187 }

	add_to_array = { state_outline_main_x = 854 }
	add_to_array = { state_outline_main_y = 195 }

	add_to_array = { state_outline_main_x = 751 }
	add_to_array = { state_outline_main_y = 252 }

	add_to_array = { state_outline_main_x = 751 }
	add_to_array = { state_outline_main_y = 252 }

	add_to_array = { state_outline_main_x = 647 }
	add_to_array = { state_outline_main_y = 370 }

	add_to_array = { state_outline_main_x = 450 }
	add_to_array = { state_outline_main_y = 209 }

	add_to_array = { state_outline_main_x = 600 }
	add_to_array = { state_outline_main_y = 239 }

	add_to_array = { state_outline_main_x = 751 }
	add_to_array = { state_outline_main_y = 252 }

	add_to_array = { state_outline_main_x = 854 }
	add_to_array = { state_outline_main_y = 195 }

	add_to_array = { state_outline_main_x = 581 }
	add_to_array = { state_outline_main_y = 443 }

	add_to_array = { state_outline_main_x = 450 }
	add_to_array = { state_outline_main_y = 209 }

	add_to_array = { state_outline_main_x = 647 }
	add_to_array = { state_outline_main_y = 370 }

	add_to_array = { state_outline_main_x = 223 }
	add_to_array = { state_outline_main_y = 187 }

	add_to_array = { state_outline_main_x = 854 }
	add_to_array = { state_outline_main_y = 195 }

	add_to_array = { state_outline_main_x = 647 }
	add_to_array = { state_outline_main_y = 370 }

	add_to_array = { state_outline_main_x = 751 }
	add_to_array = { state_outline_main_y = 252 }

	add_to_array = { state_outline_main_x = 600 }
	add_to_array = { state_outline_main_y = 239 }

	add_to_array = { state_outline_main_x = 223 }
	add_to_array = { state_outline_main_y = 187 }

	add_to_array = { state_outline_main_x = 751 }
	add_to_array = { state_outline_main_y = 252 }

	clear_array = state_outline_secondary_x
	clear_array = state_outline_secondary_y

	add_to_array = { state_outline_secondary_x = 163 }
	add_to_array = { state_outline_secondary_y = 169 }

	add_to_array = { state_outline_secondary_x = 163 }
	add_to_array = { state_outline_secondary_y = 169 }

	add_to_array = { state_outline_secondary_x = 272 }
	add_to_array = { state_outline_secondary_y = 411 }

	add_to_array = { state_outline_secondary_x = 163 }
	add_to_array = { state_outline_secondary_y = 169 }

	add_to_array = { state_outline_secondary_x = 163 }
	add_to_array = { state_outline_secondary_y = 169 }

	add_to_array = { state_outline_secondary_x = 272 }
	add_to_array = { state_outline_secondary_y = 411 }

	add_to_array = { state_outline_secondary_x = 272 }
	add_to_array = { state_outline_secondary_y = 411 }

	add_to_array = { state_outline_secondary_x = 163 }
	add_to_array = { state_outline_secondary_y = 169 }

	add_to_array = { state_outline_secondary_x = 272 }
	add_to_array = { state_outline_secondary_y = 411 }

	add_to_array = { state_outline_secondary_x = 163 }
	add_to_array = { state_outline_secondary_y = 169 }

	USA_x_y_setup_big = yes
}
USA_x_y_setup_big = {
	clear_array = USA_states_x_array_big
	clear_array = USA_states_y_array_big

	add_to_array = { USA_states_x_array_big = 1016 }
	add_to_array = { USA_states_y_array_big = 425 }

	add_to_array = { USA_states_x_array_big = 886 }
	add_to_array = { USA_states_y_array_big = 383 }

	add_to_array = { USA_states_x_array_big = 575 }
	add_to_array = { USA_states_y_array_big = 255 }

	add_to_array = { USA_states_x_array_big = 1337 }
	add_to_array = { USA_states_y_array_big = 227 }

	add_to_array = { USA_states_x_array_big = 1292 }
	add_to_array = { USA_states_y_array_big = 290 }

	add_to_array = { USA_states_x_array_big = 1036 }
	add_to_array = { USA_states_y_array_big = 533 }

	add_to_array = { USA_states_x_array_big = 1078 }
	add_to_array = { USA_states_y_array_big = 427 }

	add_to_array = { USA_states_x_array_big = 398 }
	add_to_array = { USA_states_y_array_big = 18 }

	add_to_array = { USA_states_x_array_big = 951 }
	add_to_array = { USA_states_y_array_big = 214 }

	add_to_array = { USA_states_x_array_big = 1026 }
	add_to_array = { USA_states_y_array_big = 235 }

	add_to_array = { USA_states_x_array_big = 841 }
	add_to_array = { USA_states_y_array_big = 183 }

	add_to_array = { USA_states_x_array_big = 725 }
	add_to_array = { USA_states_y_array_big = 282 }

	add_to_array = { USA_states_x_array_big = 997 }
	add_to_array = { USA_states_y_array_big = 311 }

	add_to_array = { USA_states_x_array_big = 898 }
	add_to_array = { USA_states_y_array_big = 480 }

	add_to_array = { USA_states_x_array_big = 1392 }
	add_to_array = { USA_states_y_array_big = 66 }

	add_to_array = { USA_states_x_array_big = 1211 }
	add_to_array = { USA_states_y_array_big = 293 }

	add_to_array = { USA_states_x_array_big = 1340 }
	add_to_array = { USA_states_y_array_big = 202 }

	add_to_array = { USA_states_x_array_big = 979 }
	add_to_array = { USA_states_y_array_big = 67 }

	add_to_array = { USA_states_x_array_big = 831 }
	add_to_array = { USA_states_y_array_big = 6 }

	add_to_array = { USA_states_x_array_big = 951 }
	add_to_array = { USA_states_y_array_big = 425 }

	add_to_array = { USA_states_x_array_big = 861 }
	add_to_array = { USA_states_y_array_big = 269 }

	add_to_array = { USA_states_x_array_big = 423 }
	add_to_array = { USA_states_y_array_big = 18 }

	add_to_array = { USA_states_x_array_big = 681 }
	add_to_array = { USA_states_y_array_big = 197 }

	add_to_array = { USA_states_x_array_big = 335 }
	add_to_array = { USA_states_y_array_big = 227 }

	add_to_array = { USA_states_x_array_big = 1360 }
	add_to_array = { USA_states_y_array_big = 128 }

	add_to_array = { USA_states_x_array_big = 1298 }
	add_to_array = { USA_states_y_array_big = 246 }

	add_to_array = { USA_states_x_array_big = 1204 }
	add_to_array = { USA_states_y_array_big = 137 }

	add_to_array = { USA_states_x_array_big = 1107 }
	add_to_array = { USA_states_y_array_big = 381 }

	add_to_array = { USA_states_x_array_big = 683 }
	add_to_array = { USA_states_y_array_big = 17 }

	add_to_array = { USA_states_x_array_big = 1096 }
	add_to_array = { USA_states_y_array_big = 226 }

	add_to_array = { USA_states_x_array_big = 1190 }
	add_to_array = { USA_states_y_array_big = 218 }

	add_to_array = { USA_states_x_array_big = 1375 }
	add_to_array = { USA_states_y_array_big = 228 }

	add_to_array = { USA_states_x_array_big = 1128 }
	add_to_array = { USA_states_y_array_big = 419 }

	add_to_array = { USA_states_x_array_big = 681 }
	add_to_array = { USA_states_y_array_big = 110 }

	add_to_array = { USA_states_x_array_big = 981 }
	add_to_array = { USA_states_y_array_big = 381 }

	add_to_array = { USA_states_x_array_big = 466 }
	add_to_array = { USA_states_y_array_big = 226 }

	add_to_array = { USA_states_x_array_big = 1344 }
	add_to_array = { USA_states_y_array_big = 139 }

	add_to_array = { USA_states_x_array_big = 1121 }
	add_to_array = { USA_states_y_array_big = 304 }

	add_to_array = { USA_states_x_array_big = 1144 }
	add_to_array = { USA_states_y_array_big = 268 }

	add_to_array = { USA_states_x_array_big = 922 }
	add_to_array = { USA_states_y_array_big = 83 }

	add_to_array = { USA_states_x_array_big = 530 }
	add_to_array = { USA_states_y_array_big = 142 }######################

	add_to_array = { USA_states_x_array_big = 1253 }
	add_to_array = { USA_states_y_array_big = 304 }

	clear_array = USA_states_x_array_big_secondary
	clear_array = USA_states_y_array_big_secondary

	add_to_array = { USA_states_x_array_big_secondary = 1 }
	add_to_array = { USA_states_y_array_big_secondary = 258 }

	add_to_array = { USA_states_x_array_big_secondary = 451 }
	add_to_array = { USA_states_y_array_big_secondary = 369 }

	add_to_array = { USA_states_x_array_big_secondary = 243 }
	add_to_array = { USA_states_y_array_big_secondary = 228 }

	add_to_array = { USA_states_x_array_big_secondary = 42 }
	add_to_array = { USA_states_y_array_big_secondary = 117 }

	add_to_array = { USA_states_x_array_big_secondary = 573 }
	add_to_array = { USA_states_y_array_big_secondary = 369 }

	add_to_array = { USA_states_x_array_big_secondary = 703 }
	add_to_array = { USA_states_y_array_big_secondary = 371 }

	add_to_array = { USA_states_x_array_big_secondary = 240 }
	add_to_array = { USA_states_y_array_big_secondary = 100 }

	add_to_array = { USA_states_x_array_big_secondary = 629 }
	add_to_array = { USA_states_y_array_big_secondary = 386 }

	add_to_array = { USA_states_x_array_big_secondary = 236 }
	add_to_array = { USA_states_y_array_big_secondary = 17 }

	clear_array = USA_states_x_array_area_outlines
	clear_array = USA_states_y_array_area_outlines

	add_to_array = { USA_states_x_array_area_outlines = 0 }
	add_to_array = { USA_states_y_array_area_outlines = 0 }

	add_to_array = { USA_states_x_array_area_outlines = 1337 }
	add_to_array = { USA_states_y_array_area_outlines = 63 }

	add_to_array = { USA_states_x_array_area_outlines = 1143 }
	add_to_array = { USA_states_y_array_area_outlines = 134 }

	add_to_array = { USA_states_x_array_area_outlines = 885 }
	add_to_array = { USA_states_y_array_area_outlines = 382 }

	add_to_array = { USA_states_x_array_area_outlines = 979 }
	add_to_array = { USA_states_y_array_area_outlines = 304 }

	add_to_array = { USA_states_x_array_area_outlines = 921 }
	add_to_array = { USA_states_y_array_area_outlines = 64 }

	add_to_array = { USA_states_x_array_area_outlines = 681 }
	add_to_array = { USA_states_y_array_area_outlines = 4 }

	add_to_array = { USA_states_x_array_area_outlines = 446 }
	add_to_array = { USA_states_y_array_area_outlines = 367 }

	add_to_array = { USA_states_x_array_area_outlines = 333 }
	add_to_array = { USA_states_y_array_area_outlines = 16 }

	add_to_array = { USA_states_x_array_area_outlines = -1 }
	add_to_array = { USA_states_y_array_area_outlines = 16 }
}
USA_GUI_delete_map_outlines = {
	set_country_flag = no_state_outlines
	clear_array = USA_states_outline_array
	for_loop_effect = {
		start = 0
		end = 53
		value = idx

		set_variable = { USA_number_to_add = idx }
		add_to_array = { USA_states_outline_array = USA_number_to_add } 
		add_to_variable = { USA_states_outline_array^idx = 1000 }
	}
}
USA_GUI_add_map_outlines_back = {
	clr_country_flag = no_state_outlines
	clear_array = USA_states_outline_array
	for_loop_effect = {
		start = 0
		end = 53
		value = idx

		set_variable = { USA_number_to_add = idx }
		add_to_array = { USA_states_outline_array = USA_number_to_add } 
	}
}
USA_GUI_fetch_real_index_numbers = {
	clear_array = USA_GUI_real_index_main
	add_to_array = { USA_GUI_real_index_main = 0 }
	add_to_array = { USA_GUI_real_index_main = 3 }
	add_to_array = { USA_GUI_real_index_main = 5 }
	add_to_array = { USA_GUI_real_index_main = 6 }
	add_to_array = { USA_GUI_real_index_main = 7 }
	add_to_array = { USA_GUI_real_index_main = 8 }
	add_to_array = { USA_GUI_real_index_main = 9 }
	add_to_array = { USA_GUI_real_index_main = 11 }
	add_to_array = { USA_GUI_real_index_main = 12 }
	add_to_array = { USA_GUI_real_index_main = 13 }
	add_to_array = { USA_GUI_real_index_main = 14 }
	add_to_array = { USA_GUI_real_index_main = 15 }
	add_to_array = { USA_GUI_real_index_main = 16 }
	add_to_array = { USA_GUI_real_index_main = 17 }
	add_to_array = { USA_GUI_real_index_main = 18 }
	add_to_array = { USA_GUI_real_index_main = 19 }
	add_to_array = { USA_GUI_real_index_main = 20 }
	add_to_array = { USA_GUI_real_index_main = 21 }
	add_to_array = { USA_GUI_real_index_main = 22 }
	add_to_array = { USA_GUI_real_index_main = 23 }
	add_to_array = { USA_GUI_real_index_main = 24 }
	add_to_array = { USA_GUI_real_index_main = 25 }
	add_to_array = { USA_GUI_real_index_main = 26 }
	add_to_array = { USA_GUI_real_index_main = 27 }
	add_to_array = { USA_GUI_real_index_main = 28 }
	add_to_array = { USA_GUI_real_index_main = 29 }
	add_to_array = { USA_GUI_real_index_main = 31 }
	add_to_array = { USA_GUI_real_index_main = 32 }
	add_to_array = { USA_GUI_real_index_main = 33 }
	add_to_array = { USA_GUI_real_index_main = 34 }
	add_to_array = { USA_GUI_real_index_main = 37 }
	add_to_array = { USA_GUI_real_index_main = 38 }
	add_to_array = { USA_GUI_real_index_main = 39 }
	add_to_array = { USA_GUI_real_index_main = 40 }
	add_to_array = { USA_GUI_real_index_main = 41 }
	add_to_array = { USA_GUI_real_index_main = 43 }
	add_to_array = { USA_GUI_real_index_main = 44 }
	add_to_array = { USA_GUI_real_index_main = 45 }
	add_to_array = { USA_GUI_real_index_main = 47 }
	add_to_array = { USA_GUI_real_index_main = 48 }
	add_to_array = { USA_GUI_real_index_main = 49 }
	add_to_array = { USA_GUI_real_index_main = 50 }

	clear_array = USA_GUI_real_index_secondary
	add_to_array = { USA_GUI_real_index_secondary = 1 }
	add_to_array = { USA_GUI_real_index_secondary = 2 }
	add_to_array = { USA_GUI_real_index_secondary = 4 }
	add_to_array = { USA_GUI_real_index_secondary = 10 }
	add_to_array = { USA_GUI_real_index_secondary = 30 }
	add_to_array = { USA_GUI_real_index_secondary = 35 }
	add_to_array = { USA_GUI_real_index_secondary = 36 }
	add_to_array = { USA_GUI_real_index_secondary = 42 }
	add_to_array = { USA_GUI_real_index_secondary = 46 }

	clear_array = USA_GUI_real_index_main_area
	add_to_array = { USA_GUI_real_index_main_area = 3 }
	add_to_array = { USA_GUI_real_index_main_area = 3 }
	add_to_array = { USA_GUI_real_index_main_area = 8 }
	add_to_array = { USA_GUI_real_index_main_area = 1 }
	add_to_array = { USA_GUI_real_index_main_area = 2 }
	add_to_array = { USA_GUI_real_index_main_area = 3 }
	add_to_array = { USA_GUI_real_index_main_area = 3 }
	add_to_array = { USA_GUI_real_index_main_area = 8 }
	add_to_array = { USA_GUI_real_index_main_area = 5 }
	add_to_array = { USA_GUI_real_index_main_area = 5 }
	add_to_array = { USA_GUI_real_index_main_area = 6 }
	add_to_array = { USA_GUI_real_index_main_area = 6 }
	add_to_array = { USA_GUI_real_index_main_area = 4 }
	add_to_array = { USA_GUI_real_index_main_area = 3 }
	add_to_array = { USA_GUI_real_index_main_area = 1 }
	add_to_array = { USA_GUI_real_index_main_area = 2 }
	add_to_array = { USA_GUI_real_index_main_area = 1 }
	add_to_array = { USA_GUI_real_index_main_area = 5 }
	add_to_array = { USA_GUI_real_index_main_area = 6 }
	add_to_array = { USA_GUI_real_index_main_area = 3 }
	add_to_array = { USA_GUI_real_index_main_area = 6 }
	add_to_array = { USA_GUI_real_index_main_area = 8 }
	add_to_array = { USA_GUI_real_index_main_area = 6 }
	add_to_array = { USA_GUI_real_index_main_area = 8 }
	add_to_array = { USA_GUI_real_index_main_area = 1 }
	add_to_array = { USA_GUI_real_index_main_area = 2 }
	add_to_array = { USA_GUI_real_index_main_area = 2 }
	add_to_array = { USA_GUI_real_index_main_area = 4 }
	add_to_array = { USA_GUI_real_index_main_area = 6 }
	add_to_array = { USA_GUI_real_index_main_area = 5 }
	add_to_array = { USA_GUI_real_index_main_area = 2 }
	add_to_array = { USA_GUI_real_index_main_area = 1 }
	add_to_array = { USA_GUI_real_index_main_area = 3 }
	add_to_array = { USA_GUI_real_index_main_area = 6 }
	add_to_array = { USA_GUI_real_index_main_area = 4 }
	add_to_array = { USA_GUI_real_index_main_area = 8 }
	add_to_array = { USA_GUI_real_index_main_area = 1 }
	add_to_array = { USA_GUI_real_index_main_area = 4 }
	add_to_array = { USA_GUI_real_index_main_area = 2 }
	add_to_array = { USA_GUI_real_index_main_area = 5 }
	add_to_array = { USA_GUI_real_index_main_area = 8 }
	add_to_array = { USA_GUI_real_index_main_area = 2 }

	clear_array = USA_GUI_real_index_secondary_area
	add_to_array = { USA_GUI_real_index_secondary_area = 9 }
	add_to_array = { USA_GUI_real_index_secondary_area = 7 }
	add_to_array = { USA_GUI_real_index_secondary_area = 9 }
	add_to_array = { USA_GUI_real_index_secondary_area = 9 }
	add_to_array = { USA_GUI_real_index_secondary_area = 7 }
	add_to_array = { USA_GUI_real_index_secondary_area = 7 }
	add_to_array = { USA_GUI_real_index_secondary_area = 9 }
	add_to_array = { USA_GUI_real_index_secondary_area = 7 }
	add_to_array = { USA_GUI_real_index_secondary_area = 9 }
}
USA_tab_1_click_effect = {
	USA_GUI_previous_election_display_shenanigans = yes
	USA_save_prev_date = yes
	set_variable = { USA_GUI_selected_tab = 1 }
	set_variable = { USA_GUI_selected_tab_sub = 1 }
	USA_determine_senate_map_breakdown = yes
	USA_determine_senate_dots = yes
	USA_GUI_total_up_senators = yes
	remove_from_array = { USA_states_dots = 50 }
	USA_GUI_add_map_outlines_back = yes
}
USA_tab_2_click_effect = {
	set_variable = { USA_GUI_selected_tab = 2 }
	set_variable = { USA_GUI_selected_tab_sub = 4 }
	set_variable = { USA_GUI_selected_prev_year = USA_prev_selected_year }
	USA_voting_GUI_work_out_previous_presidential_results = yes
	clr_country_flag = USA_predictions_selected
	clr_country_flag = USA_hidden_unelected_states
	USA_GUI_determine_previous_election_map = yes
	US_calculate_numbers_blocker_offset = yes
	USA_GUI_total_up_senators = yes
	add_to_array = { USA_states_dots = 50 }
	USA_GUI_delete_map_outlines = yes
}
USA_tab_3_click_effect = {
	USA_GUI_previous_election_display_shenanigans = yes
	USA_save_prev_date = yes
	set_variable = { USA_GUI_selected_tab = 3 }
	set_variable = { USA_GUI_selected_tab_sub = 5 }
	USA_GUI_setup_nat_pop_map = yes
	clr_country_flag = USA_predictions_selected
	clr_country_flag = USA_hidden_unelected_states
	USA_GUI_total_up_senators = yes
	remove_from_array = { USA_states_dots = 50 }
	USA_GUI_delete_map_outlines = yes
}
USA_tab_1_1_click_effect = {
	set_variable = { USA_GUI_selected_tab_sub = 1 }
	USA_determine_senate_map_breakdown = yes
	USA_determine_senate_dots = yes
	USA_GUI_total_up_senators = yes
	USA_GUI_add_map_outlines_back = yes
}
USA_tab_1_2_click_effect = {
	set_variable = { USA_GUI_selected_tab_sub = 2 }
	clr_country_flag = USA_predictions_selected
	clr_country_flag = USA_hidden_unelected_states
	USA_recall_senate_election_result = yes
	USA_GUI_total_up_senators = yes
	USA_GUI_delete_map_outlines = yes
}
USA_tab_2_1_click_effect = {
	USA_GUI_previous_election_display_shenanigans = yes
	USA_save_prev_date = yes
	set_variable = { USA_GUI_selected_tab_sub = 3 }
	if = {
		limit = {
			NOT = {
				has_country_flag = USA_presidential_conclusion
			}
		}
		USA_display_current_election = yes
	}
	if = {
		limit = {
			has_country_flag = USA_presidential_conclusion
		}
		USA_display_election_results = yes
	}
	USA_GUI_total_up_senators = yes
	USA_GUI_add_map_outlines_back = yes
	if = {
		limit = {
			USA = { owns_state = 629 }
		}
		set_variable = { US_GUI_victory_lines_frame = 5 }
	}
	else = {
		set_variable = { US_GUI_victory_lines_frame = 4 }
	}
	US_GUI_update_elec_bar = yes
}
USA_tab_2_2_click_effect = {
	USA_GUI_previous_election_display_shenanigans = yes
	set_variable = { USA_GUI_selected_tab_sub = 4 }
	set_variable = { USA_GUI_selected_prev_year = USA_prev_selected_year }
	USA_voting_GUI_work_out_previous_presidential_results = yes
	US_calculate_numbers_blocker_offset = yes
	USA_GUI_determine_previous_election_map = yes
	USA_GUI_total_up_senators = yes
	USA_GUI_delete_map_outlines = yes
}
USA_tab_3_1_click_effect = {
	set_variable = { USA_GUI_selected_tab_sub = 5 }
	USA_GUI_setup_nat_pop_map = yes
	every_owned_state = {
		limit = { has_state_flag = US_election_state }
		USA_party_populairty_in_every_state = yes
	}
	USA_GUI_total_up_senators = yes
	USA_GUI_delete_map_outlines = yes
}
USA_tab_3_2_click_effect = {
	set_variable = { USA_GUI_selected_tab_sub = 6 }
	USA_GUI_setup_rdc_pop_map = yes
	every_owned_state = {
		limit = { has_state_flag = US_election_state }
		USA_party_populairty_in_every_state = yes
	}
	USA_GUI_total_up_senators = yes
	USA_GUI_delete_map_outlines = yes
}
USA_tab_3_3_click_effect = {
	set_variable = { USA_GUI_selected_tab_sub = 7 }
	USA_GUI_setup_npp_pop_map = yes
	every_owned_state = {
		limit = { has_state_flag = US_election_state }
		USA_party_populairty_in_every_state = yes
	}
	USA_GUI_total_up_senators = yes
	USA_GUI_delete_map_outlines = yes
}
USA_GUI_update_numbers_position = {
	USA_GUI_set_actual_votes_position = yes
	clear_variable = US_actual_vote_numbers_x_adjust_rdc
	clear_variable = US_actual_vote_numbers_x_adjust_npp
	if = {
		limit = {
			check_variable = { US_voting_votes_display_actual^0 < 10 }
		}
		set_variable = { US_actual_vote_numbers_x_adjust_rdc = 11 }
		if = {
			limit = {
				check_variable = { US_voting_votes_display_actual^0 < 1 }
			}
			add_to_variable = { US_actual_vote_numbers_x_adjust_rdc = 14 }
			if = {
				limit = {
					check_variable = { US_voting_votes_display_actual^1 < 100 }
				}
				add_to_variable = { US_actual_vote_numbers_x_adjust_rdc = 11 }
				if = {
					limit = {
						check_variable = { US_voting_votes_display_actual^1 < 10 }
					}
					add_to_variable = { US_actual_vote_numbers_x_adjust_rdc = 11 }
				}
			}
		}
	}
	if = {
		limit = {
			check_variable = { US_voting_votes_display_actual^0 = 0 }
			check_variable = { US_voting_votes_display_actual^1 = 0 }
			check_variable = { US_voting_votes_display_actual^2 = 0 }
		}
		set_variable = { US_actual_vote_numbers_x_adjust_rdc = 77 }
	}
	if = {
		limit = {
			check_variable = { US_voting_votes_display_actual^3 < 10 }
		}
		set_variable = { US_actual_vote_numbers_x_adjust_npp = 11 }
		if = {
			limit = {
				check_variable = { US_voting_votes_display_actual^3 < 1 }
			}
			add_to_variable = { US_actual_vote_numbers_x_adjust_npp = 14 }
			if = {
				limit = {
					check_variable = { US_voting_votes_display_actual^4 < 100 }
				}
				add_to_variable = { US_actual_vote_numbers_x_adjust_npp = 11 }
				if = {
					limit = {
						check_variable = { US_voting_votes_display_actual^4 < 10 }
					}
					add_to_variable = { US_actual_vote_numbers_x_adjust_npp = 11 }
				}
			}
		}
	}
	if = {
		limit = {
			check_variable = { US_voting_votes_display_actual^3 = 0 }
			check_variable = { US_voting_votes_display_actual^4 = 0 }
			check_variable = { US_voting_votes_display_actual^5 = 0 }
		}
		set_variable = { US_actual_vote_numbers_x_adjust_npp = 77 }
	}
	for_loop_effect = {
		start = 0
		end = 6
		value = idx

		set_variable = { index_check = idx }
		if = {
			limit = {
				check_variable = { index_check < 3 }
			}
			subtract_from_variable = { US_GUI_actual_votes_x^idx = US_actual_vote_numbers_x_adjust_rdc }
		}
		else = {
			subtract_from_variable = { US_GUI_actual_votes_x^idx = US_actual_vote_numbers_x_adjust_npp }
		}
	}
}
USA_GUI_update_text_animation = {
	add_to_variable = { US_vote_count_animation_update = 1 }
	if = {
		limit = {
			check_variable = { US_vote_count_animation_update = 2 }
		}
		set_variable = { US_vote_count_animation_update = 0 }
	}
}
USA_sort_out_total_votes_display = {
	set_variable = { US_voting_actual_rd_votes_third_part_prev = US_voting_actual_rd_votes_third_part }
	set_variable = { US_voting_actual_rd_votes_second_part_prev = US_voting_actual_rd_votes_second_part }
	set_variable = { US_voting_actual_rd_votes_first_part_prev = US_voting_actual_rd_votes_first_part }

	set_variable = { US_voting_actual_npp_votes_third_part_prev = US_voting_actual_npp_votes_third_part }
	set_variable = { US_voting_actual_npp_votes_second_part_prev = US_voting_actual_npp_votes_second_part }
	set_variable = { US_voting_actual_npp_votes_first_part_prev = US_voting_actual_npp_votes_first_part }

	set_variable = { US_voting_actual_rd_votes_third_part = USA_rd_total_votes_from_election }
	round_variable = US_voting_actual_rd_votes_third_part
	subtract_from_variable = { US_voting_actual_rd_votes_third_part = USA_rd_total_votes_from_election }
	if = {
		limit = {
			check_variable = { US_voting_actual_rd_votes_third_part > 0 }
		}
		subtract_from_variable = { US_voting_actual_rd_votes_third_part = 1 }
	}
	multiply_variable = { US_voting_actual_rd_votes_third_part = -1 }
	#######
	set_variable = { US_voting_actual_rd_votes_second_part = USA_rd_total_votes_from_election }
	subtract_from_variable = { US_voting_actual_rd_votes_second_part = US_voting_actual_rd_votes_third_part }
	divide_variable = { US_voting_actual_rd_votes_second_part = 1000 }
	set_variable = { US_subtracting_var = US_voting_actual_rd_votes_second_part }
	round_variable = US_voting_actual_rd_votes_second_part
	subtract_from_variable = { US_voting_actual_rd_votes_second_part = US_subtracting_var }
	if = {
		limit = {
			check_variable = { US_voting_actual_rd_votes_second_part > 0 }
		}
		subtract_from_variable = { US_voting_actual_rd_votes_second_part = 1 }
	}
	multiply_variable = { US_voting_actual_rd_votes_second_part = -1 }
	########
	set_variable = { US_voting_actual_rd_votes_first_part = USA_rd_total_votes_from_election }
	multiply_variable = { US_voting_actual_rd_votes_second_part = 1000 }
	subtract_from_variable = { US_voting_actual_rd_votes_first_part = US_voting_actual_rd_votes_second_part }
	subtract_from_variable = { US_voting_actual_rd_votes_first_part = US_voting_actual_rd_votes_third_part }
	multiply_variable = { US_voting_actual_rd_votes_third_part = 1000 }
	divide_variable = { US_voting_actual_rd_votes_first_part = 1000 }
	####################################################################################################
	set_variable = { US_voting_actual_npp_votes_third_part = USA_npp_total_votes_from_election }
	round_variable = US_voting_actual_npp_votes_third_part
	subtract_from_variable = { US_voting_actual_npp_votes_third_part = USA_npp_total_votes_from_election }
	if = {
		limit = {
			check_variable = { US_voting_actual_npp_votes_third_part > 0 }
		}
		subtract_from_variable = { US_voting_actual_npp_votes_third_part = 1 }
	}
	multiply_variable = { US_voting_actual_npp_votes_third_part = -1 }
	#######
	set_variable = { US_voting_actual_npp_votes_second_part = USA_npp_total_votes_from_election }
	subtract_from_variable = { US_voting_actual_npp_votes_second_part = US_voting_actual_npp_votes_third_part }
	divide_variable = { US_voting_actual_npp_votes_second_part = 1000 }
	set_variable = { US_subtracting_var = US_voting_actual_npp_votes_second_part }
	round_variable = US_voting_actual_npp_votes_second_part
	subtract_from_variable = { US_voting_actual_npp_votes_second_part = US_subtracting_var }
	if = {
		limit = {
			check_variable = { US_voting_actual_npp_votes_second_part > 0 }
		}
		subtract_from_variable = { US_voting_actual_npp_votes_second_part = 1 }
	}
	multiply_variable = { US_voting_actual_npp_votes_second_part = -1 }
	########
	set_variable = { US_voting_actual_npp_votes_first_part = USA_npp_total_votes_from_election }
	multiply_variable = { US_voting_actual_npp_votes_second_part = 1000 }
	subtract_from_variable = { US_voting_actual_npp_votes_first_part = US_voting_actual_npp_votes_second_part }
	subtract_from_variable = { US_voting_actual_npp_votes_first_part = US_voting_actual_npp_votes_third_part }
	divide_variable = { US_voting_actual_npp_votes_first_part = 1000 }
	multiply_variable = { US_voting_actual_npp_votes_third_part = 1000 }

	if = {
		limit = {
			check_variable = { US_voting_actual_rd_votes_first_part > 1 }
		}
		add_to_variable = { US_voting_actual_rd_votes_second_part = 1000 }
	}
	if = {
		limit = {
			check_variable = { US_voting_actual_npp_votes_first_part > 1 }
		}
		add_to_variable = { US_voting_actual_npp_votes_second_part = 1000 }
	}
	set_variable = { US_voting_votes_display^2 = US_voting_actual_rd_votes_third_part }
	multiply_variable = { US_voting_votes_display^2 = 1000 }
	add_to_variable = { US_voting_votes_display^2 = US_voting_actual_rd_votes_third_part_prev }

	set_variable = { US_voting_votes_display^1 = US_voting_actual_rd_votes_second_part }
	multiply_variable = { US_voting_votes_display^1 = 1000 }
	add_to_variable = { US_voting_votes_display^1 = US_voting_actual_rd_votes_second_part_prev }

	set_variable = { US_voting_votes_display^0 = US_voting_actual_rd_votes_first_part }
	multiply_variable = { US_voting_votes_display^0 = 1000 }
	add_to_variable = { US_voting_votes_display^0 = US_voting_actual_rd_votes_first_part_prev }

	set_variable = { US_voting_votes_display^5 = US_voting_actual_npp_votes_third_part }
	multiply_variable = { US_voting_votes_display^5 = 1000 }
	add_to_variable = { US_voting_votes_display^5 = US_voting_actual_npp_votes_third_part_prev }

	set_variable = { US_voting_votes_display^4 = US_voting_actual_npp_votes_second_part }
	multiply_variable = { US_voting_votes_display^4 = 1000 }
	add_to_variable = { US_voting_votes_display^4 = US_voting_actual_npp_votes_second_part_prev }

	set_variable = { US_voting_votes_display^3 = US_voting_actual_npp_votes_first_part }
	multiply_variable = { US_voting_votes_display^3 = 1000 }
	add_to_variable = { US_voting_votes_display^3 = US_voting_actual_npp_votes_first_part_prev }

	set_variable = { US_voting_votes_display_actual^0 = US_voting_actual_rd_votes_first_part }
	set_variable = { US_voting_votes_display_actual^1 = US_voting_actual_rd_votes_second_part }
	set_variable = { US_voting_votes_display_actual^2 = US_voting_actual_rd_votes_third_part }

	set_variable = { US_voting_votes_display_actual^3 = US_voting_actual_npp_votes_first_part }
	set_variable = { US_voting_votes_display_actual^4 = US_voting_actual_npp_votes_second_part }
	set_variable = { US_voting_votes_display_actual^5 = US_voting_actual_npp_votes_third_part }

	USA_GUI_update_text_animation = yes
	USA_GUI_update_numbers_position = yes
}
#Do not add another effect below this as they dont't work, add them above this effect#