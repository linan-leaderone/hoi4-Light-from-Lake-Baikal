#|========================================================================|#
#|  _____ _           _   _             _____                             |#
#| |  ___| |         | | (_)           /  ___|                            |#
#| | |__ | | ___  ___| |_ _  ___  _ __ \ `--.  ___  __ _ ___  ___  _ __   |#
#| |  __|| |/ _ \/ __| __| |/ _ \| '_ \ `--. \/ _ \/ _` / __|/ _ \| '_ \  |#
#| | |___| |  __/ (__| |_| | (_) | | | /\__/ /  __/ (_| \__ \ (_) | | | | |#
#| \____/|_|\___|\___|\__|_|\___/|_| |_\____/ \___|\__,_|___/\___/|_| |_| |#
#|                                                                        |#
#|==================| ElectionSeason Scripted Effects |===================|#
#|=| $/common/scripted_effects/TNO_ElectionSeason_scripted_effects.txt |==|#
#|------------------------------------------------------------------------|#
#|====| Related;                                                          |#
#|==| $/common/scripted_guis/TNO_ElectionSeason_scripted_gui.txt          |#
#|==| $/common/scripted_triggers/TNO_ElectionSeason_scripted_triggers.txt |#
#|========================================================================|#

# ***HUGE*** Brains List:
# Calph, 

#### GUI PURPOSES ####
	# ElectionMap Setup
TNO_Britain_ElectionMap_Setup = {
	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionMap_Setup; Executing"

		# Cornwall
	set_variable = { TNO_Britain_ElectionMap_Setup_State_i = 0 }
	123 = { TNO_Britain_ElectionMap_Setup_State = yes }

	set_variable = { TNO_Britain_ElectionMap_Setup_State_i = 1 }
	1296 = { TNO_Britain_ElectionMap_Setup_State = yes }

		# Wales
	set_variable = { TNO_Britain_ElectionMap_Setup_State_i = 2 }
	122 = { TNO_Britain_ElectionMap_Setup_State = yes }

	set_variable = { TNO_Britain_ElectionMap_Setup_State_i = 3 }
	1301 = { TNO_Britain_ElectionMap_Setup_State = yes }

		# England
	set_variable = { TNO_Britain_ElectionMap_Setup_State_i = 4 }
	125 = { TNO_Britain_ElectionMap_Setup_State = yes }

	set_variable = { TNO_Britain_ElectionMap_Setup_State_i = 5 }
	126 = { TNO_Britain_ElectionMap_Setup_State = yes }

	set_variable = { TNO_Britain_ElectionMap_Setup_State_i = 6 }
	127 = { TNO_Britain_ElectionMap_Setup_State = yes }

	set_variable = { TNO_Britain_ElectionMap_Setup_State_i = 7 }
	128 = { TNO_Britain_ElectionMap_Setup_State = yes }

	set_variable = { TNO_Britain_ElectionMap_Setup_State_i = 8 }
	129 = { TNO_Britain_ElectionMap_Setup_State = yes }

	set_variable = { TNO_Britain_ElectionMap_Setup_State_i = 9 }
	130 = { TNO_Britain_ElectionMap_Setup_State = yes }

	set_variable = { TNO_Britain_ElectionMap_Setup_State_i = 10 }
	131 = { TNO_Britain_ElectionMap_Setup_State = yes }

	set_variable = { TNO_Britain_ElectionMap_Setup_State_i = 11 }
	132 = { TNO_Britain_ElectionMap_Setup_State = yes }

	set_variable = { TNO_Britain_ElectionMap_Setup_State_i = 12 }
	338 = { TNO_Britain_ElectionMap_Setup_State = yes }

	set_variable = { TNO_Britain_ElectionMap_Setup_State_i = 13 }
	777 = { TNO_Britain_ElectionMap_Setup_State = yes }

	set_variable = { TNO_Britain_ElectionMap_Setup_State_i = 14 }
	885 = { TNO_Britain_ElectionMap_Setup_State = yes }

	set_variable = { TNO_Britain_ElectionMap_Setup_State_i = 15 }
	1300 = { TNO_Britain_ElectionMap_Setup_State = yes }

		# Scotland
	set_variable = { TNO_Britain_ElectionMap_Setup_State_i = 16 }
	120 = { TNO_Britain_ElectionMap_Setup_State = yes }

	set_variable = { TNO_Britain_ElectionMap_Setup_State_i = 17 }
	121 = { TNO_Britain_ElectionMap_Setup_State = yes }

	set_variable = { TNO_Britain_ElectionMap_Setup_State_i = 18 }
	133 = { TNO_Britain_ElectionMap_Setup_State = yes }

	set_variable = { TNO_Britain_ElectionMap_Setup_State_i = 19 }
	136 = { TNO_Britain_ElectionMap_Setup_State = yes }

	set_variable = { TNO_Britain_ElectionMap_Setup_State_i = 20 }
	1320 = { TNO_Britain_ElectionMap_Setup_State = yes }

	set_variable = { TNO_Britain_ElectionMap_Setup_State_i = 21 }
	1321 = { TNO_Britain_ElectionMap_Setup_State = yes }

	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionMap_Setup; Completed execution."
}

	# ElectionMap Setup State
TNO_Britain_ElectionMap_Setup_State = {
	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionMap_Setup_State; Executing"
	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionMap_Setup_State; Current State: #[This.GetID], [This.GetName]"
	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionMap_Setup_State; Given: [?TNO_Britain_ElectionMap_Setup_State_i]"

	set_temp_variable = { ES_ActiveState = THIS.id } # :funny:

	1300 = { owner = {
			log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionMap_Setup_State; Current Tag: [This.GetTag], [This.GetName]"
			} }

	if = {
		limit = { 1300 = { owner = { NOT = { has_variable = TNO_Britain_ElectionMap_Setup_State_i } } } }

		log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionMap_Setup_State; Was not given TNO_Britain_ElectionMap_Setup_State_i"
	}
	else_if = {
		limit = { NOT = { ElectionSeason_England_CanBeActiveState = yes } }

		log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionMap_Setup_State; Invalid State: #[This.GetID], [This.GetName]"
	}
	else_if = {
		limit = { NOT = { ElectionSeason_England_IsActiveState = yes } }
		1300 = { owner = { set_variable = { TNO_Britain_ElectoralMap_Array^TNO_Britain_ElectionMap_Setup_State_i = 0 } } }
	}
	else = {
		log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionMap_Setup_State; Finding most popular party ..."

			# Party Placement (1st, 2nd, 3rd)
		TNO_ElectionMech_DeterminePartyPlacement_inState = yes

		log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionMap_Setup_State; Most popular Party's PartyID: [?ES_ActiveState:ElectionSeason_State_PartyID^ES_ActiveState:ElectionSeason_State_FirstPlace]"

			# CTHULHU R'LYEH
		if = {
			limit = {
				OR = {
					check_variable = { ElectionSeason_State_PartyID^ElectionSeason_State_FirstPlace = 0 } # Uhhhhhhh
					check_variable = { ElectionSeason_State_PartyID^ElectionSeason_State_FirstPlace = 1 } # NULL
				}
			}
			1300 = { owner = { set_variable = { TNO_Britain_ElectoralMap_Array^TNO_Britain_ElectionMap_Setup_State_i = 1 } } }
		}
			# Independents
		else_if = {
			limit = { check_variable = { ElectionSeason_State_PartyID^ElectionSeason_State_FirstPlace = 2 } }
			1300 = { owner = { set_variable = { TNO_Britain_ElectoralMap_Array^TNO_Britain_ElectionMap_Setup_State_i = 2 } } }
		}
			# The Royal Party
		else_if = {
			limit = {
				OR = {
					check_variable = { ElectionSeason_State_PartyID^ElectionSeason_State_FirstPlace = 3 } # Moderates
					check_variable = { ElectionSeason_State_PartyID^ElectionSeason_State_FirstPlace = 4 } # Reformists
					check_variable = { ElectionSeason_State_PartyID^ElectionSeason_State_FirstPlace = 5 } # Hardliners
					check_variable = { ElectionSeason_State_PartyID^ElectionSeason_State_FirstPlace = 8 } # Post-ECW
				}
			}
			1300 = { owner = { set_variable = { TNO_Britain_ElectoralMap_Array^TNO_Britain_ElectionMap_Setup_State_i = 6 } } }
		}
			# United ENGland
		else_if = {
			limit = {
				OR = {
					check_variable = { ElectionSeason_State_PartyID^ElectionSeason_State_FirstPlace = 6 } # Macmillanists
					check_variable = { ElectionSeason_State_PartyID^ElectionSeason_State_FirstPlace = 7 } # Liberals
				}
			}
			1300 = { owner = { set_variable = { TNO_Britain_ElectoralMap_Array^TNO_Britain_ElectionMap_Setup_State_i = 9 } } }
		}
			# The National Front
		else_if = {
			limit = { check_variable = { ElectionSeason_State_PartyID^ElectionSeason_State_FirstPlace = 9 } }
			1300 = { owner = { set_variable = { TNO_Britain_ElectoralMap_Array^TNO_Britain_ElectionMap_Setup_State_i = 10 } } }
		}
			# The Liberal Party
		else_if = {
			limit = { check_variable = { ElectionSeason_State_PartyID^ElectionSeason_State_FirstPlace = 10 } }
			1300 = { owner = { set_variable = { TNO_Britain_ElectoralMap_Array^TNO_Britain_ElectionMap_Setup_State_i = 8 } } }
		}
			# National Democratic League
		else_if = {
			limit = {
				OR = {
					check_variable = { ElectionSeason_State_PartyID^ElectionSeason_State_FirstPlace = 11 } # New Whigs
					check_variable = { ElectionSeason_State_PartyID^ElectionSeason_State_FirstPlace = 12 } # Democrats
					check_variable = { ElectionSeason_State_PartyID^ElectionSeason_State_FirstPlace = 13 } # Patriots
				}
			}
			1300 = { owner = { set_variable = { TNO_Britain_ElectoralMap_Array^TNO_Britain_ElectionMap_Setup_State_i = 8 } } }
		}
			# Socialist Labour Party
		else_if = {
			limit = {
				OR = {
					check_variable = { ElectionSeason_State_PartyID^ElectionSeason_State_FirstPlace = 14 } # Progress
					check_variable = { ElectionSeason_State_PartyID^ElectionSeason_State_FirstPlace = 15 } # Pollitites
				}
			}
			1300 = { owner = { set_variable = { TNO_Britain_ElectoralMap_Array^TNO_Britain_ElectionMap_Setup_State_i = 7 } } }
		}
			# Movement in Support of the Army
		else_if = {
			limit = { check_variable = { ElectionSeason_State_PartyID^ElectionSeason_State_FirstPlace = 16 } }
			1300 = { owner = { set_variable = { TNO_Britain_ElectoralMap_Array^TNO_Britain_ElectionMap_Setup_State_i = 13 } } }
		}
			# Independent Labour Party
		else_if = {
			limit = { check_variable = { ElectionSeason_State_PartyID^ElectionSeason_State_FirstPlace = 17 } }
			1300 = { owner = { set_variable = { TNO_Britain_ElectoralMap_Array^TNO_Britain_ElectionMap_Setup_State_i = 4 } } }
		}
			# Scottish National Party
		else_if = {
			limit = { check_variable = { ElectionSeason_State_PartyID^ElectionSeason_State_FirstPlace = 18 } }
			1300 = { owner = { set_variable = { TNO_Britain_ElectoralMap_Array^TNO_Britain_ElectionMap_Setup_State_i = 3 } } }
		}
			# The Unionist Party
		else_if = {
			limit = { check_variable = { ElectionSeason_State_PartyID^ElectionSeason_State_FirstPlace = 19 } }
			1300 = { owner = { set_variable = { TNO_Britain_ElectoralMap_Array^TNO_Britain_ElectionMap_Setup_State_i = 5 } } }
		}
			# Plaid Cymru
		else_if = {
			limit = { check_variable = { ElectionSeason_State_PartyID^ElectionSeason_State_FirstPlace = 20 } }
			1300 = { owner = { set_variable = { TNO_Britain_ElectoralMap_Array^TNO_Britain_ElectionMap_Setup_State_i = 11 } } }
		}
			# Cymru Goch
		else_if = {
			limit = { check_variable = { ElectionSeason_State_PartyID^ElectionSeason_State_FirstPlace = 21 } }
			1300 = { owner = { set_variable = { TNO_Britain_ElectoralMap_Array^TNO_Britain_ElectionMap_Setup_State_i = 12 } } }
		}
			# British National Convention
		else_if = {
			limit = { check_variable = { ElectionSeason_State_PartyID^ElectionSeason_State_FirstPlace = 22 } }
			1300 = { owner = { set_variable = { TNO_Britain_ElectoralMap_Array^TNO_Britain_ElectionMap_Setup_State_i = 13 } } }
		}
			# Popular Convention
		else_if = {
			limit = { check_variable = { ElectionSeason_State_PartyID^ElectionSeason_State_FirstPlace = 23 } }
			1300 = { owner = { set_variable = { TNO_Britain_ElectoralMap_Array^TNO_Britain_ElectionMap_Setup_State_i = 9 } } }
		}
	}

	1300 = { owner = { clear_variable = TNO_Britain_ElectionMap_Setup_State_i } }

	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionMap_Setup_State; Completed execution."
}

	# ElectionMap Clear
TNO_Britain_ElectionMap_Clear = {
	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionMap_Clear; Executing"

	clear_array = TNO_Britain_ElectoralMap_Array

	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionMap_Clear; Completed execution."
}

	# ElectionMech Determine Party Places in State
TNO_ElectionMech_DeterminePartyPlacement_inState = {
	log = "[GetDateText]: [Root.GetName]: TNO_ElectionMech_DeterminePartyPlacement_inState; Executing"

	set_variable = { ElectionSeason_State_FirstPlace = -1 }
	set_variable = { ElectionSeason_State_SecondPlace = -1 }
	set_variable = { ElectionSeason_State_ThirdPlace = -1 }

	for_each_loop = {
		array = ElectionSeason_State_PartyPop
		value = val
		index = i

		if = {
			limit = { check_variable = { ElectionSeason_State_PartyPop^ElectionSeason_State_FirstPlace < val } }
			set_variable = { ElectionSeason_State_ThirdPlace = ElectionSeason_State_SecondPlace }
			set_variable = { ElectionSeason_State_SecondPlace = ElectionSeason_State_FirstPlace }
			set_variable = { ElectionSeason_State_FirstPlace = i }
		}
		else_if = {
			limit = { check_variable = { ElectionSeason_State_PartyPop^ElectionSeason_State_SecondPlace < val } }
			set_variable = { ElectionSeason_State_ThirdPlace = ElectionSeason_State_SecondPlace }
			set_variable = { ElectionSeason_State_SecondPlace = i }
		}
		else_if = {
			limit = { check_variable = { ElectionSeason_State_PartyPop^ElectionSeason_State_ThirdPlace < val } }
			set_variable = { ElectionSeason_State_ThirdPlace = i }
		}
	}

	log = "[GetDateText]: [Root.GetName]: TNO_ElectionMech_DeterminePartyPlacement_inState; Completed execution."
}
#### GUI PURPOSES ####

#### CODE PURPOSES ####
	### Initializers ###

TNO_Britain_ElectionSeason_Initialize_Clear = {
	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_Initialize_Clear; Executing"

	every_state = {
		limit = { ElectionSeason_England_IsActiveState = yes }

		clear_array = ElectionSeason_State_PartyID
		clear_array = ElectionSeason_State_PartyPop
	}

	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_Initialize_Clear; Completed execution."
}

		## GameStart ##
TNO_Britain_ElectionSeason_InitializeState_GameStart_A = {
	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_InitializeState_GameStart_A; Executing"
	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_InitializeState_GameStart_A; THIS: [This.GetID]"

				## Party IDs
	add_to_array = { ElectionSeason_State_PartyID = 2 } # 2: Independents
	add_to_array = { ElectionSeason_State_PartyID = 3 } # 3: The Royal Party's Moderates
	add_to_array = { ElectionSeason_State_PartyID = 4 } # 4: The Royal Party's Reformists
	add_to_array = { ElectionSeason_State_PartyID = 5 } # 5: The Royal Party's Hardliners

				## Party Popularity
				# **MUST** SUM TO 100
	add_to_array = { ElectionSeason_State_PartyPop = 15 } # 2: Independents
	add_to_array = { ElectionSeason_State_PartyPop = 30 } # 3: The Royal Party's Moderates
	add_to_array = { ElectionSeason_State_PartyPop = 20 } # 4: The Royal Party's Reformists
	add_to_array = { ElectionSeason_State_PartyPop = 35 } # 5: The Royal Party's Hardliners

	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_InitializeState_GameStart_A; Completed execution."
}

TNO_Britain_ElectionSeason_InitializeState_GameStart_B = {
	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_InitializeState_GameStart_B; Executing"
	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_InitializeState_GameStart_B; THIS: [This.GetID]"

				## Party IDs
	add_to_array = { ElectionSeason_State_PartyID = 2 } # 2: Independents
	add_to_array = { ElectionSeason_State_PartyID = 3 } # 3: The Royal Party's Moderates
	add_to_array = { ElectionSeason_State_PartyID = 4 } # 4: The Royal Party's Reformists
	add_to_array = { ElectionSeason_State_PartyID = 5 } # 5: The Royal Party's Hardliners

				## Party Popularity
				# **MUST** SUM TO 100
	add_to_array = { ElectionSeason_State_PartyPop = 20 } # 2: Independents
	add_to_array = { ElectionSeason_State_PartyPop = 45 } # 3: The Royal Party's Moderates
	add_to_array = { ElectionSeason_State_PartyPop = 10 } # 4: The Royal Party's Reformists
	add_to_array = { ElectionSeason_State_PartyPop = 25 } # 5: The Royal Party's Hardliners

	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_InitializeState_GameStart_B; Completed execution."
}

TNO_Britain_ElectionSeason_InitializeState_GameStart_C = {
	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_InitializeState_GameStart_C; Executing"
	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_InitializeState_GameStart_C; THIS: [This.GetID]"

				## Party IDs
	add_to_array = { ElectionSeason_State_PartyID = 2 } # 2: Independents
	add_to_array = { ElectionSeason_State_PartyID = 3 } # 3: The Royal Party's Moderates
	add_to_array = { ElectionSeason_State_PartyID = 4 } # 4: The Royal Party's Reformists
	add_to_array = { ElectionSeason_State_PartyID = 5 } # 5: The Royal Party's Hardliners

				## Party Popularity
				# **MUST** SUM TO 100
	add_to_array = { ElectionSeason_State_PartyPop = 15 } # 2: Independents
	add_to_array = { ElectionSeason_State_PartyPop = 30 } # 3: The Royal Party's Moderates
	add_to_array = { ElectionSeason_State_PartyPop = 35 } # 4: The Royal Party's Reformists
	add_to_array = { ElectionSeason_State_PartyPop = 20 } # 5: The Royal Party's Hardliners

	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_InitializeState_GameStart_C; Completed execution."
}

TNO_Britain_ElectionSeason_Initialize_GameStart = {
	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_Initialize_GameStart; Executing"

				## Seats Definition
				# - Should sum to 618

				# Cornwall - 39
	123  = { set_variable = { ElectionSeason_State_AlottedSeats = 14 } } # Cornwall - Cornwall
	1296 = { set_variable = { ElectionSeason_State_AlottedSeats = 25 } } # Somerset - Cornwall

				# England - 461
	125  = { set_variable = { ElectionSeason_State_AlottedSeats = 27 } } # East Anglia
	126  = { set_variable = { ElectionSeason_State_AlottedSeats = 55 } } # Oxfordshire
	127  = { set_variable = { ElectionSeason_State_AlottedSeats = 35 } } # Sussex
	128  = { set_variable = { ElectionSeason_State_AlottedSeats = 49 } } # West Midlands
	129  = { set_variable = { ElectionSeason_State_AlottedSeats = 51 } } # East Midlands
	130  = { set_variable = { ElectionSeason_State_AlottedSeats = 74 } } # Yorkshire
	131  = { set_variable = { ElectionSeason_State_AlottedSeats = 13 } } # Newcastle
	132  = { set_variable = { ElectionSeason_State_AlottedSeats = 93 } } # Lancashire
	338  = { set_variable = { ElectionSeason_State_AlottedSeats = 10 } } # Gloucestershire
	777  = { set_variable = { ElectionSeason_State_AlottedSeats = 11 } } # Wiltshire
	885  = { set_variable = { ElectionSeason_State_AlottedSeats = 3  } } # Severn
	1300 = { set_variable = { ElectionSeason_State_AlottedSeats = 42 } } # London

				# Wales - 41
	122  = { set_variable = { ElectionSeason_State_AlottedSeats = 33 } } # Southern Wales
	1301 = { set_variable = { ElectionSeason_State_AlottedSeats = 8  } } # Northern Wales

				# Scotland - 77
	120  = { set_variable = { ElectionSeason_State_AlottedSeats = 2  } } # Scottish Highlands
	121  = { set_variable = { ElectionSeason_State_AlottedSeats = 30 } } # Lothian
	133  = { set_variable = { ElectionSeason_State_AlottedSeats = 29 } } # Lanark
	136  = { set_variable = { ElectionSeason_State_AlottedSeats = 9  } } # Aberdeenshire
	1320 = { set_variable = { ElectionSeason_State_AlottedSeats = 3  } } # Fife
	1321 = { set_variable = { ElectionSeason_State_AlottedSeats = 4  } } # Dumfries

				## PartyID & PartyPop Definition
	every_state = {
		limit = { ElectionSeason_England_IsActiveState = yes }

					# Logging
		log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_Initialize_GameStart; Every State: [This.GetID]"

					# Type A - RP Hardliner Leaning
		if = {
			limit = {
				OR = {
					state = 123 # Cornwall - Cornwall
					state = 125 # East Anglia
					state = 129 # East Midlands
					state = 885 # Severn
				}
			}

			TNO_Britain_ElectionSeason_InitializeState_GameStart_A = yes
		}

					# Type B - RP Moderate Leaning
		else_if = {
			limit = {
				OR = {
					state = 126  # Oxfordshire
					state = 127  # Sussex
					state = 130  # Yorkshire
					state = 338  # Gloucestershire
					state = 777  # Severn
					state = 1296 # Somerset - Cornwall
					state = 1300 # London
				}
			}

			TNO_Britain_ElectionSeason_InitializeState_GameStart_B = yes
		}

					# Type C - RP Reformist Leaning
		else_if = {
			limit = {
				OR = {
					state = 128 # West Midlands
					state = 131 # Newcastle
					state = 132 # Lancashire
				}
			}

			TNO_Britain_ElectionSeason_InitializeState_GameStart_C = yes
		}
	}

	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_Initialize_GameStart; Completed execution."
}

TNO_Britain_ElectionSeason_Initialize_GameStart_test = {
	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_Initialize_GameStart_test; Executing"

	every_state = {
		limit = { ElectionSeason_England_IsActiveState = yes }

		if = {
			limit = {
				check_variable = { ElectionSeason_State_PartyID^num > 0 }
				has_variable = ElectionSeason_State_AlottedSeats
			}

			log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_Initialize_GameStart_test; State #[This.GetID], [This.GetName], is gucci"
		}

		else = {
			log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_Initialize_GameStart_test; State #[This.GetID], [This.GetName], is NOT gucci"
		}
	}

	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_Initialize_GameStart_test; Completed execution."
}
		## GameStart ##

		## Post-ECW Collab ##
TNO_Britain_ElectionSeason_Initialize_Post_ECW_Collab = {
	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_Initialize_Post_ECW_Collab; Executing"

	TNO_Britain_ElectionSeason_Initialize_Clear = yes

	125 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 6 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyID = 7 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyID = 8 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyID = 9 } # 9: National Front

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 30 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyPop = 25 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyPop = 35 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 9: National Front
	}

	126 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 6 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyID = 7 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyID = 8 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyID = 9 } # 9: National Front

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 30 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyPop = 25 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyPop = 35 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 9: National Front
	}

	127 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 6 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyID = 7 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyID = 8 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyID = 9 } # 9: National Front

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 35 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyPop = 20 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyPop = 40 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyPop =  5 } # 9: National Front
	}

	128 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 6 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyID = 7 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyID = 8 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyID = 9 } # 9: National Front

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 20 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyPop = 25 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyPop = 35 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyPop = 20 } # 9: National Front
	}

	129 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 6 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyID = 7 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyID = 8 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyID = 9 } # 9: National Front

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 30 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyPop = 40 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyPop = 20 } # 9: National Front
	}

	130 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 6 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyID = 7 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyID = 8 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyID = 9 } # 9: National Front

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 30 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyPop = 50 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 9: National Front
	}

	131 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 6 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyID = 7 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyID = 8 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyID = 9 } # 9: National Front

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 30 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyPop = 50 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 9: National Front
	}

	132 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 6 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyID = 7 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyID = 8 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyID = 9 } # 9: National Front

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 25 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyPop = 60 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyPop =  5 } # 9: National Front
	}

	338 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 6 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyID = 7 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyID = 8 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyID = 9 } # 9: National Front

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 25 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyPop = 20 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyPop = 50 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyPop =  5 } # 9: National Front
	}

	777 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 6 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyID = 7 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyID = 8 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyID = 9 } # 9: National Front

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 25 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyPop = 60 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyPop =  5 } # 9: National Front
	}

	885 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 6 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyID = 7 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyID = 8 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyID = 9 } # 9: National Front

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 20 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyPop =  5 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyPop = 55 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyPop = 20 } # 9: National Front
	}

	1300 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 6 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyID = 7 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyID = 8 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyID = 9 } # 9: National Front

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 20 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyPop =  5 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyPop = 70 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyPop =  5 } # 9: National Front
	}

	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_Initialize_Post_ECW_Collab; Completed execution."
}

			## Cornwall Collab ##
TNO_Britain_ElectionSeason_Initialize_Cornwall_Collab = {
	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_Initialize_Cornwall_Collab; Executing"

	123 = {
		# clear PRE-ECW stuff
		clear_array = ElectionSeason_State_PartyID
		clear_array = ElectionSeason_State_PartyPop

					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 6 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyID = 7 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyID = 8 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyID = 9 } # 9: National Front

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyPop = 30 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyPop = 20 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyPop = 40 } # 9: National Front
	}

	1296 = {
		# clear PRE-ECW stuff
		clear_array = ElectionSeason_State_PartyID
		clear_array = ElectionSeason_State_PartyPop

					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 6 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyID = 7 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyID = 8 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyID = 9 } # 9: National Front

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 25 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyPop = 45 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyPop = 15 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyPop = 15 } # 9: National Front
	}
}

			## Wales Collab ##
TNO_Britain_ElectionSeason_Initialize_Wales_Collab = {
	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_Initialize_Wales_Collab; Executing"

	122 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 6 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyID = 7 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyID = 8 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyID = 9 } # 9: National Front

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 25 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyPop = 35 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyPop = 35 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyPop = 5 } # 9: National Front
	}

	1301 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 6 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyID = 7 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyID = 8 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyID = 9 } # 9: National Front

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 15 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyPop = 40 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyPop = 35 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 9: National Front
	}
}

			## Scotland Collab ##
TNO_Britain_ElectionSeason_Initialize_Scotland_Collab = {
	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_Initialize_Scotland_Collab; Executing"

	133 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 6 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyID = 7 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyID = 8 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyID = 9 } # 9: National Front

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 25 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyPop = 15 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyPop = 45 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyPop = 15 } # 9: National Front
	}

	120 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 6 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyID = 7 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyID = 8 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyID = 9 } # 9: National Front

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 30 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyPop = 30 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyPop = 40 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyPop = 0 } # 9: National Front
	}

	121 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 6 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyID = 7 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyID = 8 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyID = 9 } # 9: National Front

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 20 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyPop = 40 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyPop = 35 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyPop = 5 } # 9: National Front
	}

	136 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 6 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyID = 7 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyID = 8 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyID = 9 } # 9: National Front

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 25 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyPop = 25 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyPop = 45 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyPop = 5 } # 9: National Front
	}

	1320 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 6 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyID = 7 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyID = 8 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyID = 9 } # 9: National Front

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 20 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyPop = 40 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyPop = 35 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyPop = 5 } # 9: National Front
	}

	1321 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 6 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyID = 7 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyID = 8 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyID = 9 } # 9: National Front

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 40 } # 6: United England - Macmillan
		add_to_array = { ElectionSeason_State_PartyPop = 5 } # 7: United England - Liberals
		add_to_array = { ElectionSeason_State_PartyPop = 55 } # 8: Royal Party
		add_to_array = { ElectionSeason_State_PartyPop = 0 } # 9: National Front
	}
}
		## Post-ECW Collab ##

		## Post-ECW HMMLR ##
TNO_Britain_ElectionSeason_Initialize_Post_ECW_HMMLR = {
	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_Initialize_Post_ECW_HMMLR; Executing"

	TNO_Britain_ElectionSeason_Initialize_Clear = yes

	125 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 11 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyID = 12 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyID = 13 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyID = 14 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyID = 15 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyID = 16 } # 16: The State of Minnesota

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyPop = 30 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyPop =  5 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyPop = 30 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyPop = 15 } # 16: The State of Minnesota
	}

	126 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 11 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyID = 12 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyID = 13 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyID = 14 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyID = 15 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyID = 16 } # 16: The State of Minnesota

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyPop = 20 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyPop = 35 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyPop = 15 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 16: The State of Minnesota
	}

	127 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 11 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyID = 12 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyID = 13 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyID = 14 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyID = 15 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyID = 16 } # 16: The State of Minnesota

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyPop = 40 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyPop = 15 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyPop = 25 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyPop =  5 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyPop =  5 } # 16: The State of Minnesota
	}

	128 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 11 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyID = 12 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyID = 13 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyID = 14 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyID = 15 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyID = 16 } # 16: The State of Minnesota

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop =  5 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyPop = 25 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyPop = 35 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyPop = 15 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 16: The State of Minnesota
	}

	129 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 11 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyID = 12 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyID = 13 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyID = 14 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyID = 15 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyID = 16 } # 16: The State of Minnesota

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop =  5 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyPop = 35 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyPop =  5 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyPop = 35 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 16: The State of Minnesota
	}

	130 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 11 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyID = 12 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyID = 13 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyID = 14 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyID = 15 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyID = 16 } # 16: The State of Minnesota

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 15 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyPop = 25 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyPop = 40 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyPop =  5 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyPop =  5 } # 16: The State of Minnesota
	}

	131 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 11 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyID = 12 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyID = 13 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyID = 14 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyID = 15 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyID = 16 } # 16: The State of Minnesota

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop =  5 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyPop = 40 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyPop = 25 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyPop = 15 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyPop =  5 } # 16: The State of Minnesota
	}

	132 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 11 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyID = 12 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyID = 13 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyID = 14 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyID = 15 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyID = 16 } # 16: The State of Minnesota

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop =  5 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyPop = 30 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyPop = 15 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyPop = 35 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyPop =  5 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 16: The State of Minnesota
	}

	338 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 11 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyID = 12 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyID = 13 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyID = 14 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyID = 15 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyID = 16 } # 16: The State of Minnesota

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyPop = 35 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyPop =  5 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyPop = 30 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyPop = 15 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyPop =  5 } # 16: The State of Minnesota
	}

	777 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 11 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyID = 12 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyID = 13 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyID = 14 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyID = 15 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyID = 16 } # 16: The State of Minnesota

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyPop = 50 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 16: The State of Minnesota
	}

	885 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 11 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyID = 12 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyID = 13 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyID = 14 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyID = 15 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyID = 16 } # 16: The State of Minnesota

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop =  5 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyPop = 15 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyPop = 15 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyPop = 40 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyPop = 20 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyPop =  5 } # 16: The State of Minnesota
	}

	1300 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 11 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyID = 12 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyID = 13 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyID = 14 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyID = 15 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyID = 16 } # 16: The State of Minnesota

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyPop = 20 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyPop = 30 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyPop = 20 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 16: The State of Minnesota
	}

	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_Initialize_Post_ECW_HMMLR; Completed execution."
}

			## Cornwall HMMLR ##
TNO_Britain_ElectionSeason_Initialize_Cornwall_HMMLR = {
	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_Initialize_Cornwall_HMMLR; Executing"

	123 = {
		# clear PRE-ECW stuff
		clear_array = ElectionSeason_State_PartyID
		clear_array = ElectionSeason_State_PartyPop

					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 11 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyID = 12 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyID = 13 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyID = 14 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyID = 15 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyID = 16 } # 16: The State of Minnesota

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 20 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyPop = 30 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyPop =  5 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyPop = 15 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyPop = 15 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyPop = 15 } # 16: The State of Minnesota
	}

	1296 = {
		# clear PRE-ECW stuff
		clear_array = ElectionSeason_State_PartyID
		clear_array = ElectionSeason_State_PartyPop

					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 11 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyID = 12 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyID = 13 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyID = 14 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyID = 15 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyID = 16 } # 16: The State of Minnesota

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyPop = 20 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyPop = 0 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyPop = 30 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyPop = 25 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyPop = 15 } # 16: The State of Minnesota
	}
}

			## Wales HMMLR ##
TNO_Britain_ElectionSeason_Initialize_Wales_HMMLR = {
	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_Initialize_Wales_HMMLR; Executing"

	122 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 11 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyID = 12 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyID = 13 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyID = 14 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyID = 15 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyID = 16 } # 16: The State of Minnesota

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyPop = 30 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyPop =  5 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyPop = 45 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyPop = 0 } # 16: The State of Minnesota
	}

	1301 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 11 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyID = 12 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyID = 13 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyID = 14 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyID = 15 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyID = 16 } # 16: The State of Minnesota

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 5 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyPop = 40 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyPop = 20 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyPop = 30 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyPop = 5 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyPop = 0 } # 16: The State of Minnesota
	}
}

			## Scotland HMMLR ##
TNO_Britain_ElectionSeason_Initialize_Scotland_HMMLR = {
	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_Initialize_Scotland_HMMLR; Executing"

	133 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 11 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyID = 12 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyID = 13 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyID = 14 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyID = 15 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyID = 16 } # 16: The State of Minnesota

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyPop = 40 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyPop = 15 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyPop = 25 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyPop = 5 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyPop = 5 } # 16: The State of Minnesota
	}

	120 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 11 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyID = 12 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyID = 13 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyID = 14 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyID = 15 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyID = 16 } # 16: The State of Minnesota

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 5 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyPop = 30 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyPop = 5 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyPop = 40 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 16: The State of Minnesota
	}

	121 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 11 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyID = 12 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyID = 13 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyID = 14 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyID = 15 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyID = 16 } # 16: The State of Minnesota

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyPop = 25 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyPop = 5 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyPop = 30 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyPop = 15 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyPop = 15 } # 16: The State of Minnesota
	}

	136 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 11 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyID = 12 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyID = 13 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyID = 14 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyID = 15 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyID = 16 } # 16: The State of Minnesota

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 15 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyPop = 30 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyPop = 20 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyPop = 5 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyPop = 20 } # 16: The State of Minnesota
	}

	1320 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 11 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyID = 12 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyID = 13 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyID = 14 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyID = 15 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyID = 16 } # 16: The State of Minnesota

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyPop = 40 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyPop = 25 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyPop = 5 } # 16: The State of Minnesota
	}

	1321 = {
					## Party IDs
		add_to_array = { ElectionSeason_State_PartyID = 11 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyID = 12 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyID = 13 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyID = 14 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyID = 15 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyID = 16 } # 16: The State of Minnesota

					## Party Popularity
					# **MUST** SUM TO 100
		add_to_array = { ElectionSeason_State_PartyPop = 5 } # 11: National Democratic League - New Whigs
		add_to_array = { ElectionSeason_State_PartyPop = 50 } # 12: National Democratic League - Democrats
		add_to_array = { ElectionSeason_State_PartyPop = 10 } # 13: National Democratic League - Patriots
		add_to_array = { ElectionSeason_State_PartyPop = 30 } # 14: Socialist Labour Party - Progress
		add_to_array = { ElectionSeason_State_PartyPop = 5 } # 15: Socialist Labour Party - Pollitites
		add_to_array = { ElectionSeason_State_PartyPop = 0 } # 16: The State of Minnesota
	}
}
		## Post-ECW HMMLR ##
	### Initializers ###

	### Election Code ###
TNO_Britain_ElectionSeason_Election = {
	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_Election; Executing"

			## Clear Current Seats
	for_each_loop = {
		array = ParliamentMechanic_Party_SeatNum
		index = i

		set_variable = { ParliamentMechanic_Party_SeatNum^i = 0 }
	}

			## Clear Government Status
	for_each_loop = {
		array = ParliamentMechanic_Party_GovStatus
		index = i

		set_variable = { ParliamentMechanic_Party_GovStatus^i = 0 }
	}

			## Seats Calculation Per-State
	every_state = {
		limit = { ElectionSeason_England_IsActiveState = yes }

		log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_Election; State: #[This.GetID], [This.GetName]"

		TNO_Britain_ElectionSeason_Election_State = yes
	}

	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_Election; Completed execution."
}

TNO_Britain_ElectionSeason_Election_State = {
	log = "[]:TNO_Britain_ElectionSeason_Election_State; Executing"
	log = "[]:TNO_Britain_ElectionSeason_Election_State; State: #[This.GetID], [This.GetName]"
	log = "[]:TNO_Britain_ElectionSeason_Election_State; Seats to award: [?This.ElectionSeason_State_AlottedSeats]"


	set_variable = { sumAwardedSeats = 0 }

	for_each_loop = {
		array = ElectionSeason_State_PartyPop
		value = val
		index = i

		set_variable = { partyIndex = ElectionSeason_State_PartyID^i }

		set_variable = { awardedSeats = val }
		divide_variable = { awardedSeats = 100 }
		multiply_variable = { awardedSeats = This.ElectionSeason_State_AlottedSeats }
		round_variable = awardedSeats

		PREV = {
			set_variable = { partyIndex = PREV.partyIndex }
			subtract_from_variable = { partyIndex = 1 }
			# set_variable = { awardedSeats = PREV.awardedSeats }

			add_to_variable = { ParliamentMechanic_Party_SeatNum^partyIndex = PREV.awardedSeats }
			clear_variable = partyIndex
			# clear_variable = awardedSeats
		}

		log = "[]:TNO_Britain_ElectionSeason_Election_State; ([This.GetID], [This.GetName]) Party ID [?partyIndex]; Seats Awarded: [?awardedSeats] (TOTAL FOR PARTY: [?PREV.ParliamentMechanic_Party_SeatNum^partyIndex])"

		add_to_variable = { sumAwardedSeats = awardedSeats }

		clear_variable = partyIndex
		clear_variable = awardedSeats
	}

	if = {
		limit = { check_variable = { ElectionSeason_State_AlottedSeats > sumAwardedSeats } }

		set_temp_variable = { lostAndFound = ElectionSeason_State_AlottedSeats }
		subtract_from_temp_variable = { lostAndFound = sumAwardedSeats }
		set_temp_variable = { tempIndex = partyIndex^1 }
		add_to_variable = { PREV.ParliamentMechanic_Party_SeatNum^tempIndex = lostAndFound }
	}

	log = "[]:TNO_Britain_ElectionSeason_Election_State; Overall Seats Awarded: [?sumAwardedSeats]"

	clear_variable = sumAwardedSeats

	log = "[]:TNO_Britain_ElectionSeason_Election_State; Completed execution."
}
	### Election Code ###

	### Interaction Code ###

		# AddPopularity InState
		# - MUST BE FIRED IN STATE SCOPE
		# - Takes; TNO_Britain_ElectionSeason_AP_v, TNO_Britain_ElectionSeason_AP_pi
TNO_Britain_ElectionSeason_AddPop_InState = {
	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_AddPop_InState; Executing"
	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_AddPop_InState; State: #[This.GetID], [This.GetName]"
	set_temp_variable = { TNO_Britain_ElectionSeason_SelectedState = THIS.id } # :funny:
	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_AddPop_InState; Given value, [?TNO_Britain_ElectionSeason_SelectedState:TNO_Britain_ElectionSeason_AP_v] & party index, [?TNO_Britain_ElectionSeason_SelectedState:TNO_Britain_ElectionSeason_AP_pi]"
			## Err Checks
			# Handed unset value
	if = {
		limit = { NOT = { has_variable = TNO_Britain_ElectionSeason_AP_v } }
		log = "[ERROR]: [GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_AddPop_InState; Handed unset value. Breaking."
	}
			# Handed unset Party Index
	else_if = {
		limit = { NOT = { has_variable = TNO_Britain_ElectionSeason_AP_pi } }
		log = "[ERROR]: [GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_AddPop_InState; Handed unset party index. Breaking."
	}
			#Handed negative  Party Index
	else_if = {
		limit = { check_variable = { TNO_Britain_ElectionSeason_AP_pi < 0 } }
		log = "[ERROR]: [GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_AddPop_InState; Handed negative party index (#[?TNO_Britain_ElectionSeason_SelectedState:TNO_Britain_ElectionSeason_AP_pi]), which cannot exist. Breaking."
	}
			#Handed unexpected Party Index
	else_if = {
		limit = {
			OR = {
				AND = {
					set_temp_variable = { maxIndex = ENG.ParliamentMechanic_Party_Identity^num }
					add_to_temp_variable = { maxIndex = 1 }
					check_variable = { TNO_Britain_ElectionSeason_AP_pi > maxIndex }
				}
				NOT = {
					is_in_array = {
						array = ElectionSeason_State_PartyID
						value = TNO_Britain_ElectionSeason_AP_pi
					}
				}
			}
		}
		log = "[ERROR]: [GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_AddPop_InState; Handed unexpected party index ([?TNO_Britain_ElectionSeason_SelectedState:TNO_Britain_ElectionSeason_AP_pi]). Either exceeds max index or does not exist in state's PartyID array. Breaking."
	}

			## Effect
	else = {
				## OH MY FUCKING GOD WHY
				# Used to grab a usable index I feel only pain
		set_variable = { stateIndex = 0 }
		for_each_loop = {
			array = ElectionSeason_State_PartyID
			value = val
			index = i

					# log = "[?"
			log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_AddPop_InState; stateIndex Loop [?i]: PartyID = [?val]"

			if = {
				limit = { check_variable = { TNO_Britain_ElectionSeason_AP_pi = ElectionSeason_State_PartyID^i } }

				log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_AddPop_InState; stateIndex Loop [?i]: HOOK!"
				set_variable = { stateIndex = i }
				set_temp_variable = { break = 1 }
			}
		}
		log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_AddPop_InState; stateIndex: [?TNO_Britain_ElectionSeason_SelectedState:stateIndex]"


				## Add TNO_Britain_ElectionSeason_AP_v to PartyPop
		add_to_variable = { ElectionSeason_State_PartyPop^stateIndex = TNO_Britain_ElectionSeason_AP_v }

				## Balancing
				# First, find a balance factor, some value relative to 100 (%)
		set_variable = { balanceFactor = TNO_Britain_ElectionSeason_AP_v }
		set_temp_variable = { balancees = ElectionSeason_State_PartyPop^num }
		subtract_from_temp_variable = { balancees = 1 }
		divide_variable = { balanceFactor = balancees }
		log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_AddPop_InState; balanceFactor: [?TNO_Britain_ElectionSeason_SelectedState:ENG.balanceFactor]"


				# Now, loop over the PartyPop array and balance this shit
		for_each_loop = {
			array = ElectionSeason_State_PartyPop
			value = val
			index = i

			log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_AddPop_InState; Loop [?i]; Party #[?TNO_Britain_ElectionSeason_SelectedState:ElectionSeason_State_PartyID^i]'s Pop = [?val]"

			if = {
				limit = { check_variable = { stateIndex = i } }
						# Do Nothing, we already added your stuff
				log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_AddPop_InState; Loop [?i]; Do-Nothing"
			}
			else = {
				subtract_from_variable = { ElectionSeason_State_PartyPop^i = balanceFactor }
				log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_AddPop_InState; Loop [?i]; Balanced, Party #[?TNO_Britain_ElectionSeason_SelectedState:ElectionSeason_State_PartyID^i]'s NewPop = [?TNO_Britain_ElectionSeason_SelectedState:ElectionSeason_State_PartyPop^i]"
			}

					# Count the number of positive popularities
			if = {
				limit = { check_variable = { ElectionSeason_State_PartyPop^i > 0 } }
				add_to_variable = { PositivePopsNum = 1 }
			}

					# Clamp that value
			clamp_variable = { var = ElectionSeason_State_PartyPop^i min = 0 max = 100 }

					# Get the sum of all the party popularities
			add_to_variable = { PartyPopSum = ElectionSeason_State_PartyPop^i }
		}
		log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_AddPop_InState; PartyPopSum: [?TNO_Britain_ElectionSeason_SelectedState:PartyPopSum]"
		subtract_from_variable = { PartyPopSum = 100 }

				# Second balancing, if the sum of the popularities exceeds 100 with the negative popularities removed
		if = {
			limit = { check_variable = { PartyPopSum > 0 } }
			log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_AddPop_InState; Excess detected, executing 2nd Balancing"
			log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_AddPop_InState; PartyPop Excess: [?TNO_Britain_ElectionSeason_SelectedState:PartyPopSum]"
			log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_AddPop_InState; PositivePopsNum: [?TNO_Britain_ElectionSeason_SelectedState:PositivePopsNum]"
			divide_variable = { PartyPopSum = PositivePopsNum }
			log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_AddPop_InState; PartyPop Divided: [?TNO_Britain_ElectionSeason_SelectedState:PartyPopSum]"

			for_each_loop = {
				array = ElectionSeason_State_PartyPop
				value = val
				index = i

				if = {
					limit = {
						check_variable = {
							var = ElectionSeason_State_PartyPop^i
							value = PartyPopSum
							compare = greater_than_or_equals
						}
					}
					log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_AddPop_InState; 2nd Balancing, Loop [?i]; Party #[?TNO_Britain_ElectionSeason_SelectedState:ElectionSeason_State_PartyID^i]"
					log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_AddPop_InState; 2nd Balancing, Loop [?i]; Old Popularity = [?TNO_Britain_ElectionSeason_SelectedState:ElectionSeason_State_PartyPop^i]"
					subtract_from_variable = { ElectionSeason_State_PartyPop^i = PartyPopSum }
					log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_AddPop_InState; 2nd Balancing, Loop [?i]; New Popularity = [?TNO_Britain_ElectionSeason_SelectedState:ElectionSeason_State_PartyPop^i]"
				}

				add_to_variable = { 2ndBalanceSum = ElectionSeason_State_PartyPop^i }
			}
			log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_AddPop_InState; After-Balance Sum: [?TNO_Britain_ElectionSeason_SelectedState:2ndBalanceSum]"
			clear_variable = 2ndBalanceSum
		}

				# After Balancing Check
		for_each_loop = {
			array = ElectionSeason_State_PartyPop
			value = val
			index = i

			log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_AddPop_InState; AB-Loop [?i]; Party #[?TNO_Britain_ElectionSeason_SelectedState:ElectionSeason_State_PartyID^i]'s Popularity = [?val]"
		}

		TNO_ElectionMech_DeterminePartyPlacement_inState = yes
		clear_variable = TNO_Britain_ElectionSeason_SelectedState
		clear_variable = PositivePopsNum
		clear_variable = PartyPopSum

		TNO_Britain_ElectionSeason_Polling = yes
	}

	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_AddPop_InState; Completed execution."
}

		# CampainInState, player
ElectionSeason_CampaignInState = {
	log = "[GetDateText]: [Root.GetName]: ElectionSeason_CampaignInState; Executing"
	log = "[GetDateText]: [Root.GetName]: ElectionSeason_CampaignInState; State: #[This.GetID], [This.GetName]"

	if = {
		limit = {
			check_variable = { ENG.TNO_Britain_ElectionSeason_Running_Party = 2 }
		}
		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 2 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = {
			OR = {
				check_variable = { ENG.TNO_Britain_ElectionSeason_Running_Party = 3 }
				check_variable = { ENG.TNO_Britain_ElectionSeason_Running_Party = 4 }
				check_variable = { ENG.TNO_Britain_ElectionSeason_Running_Party = 5 }
			}
		}

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 3 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 1.4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 4 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 1.4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 5 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 1.4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = {
			OR = {
				check_variable = { ENG.TNO_Britain_ElectionSeason_Running_Party = 6 }
				check_variable = { ENG.TNO_Britain_ElectionSeason_Running_Party = 7 }
			}
		}

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 6 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 2 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 7 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 2 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = { check_variable = { ENG.TNO_Britain_ElectionSeason_Running_Party = 8 } }

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 8 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = { check_variable = { ENG.TNO_Britain_ElectionSeason_Running_Party = 9 } }

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 9 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = {
			OR = {
				check_variable = { ENG.TNO_Britain_ElectionSeason_Running_Party = 11 }
				check_variable = { ENG.TNO_Britain_ElectionSeason_Running_Party = 12 }
				check_variable = { ENG.TNO_Britain_ElectionSeason_Running_Party = 13 }
			}
		}

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 11 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 1.4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 12 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 1.4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 13 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 1.4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = {
			OR = {
				check_variable = { ENG.TNO_Britain_ElectionSeason_Running_Party = 14 }
				check_variable = { ENG.TNO_Britain_ElectionSeason_Running_Party = 15 }
			}
		}

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 14 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 2 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 15 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 2 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = { check_variable = { ENG.TNO_Britain_ElectionSeason_Running_Party = 16 } }

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 16 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = { check_variable = { ENG.TNO_Britain_ElectionSeason_Running_Party = 17 } }

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 17 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = { check_variable = { ENG.TNO_Britain_ElectionSeason_Running_Party = 18 } }

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 18 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = { check_variable = { ENG.TNO_Britain_ElectionSeason_Running_Party = 19 } }

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 19 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = { check_variable = { ENG.TNO_Britain_ElectionSeason_Running_Party = 20 } }

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 20 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = { check_variable = { ENG.TNO_Britain_ElectionSeason_Running_Party = 21 } }

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 21 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	ENG = {
		clr_country_flag = TNO_Britain_ElectionSeason_Campaign_Active
		TNO_Britain_ElectionMap_Setup = yes
	}

	log = "[GetDateText]: [Root.GetName]: ElectionSeason_CampaignInState; Completed execution."
}

		# CampainInState, AI A
ElectionSeason_AICampaignInState_A = {
	log = "[GetDateText]: [Root.GetName]: ElectionSeason_AICampaignInState_A; Executing"
	log = "[GetDateText]: [Root.GetName]: ElectionSeason_AICampaignInState_A; State: #[This.GetID], [This.GetName]"

	if = {
		limit = {
			check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_A = 2 }
		}
		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 2 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = {
			OR = {
				check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_A = 3 }
				check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_A = 4 }
				check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_A = 5 }
			}
		}

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 3 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 1.4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 4 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 1.4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 5 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 1.4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = {
			OR = {
				check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_A = 6 }
				check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_A = 7 }
			}
		}

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 6 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 2 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 7 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 2 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = { check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_A = 8 } }

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 8 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = { check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_A = 9 } }

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 9 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = {
			OR = {
				check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_A = 11 }
				check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_A = 12 }
				check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_A = 13 }
			}
		}

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 11 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 1.4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 12 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 1.4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 13 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 1.4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = {
			OR = {
				check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_A = 14 }
				check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_A = 15 }
			}
		}

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 14 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 2 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 15 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 2 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = { check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_A = 16 } }

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 16 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = { check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_A = 17 } }

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 17 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = { check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_A = 18 } }

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 18 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = { check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_A = 19 } }

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 19 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = { check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_A = 20 } }

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 20 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = { check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_A = 21 } }

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 21 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	ENG = {
		clr_country_flag = TNO_Britain_ElectionSeason_AICampaign_A_Active
		TNO_Britain_ElectionMap_Setup = yes
	}

	log = "[GetDateText]: [Root.GetName]: ElectionSeason_AICampaignInState_A; Completed execution."
}

		# CampainInState, AI B
ElectionSeason_AICampaignInState_B = {
	log = "[GetDateText]: [Root.GetName]: ElectionSeason_AICampaignInState_B; Executing"
	log = "[GetDateText]: [Root.GetName]: ElectionSeason_AICampaignInState_B; State: #[This.GetID], [This.GetName]"

	if = {
		limit = {
			check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_B = 2 }
		}
		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 2 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = {
			OR = {
				check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_B = 3 }
				check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_B = 4 }
				check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_B = 5 }
			}
		}

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 3 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 1.4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 4 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 1.4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 5 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 1.4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = {
			OR = {
				check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_B = 6 }
				check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_B = 7 }
			}
		}

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 6 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 2 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 7 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 2 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = { check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_B = 8 } }

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 8 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = { check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_B = 9 } }

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 9 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = {
			OR = {
				check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_B = 11 }
				check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_B = 12 }
				check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_B = 13 }
			}
		}

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 11 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 1.4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 12 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 1.4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 13 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 1.4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = {
			OR = {
				check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_B = 14 }
				check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_B = 15 }
			}
		}

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 14 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 2 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 15 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 2 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = { check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_B = 16 } }

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 16 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = { check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_B = 17 } }

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 17 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = { check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_B = 18 } }

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 18 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = { check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_B = 19 } }

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 19 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = { check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_B = 20 } }

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 20 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	else_if = {
		limit = { check_variable = { ENG.TNO_Britain_ElectionSeason_Competing_Party_B = 21 } }

		set_variable = { TNO_Britain_ElectionSeason_AP_pi = 21 }
		set_variable = { TNO_Britain_ElectionSeason_AP_v = 4 }
		TNO_Britain_ElectionSeason_AddPop_InState = yes
	}

	ENG = {
		clr_country_flag = TNO_Britain_ElectionSeason_AICampaign_B_Active
		TNO_Britain_ElectionMap_Setup = yes
	}

	log = "[GetDateText]: [Root.GetName]: ElectionSeason_AICampaignInState_B; Completed execution."
}

ElectionSeason_CampaignMission_Setup = {
	log = "[GetDateText]: [Root.GetName]: ElectionSeason_CampaignMission_Setup; Executing"

	save_global_event_target_as = TNO_Britain_ElectionSeason_CampaignState
	ENG = {
		set_country_flag = TNO_Britain_ElectionSeason_Campaign_Active
		activate_mission = ENG_ES_Campaigning
	}

	log = "[GetDateText]: [Root.GetName]: ElectionSeason_CampaignMission_Setup; Completed execution."
}

ElectionSeason_CampaignMissionAI_Setup = {
	log = "[GetDateText]: [Root.GetName]: ElectionSeason_CampaignMissionAI_Setup; Executing"

	hidden_effect = {
		if = {
			limit = { has_country_flag = TNO_Britain_ElectionSeason_Active }
			random_state = {
				limit = { ElectionSeason_England_IsActiveState = yes }
				save_global_event_target_as = TNO_Britain_ElectionSeason_CampaignState
			}
			set_country_flag = TNO_Britain_ElectionSeason_Campaign_Active
			activate_mission = ENG_ES_Campaigning
		}
	}

	log = "[GetDateText]: [Root.GetName]: ElectionSeason_CampaignMissionAI_Setup; Completed execution."
}

ElectionSeason_CampaignMissionAI_A_Setup = {
	log = "[GetDateText]: [Root.GetName]: ElectionSeason_CampaignMissionAI_A_Setup; Executing"

	hidden_effect = {
		if = {
			limit = { has_country_flag = TNO_Britain_ElectionSeason_Active }
			random_state = {
				limit = { ElectionSeason_England_IsActiveState = yes }
				save_global_event_target_as = TNO_Britain_ElectionSeason_AI_CampaignState_A
			}
			set_country_flag = TNO_Britain_ElectionSeason_AICampaign_A_Active
			activate_mission = ENG_ES_AI_Campaigning_A
		}
	}

	log = "[GetDateText]: [Root.GetName]: ElectionSeason_CampaignMissionAI_A_Setup; Completed execution."
}

ElectionSeason_CampaignMissionAI_B_Setup = {
	log = "[GetDateText]: [Root.GetName]: ElectionSeason_CampaignMissionAI_B_Setup; Executing"

	hidden_effect = {
		if = {
			limit = { has_country_flag = TNO_Britain_ElectionSeason_Active }
			random_state = {
				limit = { ElectionSeason_England_IsActiveState = yes }
				save_global_event_target_as = TNO_Britain_ElectionSeason_AI_CampaignState_B
			}
			set_country_flag = TNO_Britain_ElectionSeason_AICampaign_B_Active
			activate_mission = ENG_ES_AI_Campaigning_B
		}
	}

	log = "[GetDateText]: [Root.GetName]: ElectionSeason_CampaignMissionAI_B_Setup; Completed execution."
}
	### Interaction Code ###

	### Electoral Season ###
		# Here for the GUI
TNO_Britain_ElectionSeason_Build_ActiveArray = {
	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_Build_ActiveArray; Executing"

	every_state = {
		limit = { ElectionSeason_England_IsActiveState = yes }
		log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_Build_ActiveArray; [This.GetName]"
		PREV = { add_to_array = { ElectionSeason_ActiveStates = PREV } }
	}

	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_Build_ActiveArray; Completed execution."
}

TNO_Britain_ElectionSeason_Begin = {
	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_Begin; Executing"

	activate_mission = ENG_ES_ElectionTimer
	set_country_flag = TNO_Britain_ElectionSeason_Active
	set_temp_variable = { alert_id = token:Alert_ENG_Election }
	add_TNO_alert_unless_exists = yes

	clear_array = ElectionSeason_ActiveStates
	TNO_Britain_ElectionSeason_Build_ActiveArray = yes
	TNO_Britain_ElectionMap_Setup = yes
	TNO_Britain_ElectionCompetitors_Setup = yes
	TNO_Britain_ElectionSeason_Polling = yes

	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_Begin; Completed execution."
}

		# Sets up the competitor parties
TNO_Britain_ElectionCompetitors_Setup = {
	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionCompetitors_Setup; Executing"

			# UE
	if = {
		limit = {
			OR = {
				check_variable = { TNO_Britain_ElectionSeason_Running_Party = 6 }
				check_variable = { TNO_Britain_ElectionSeason_Running_Party = 7 }
			}
		}
		set_variable = { TNO_Britain_ElectionSeason_Competing_Party_A = 8 } # RP
		set_variable = { TNO_Britain_ElectionSeason_Competing_Party_B = 9 } # NF
	}

			# RP (post-ECW)
	else_if = {
		limit = { check_variable = { TNO_Britain_ElectionSeason_Running_Party = 8 } }
		set_variable = { TNO_Britain_ElectionSeason_Competing_Party_A = 6 } # UE
		set_variable = { TNO_Britain_ElectionSeason_Competing_Party_B = 9 } # NF
	}

			# NF
	else_if = {
		limit = { check_variable = { TNO_Britain_ElectionSeason_Running_Party = 9 } }
		set_variable = { TNO_Britain_ElectionSeason_Competing_Party_A = 6 } # UE
		set_variable = { TNO_Britain_ElectionSeason_Competing_Party_B = 8 } # RP
	}

			# NDL
	else_if = {
		limit = {
			OR = {
				check_variable = { TNO_Britain_ElectionSeason_Running_Party = 11 }
				check_variable = { TNO_Britain_ElectionSeason_Running_Party = 12 }
				check_variable = { TNO_Britain_ElectionSeason_Running_Party = 13 }
			}
		}
		set_variable = { TNO_Britain_ElectionSeason_Competing_Party_A = 14 } # SLP
		set_variable = { TNO_Britain_ElectionSeason_Competing_Party_B = 16 } # MSA
	}

			# SLP
	else_if = {
		limit = {
			OR = {
				check_variable = { TNO_Britain_ElectionSeason_Running_Party = 14 }
				check_variable = { TNO_Britain_ElectionSeason_Running_Party = 15 }
			}
		}
		set_variable = { TNO_Britain_ElectionSeason_Competing_Party_A = 12 } # NDL
		set_variable = { TNO_Britain_ElectionSeason_Competing_Party_B = 16 } # MSA
	}

			# MSA
	else_if = {
		limit = { check_variable = { TNO_Britain_ElectionSeason_Running_Party = 16 } }
		set_variable = { TNO_Britain_ElectionSeason_Competing_Party_A = 12 } # NDL
		set_variable = { TNO_Britain_ElectionSeason_Competing_Party_B = 14 } # SLP
	}

			# ILP
	else_if = {
		limit = { check_variable = { TNO_Britain_ElectionSeason_Running_Party = 17 } }
		set_variable = { TNO_Britain_ElectionSeason_Competing_Party_A = 18 } # SNP
		set_variable = { TNO_Britain_ElectionSeason_Competing_Party_B = 19 } # UP
	}

			# SNP
	else_if = {
		limit = { check_variable = { TNO_Britain_ElectionSeason_Running_Party = 18 } }
		set_variable = { TNO_Britain_ElectionSeason_Competing_Party_A = 17 } # ILP
		set_variable = { TNO_Britain_ElectionSeason_Competing_Party_B = 19 } # UP
	}

			# UP
	else_if = {
		limit = { check_variable = { TNO_Britain_ElectionSeason_Running_Party = 19 } }
		set_variable = { TNO_Britain_ElectionSeason_Competing_Party_A = 17 } # ILP
		set_variable = { TNO_Britain_ElectionSeason_Competing_Party_B = 18 } # SNP
	}

			# Plaid
	else_if = {
		limit = { check_variable = { TNO_Britain_ElectionSeason_Running_Party = 20 } }
		set_variable = { TNO_Britain_ElectionSeason_Competing_Party_A = 21 } # Cymru
		set_variable = { TNO_Britain_ElectionSeason_Competing_Party_B = 0 } # N/A
	}

			# Cymru
	else_if = {
		limit = { check_variable = { TNO_Britain_ElectionSeason_Running_Party = 21 } }
		set_variable = { TNO_Britain_ElectionSeason_Competing_Party_A = 20 } # Plaid
		set_variable = { TNO_Britain_ElectionSeason_Competing_Party_B = 0 } # N/A
	}

	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionCompetitors_Setup; Running Party ID: ([?TNO_Britain_ElectionSeason_Running_Party])"
	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionCompetitors_Setup; Competing Party A ID: ([?TNO_Britain_ElectionSeason_Competing_Party_A])"
	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionCompetitors_Setup; Competing Party B ID: ([?TNO_Britain_ElectionSeason_Competing_Party_B])"

	if = {
		limit = { is_ai = yes }
		ElectionSeason_CampaignMissionAI_Setup = yes
	}
	ElectionSeason_CampaignMissionAI_A_Setup = yes
	if = {
		limit = { check_variable = { TNO_Britain_ElectionSeason_Competing_Party_B > 0 } }
		ElectionSeason_CampaignMissionAI_B_Setup = yes
	}

	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionCompetitors_Setup; Completed execution."
}

		# Returns TNO_Britain_ElectionSeason_Victor_Party
TNO_Britain_ElectionSeason_FindVictor = {
	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_FindVictor; Executing"

			## Party Groups
			# As we're going along these find a prelim value for Victor_Party, Victor_Party will work with raw indexes for now and be incremented later I don't give a shit at this point

			# RP
	set_variable = { TNO_Britain_ElectionSeason_Victor_Party = 2 }

	set_variable = { TNO_Britain_ElectionSeason_FV_RP_SeatNum = ParliamentMechanic_Party_SeatNum^2 }
	add_to_variable = { TNO_Britain_ElectionSeason_FV_RP_SeatNum = ParliamentMechanic_Party_SeatNum^3 }
	add_to_variable = { TNO_Britain_ElectionSeason_FV_RP_SeatNum = ParliamentMechanic_Party_SeatNum^4 }

	if = {
		limit = { check_variable = { ParliamentMechanic_Party_SeatNum^TNO_Britain_ElectionSeason_Victor_Party < ParliamentMechanic_Party_SeatNum^3 } }
		set_variable = { TNO_Britain_ElectionSeason_Victor_Party = 3 }
	}
	else_if = {
		limit = { check_variable = { ParliamentMechanic_Party_SeatNum^TNO_Britain_ElectionSeason_Victor_Party < ParliamentMechanic_Party_SeatNum^4 } }
		set_variable = { TNO_Britain_ElectionSeason_Victor_Party = 4 }
	}

			# UE
	set_variable = { TNO_Britain_ElectionSeason_FV_UE_SeatNum = ParliamentMechanic_Party_SeatNum^5 }
	add_to_variable = { TNO_Britain_ElectionSeason_FV_UE_SeatNum = ParliamentMechanic_Party_SeatNum^6 }

	if = {
		limit = {
			check_variable = { TNO_Britain_ElectionSeason_FV_RP_SeatNum < TNO_Britain_ElectionSeason_FV_UE_SeatNum }
		}

		set_variable = { TNO_Britain_ElectionSeason_Victor_Party = 5 }
		if = {
			limit = { check_variable = { ParliamentMechanic_Party_SeatNum^TNO_Britain_ElectionSeason_Victor_Party < ParliamentMechanic_Party_SeatNum^6 } }
			set_variable = { TNO_Britain_ElectionSeason_Victor_Party = 6 }
		}
	}

			# NF
	set_variable = { TNO_Britain_ElectionSeason_FV_NF_SeatNum = ParliamentMechanic_Party_SeatNum^8 }

	if = {
		limit = {
			check_variable = { TNO_Britain_ElectionSeason_FV_RP_SeatNum < TNO_Britain_ElectionSeason_FV_NF_SeatNum }
			check_variable = { TNO_Britain_ElectionSeason_FV_UE_SeatNum < TNO_Britain_ElectionSeason_FV_NF_SeatNum }
		}

		set_variable = { TNO_Britain_ElectionSeason_Victor_Party = 8 }
	}

			# NDL
	set_variable = { TNO_Britain_ElectionSeason_FV_NDL_SeatNum = ParliamentMechanic_Party_SeatNum^10 }
	add_to_variable = { TNO_Britain_ElectionSeason_FV_NDL_SeatNum = ParliamentMechanic_Party_SeatNum^11 }
	add_to_variable = { TNO_Britain_ElectionSeason_FV_NDL_SeatNum = ParliamentMechanic_Party_SeatNum^12 }

	if = {
		limit = {
			check_variable = { TNO_Britain_ElectionSeason_FV_RP_SeatNum < TNO_Britain_ElectionSeason_FV_NDL_SeatNum }
			check_variable = { TNO_Britain_ElectionSeason_FV_UE_SeatNum < TNO_Britain_ElectionSeason_FV_NDL_SeatNum }
			check_variable = { TNO_Britain_ElectionSeason_FV_NF_SeatNum < TNO_Britain_ElectionSeason_FV_NDL_SeatNum }
		}

		set_variable = { TNO_Britain_ElectionSeason_Victor_Party = 10 }
		if = {
			limit = { check_variable = { ParliamentMechanic_Party_SeatNum^TNO_Britain_ElectionSeason_Victor_Party < ParliamentMechanic_Party_SeatNum^11 } }
			set_variable = { TNO_Britain_ElectionSeason_Victor_Party = 11 }
		}
		else_if = {
			limit = { check_variable = { ParliamentMechanic_Party_SeatNum^TNO_Britain_ElectionSeason_Victor_Party < ParliamentMechanic_Party_SeatNum^12 } }
			set_variable = { TNO_Britain_ElectionSeason_Victor_Party = 12 }
		}
	}

			# SLP
	set_variable = { TNO_Britain_ElectionSeason_FV_SLP_SeatNum = ParliamentMechanic_Party_SeatNum^13 }
	add_to_variable = { TNO_Britain_ElectionSeason_FV_SLP_SeatNum = ParliamentMechanic_Party_SeatNum^14 }

	if = {
		limit = {
			check_variable = { TNO_Britain_ElectionSeason_FV_RP_SeatNum < TNO_Britain_ElectionSeason_FV_SLP_SeatNum }
			check_variable = { TNO_Britain_ElectionSeason_FV_UE_SeatNum < TNO_Britain_ElectionSeason_FV_SLP_SeatNum }
			check_variable = { TNO_Britain_ElectionSeason_FV_NF_SeatNum < TNO_Britain_ElectionSeason_FV_SLP_SeatNum }
			check_variable = { TNO_Britain_ElectionSeason_FV_NDL_SeatNum < TNO_Britain_ElectionSeason_FV_SLP_SeatNum }
		}

		set_variable = { TNO_Britain_ElectionSeason_Victor_Party = 13 }
		if = {
			limit = { check_variable = { ParliamentMechanic_Party_SeatNum^TNO_Britain_ElectionSeason_Victor_Party < ParliamentMechanic_Party_SeatNum^14 } }
			set_variable = { TNO_Britain_ElectionSeason_Victor_Party = 14 }
		}
	}

			# MSA
	set_variable = { TNO_Britain_ElectionSeason_FV_MSA_SeatNum = ParliamentMechanic_Party_SeatNum^15 }

	if = {
		limit = {
			check_variable = { TNO_Britain_ElectionSeason_FV_RP_SeatNum < TNO_Britain_ElectionSeason_FV_MSA_SeatNum }
			check_variable = { TNO_Britain_ElectionSeason_FV_UE_SeatNum < TNO_Britain_ElectionSeason_FV_MSA_SeatNum }
			check_variable = { TNO_Britain_ElectionSeason_FV_NF_SeatNum < TNO_Britain_ElectionSeason_FV_MSA_SeatNum }
			check_variable = { TNO_Britain_ElectionSeason_FV_NDL_SeatNum < TNO_Britain_ElectionSeason_FV_MSA_SeatNum }
			check_variable = { TNO_Britain_ElectionSeason_FV_SLP_SeatNum < TNO_Britain_ElectionSeason_FV_MSA_SeatNum }
		}

		set_variable = { TNO_Britain_ElectionSeason_Victor_Party = 15 }
	}

			# Ensure no smaller parties are larger somehow
			# FUNNY CODE IM LAUGHING HAHHA
	for_each_loop = {
		array = ParliamentMechanic_Party_Identity
		value = val
		index = i

				# if val's not in any party groups 
		if = {
			limit = {
				NOT = {
							# RP
					check_variable = { val = 3 }
					check_variable = { val = 4 }
					check_variable = { val = 5 }

							# UE
					check_variable = { val = 6 }
					check_variable = { val = 7 }

							# NF
					check_variable = { val = 9 }

							# NDL
					check_variable = { val = 11 }
					check_variable = { val = 12 }
					check_variable = { val = 13 }

							# SLP
					check_variable = { val = 14 }
					check_variable = { val = 15 }

							# MSA
					check_variable = { val = 16 }
				}
			}

			if = {
				limit = {
							# Greater than VictorParty's SeatNum
					check_variable = { ParliamentMechanic_Party_SeatNum^TNO_Britain_ElectionSeason_Victor_Party < ParliamentMechanic_Party_SeatNum^i }
							# And VictorParty's Group's SeatNum
					OR = {
								# RP
						AND = {
							OR = {
								check_variable = { TNO_Britain_ElectionSeason_Victor_Party = 2 }
								check_variable = { TNO_Britain_ElectionSeason_Victor_Party = 3 }
								check_variable = { TNO_Britain_ElectionSeason_Victor_Party = 4 }
							}
							check_variable = { TNO_Britain_ElectionSeason_FV_RP_SeatNum < ParliamentMechanic_Party_SeatNum^i }
						}

								# UE
						AND = {
							OR = {
								check_variable = { TNO_Britain_ElectionSeason_Victor_Party = 5 }
								check_variable = { TNO_Britain_ElectionSeason_Victor_Party = 6 }
							}
							check_variable = { TNO_Britain_ElectionSeason_FV_UE_SeatNum < ParliamentMechanic_Party_SeatNum^i }
						}
								# NF
						AND = {
							check_variable = { TNO_Britain_ElectionSeason_Victor_Party = 8 }
							check_variable = { TNO_Britain_ElectionSeason_FV_NF_SeatNum < ParliamentMechanic_Party_SeatNum^i }
						}

								# NDL
						AND = {
							OR = {
								check_variable = { TNO_Britain_ElectionSeason_Victor_Party = 10 }
								check_variable = { TNO_Britain_ElectionSeason_Victor_Party = 11 }
								check_variable = { TNO_Britain_ElectionSeason_Victor_Party = 12 }
							}
							check_variable = { TNO_Britain_ElectionSeason_FV_NDL_SeatNum < ParliamentMechanic_Party_SeatNum^i }
						}

								# SLP
						AND = {
							OR = {
								check_variable = { TNO_Britain_ElectionSeason_Victor_Party = 13 }
								check_variable = { TNO_Britain_ElectionSeason_Victor_Party = 14 }
							}
							check_variable = { TNO_Britain_ElectionSeason_FV_SLP_SeatNum < ParliamentMechanic_Party_SeatNum^i }
						}

								# MSA
						AND = {
							check_variable = { TNO_Britain_ElectionSeason_Victor_Party = 15 }
							check_variable = { TNO_Britain_ElectionSeason_FV_MSA_SeatNum < ParliamentMechanic_Party_SeatNum^i }
						}
					}
				}
				set_variable = { TNO_Britain_ElectionSeason_Victor_Party = i }
			}
		}
	}

			# Correct Index
	add_to_variable = { TNO_Britain_ElectionSeason_Victor_Party = 1 }

	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_FindVictor; Completed execution"
}

TNO_Britain_ElectionSeason_End = {
	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_End; Executing"

			## Counts how many elections have happened
			# 1 = first election
			# 2 = second election
			# And so forth
	add_to_variable = { TNO_Britain_ElectionSeason_ElectionCounter = 1 }

	hidden_effect = {
		TNO_Britain_ElectionSeason_Election = yes
		TNO_Britain_ElectionSeason_FindVictor = yes
	}

			# Collab
	if = {
		limit = {
			OR = {
				check_variable = { TNO_Britain_ElectionSeason_Running_Party = 6 }
				check_variable = { TNO_Britain_ElectionSeason_Running_Party = 7 }
				check_variable = { TNO_Britain_ElectionSeason_Running_Party = 8 }
				check_variable = { TNO_Britain_ElectionSeason_Running_Party = 9 }
			}
		}
		country_event = { id = ENG_ElectionSeason.7 }
	}

			# HMMLR
	else_if = {
		limit = {
			OR = {
				check_variable = { TNO_Britain_ElectionSeason_Running_Party = 11 }
				check_variable = { TNO_Britain_ElectionSeason_Running_Party = 12 }
				check_variable = { TNO_Britain_ElectionSeason_Running_Party = 13 }
				check_variable = { TNO_Britain_ElectionSeason_Running_Party = 14 }
				check_variable = { TNO_Britain_ElectionSeason_Running_Party = 15 }
				check_variable = { TNO_Britain_ElectionSeason_Running_Party = 16 }
			}
		}
		country_event = { id = ENG_ElectionSeason.4 }
	}

			# Uh..
	else = {
		country_event = { id = ENG_ElectionSeason.0 }
	}

			# clear_array = ElectionSeason_ActiveStates
	clear_variable = TNO_Britain_ElectionSeason_Running_Party
	clear_variable = TNO_Britain_ElectionSeason_Competing_Party_A
	clear_variable = TNO_Britain_ElectionSeason_Competing_Party_B
	clear_variable = TNO_Britain_ElectionSeason_Victor_Party
	clr_country_flag = TNO_Britain_ElectionSeason_Active
	clr_country_flag = TNO_Britain_ElectionSeason_Campaign_Active
	clr_country_flag = TNO_Britain_ElectionSeason_AICampaign_A_Active
	clr_country_flag = TNO_Britain_ElectionSeason_AICampaign_B_Active
	clr_country_flag = TNO_ParliamentMechanic_Disabled
	hidden_effect = {
		remove_mission = ENG_ES_Campaigning
		remove_mission = ENG_ES_AI_Campaigning_A
		remove_mission = ENG_ES_AI_Campaigning_B
	}

	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_End; Completed execution."
}

TNO_Britain_ElectionSeason_Polling = {
	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_Polling; Executing"

	hidden_effect = {
		ZZZ = {
			clear_array = ZZZ.ParliamentMechanic_Party_SeatNum
			for_each_loop = {
				array = ENG.ParliamentMechanic_Party_SeatNum
				add_to_array = { ParliamentMechanic_Party_SeatNum = 0 }
			}

			every_state = {
				limit = { ElectionSeason_England_IsActiveState = yes }
				TNO_Britain_ElectionSeason_Election_State = yes
			}

			TNO_Britain_ElectionSeason_FindVictor = yes
		}
	}

	log = "[GetDateText]: [Root.GetName]: TNO_Britain_ElectionSeason_Polling; Completed execution."
}
	### Electoral Season ###
#### CODE PURPOSES ####