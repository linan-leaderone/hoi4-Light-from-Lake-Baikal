### TNO Laws
### Social Laws
### ALL LAW EFFECTS MOVED TO DYNAMIC MODIFIERS
ideas = {
	tno_health_care = {
		law = yes
		tno_health_care_not_applicable = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_health_care_not_applicable"
				tno_health_care_not_applicable_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_health_care_no_government_support = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_health_care_no_government_support"
				tno_health_care_no_government_support_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_health_care_service_for_care = { 
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_health_care_service_for_care"
				tno_health_care_service_for_care_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_health_care_negotiated_coverage = { 
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_health_care_negotiated_coverage"
				tno_health_care_negotiated_coverage_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_health_care_support_for_emergencies = { #rename to support for emergencies
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_health_care_support_for_emergencies"
				tno_health_care_support_for_emergencies_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			default = yes
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_health_care_low_income_protections = { #rename to low income protections
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_health_care_low_income_protections"
				tno_health_care_low_income_protections_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_health_care_universal_health_care = { #universal coverage
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_health_care_universal_health_care"
				tno_health_care_universal_health_care_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_health_care_free_universal_care = { #comprehensive universal coverages
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_health_care_free_universal_care"
				tno_health_care_free_universal_care_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
	}
	tno_education = {
		law = yes
		tno_education_not_applicable = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_education_not_applicable"
				tno_education_not_applicable_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_education_restricted_education = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_education_restricted_education"
				tno_education_restricted_education_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_education_stratified_education = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_education_stratified_education"
				tno_education_stratified_education_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			default = yes
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_education_public_education = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_education_public_education"
				tno_education_public_education_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_education_subsidised_higher_education = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_education_subsidised_higher_education"
				tno_education_subsidised_higher_education_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_education_public_higher_education = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_education_public_higher_education"
				tno_education_public_higher_education_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_education_free_education = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_education_free_education"
				tno_education_free_education_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
	}
	tno_penal_system = {
		law = yes
		tno_penal_system_not_applicable = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_penal_system_not_applicable"
				tno_penal_system_not_applicable_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_penal_system_draconian_brutality = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_penal_system_draconian_brutality"
				tno_penal_system_draconian_brutality_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_penal_system_overt_oppression = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_penal_system_overt_oppression"
				tno_penal_system_overt_oppression_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_penal_system_politicized_penal_system = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_penal_system_politicized_penal_system"
				tno_penal_system_politicized_penal_system_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_penal_system_harsh_penal_code = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_penal_system_harsh_penal_code"
				tno_penal_system_harsh_penal_code_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_penal_system_incarceration = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_penal_system_incarceration"
				tno_penal_system_incarceration_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			default = yes
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_penal_system_rehabilitation = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_penal_system_rehabilitation"
				tno_penal_system_rehabilitation_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_penal_system_military_justice = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_penal_system_military_justice"
				tno_penal_system_military_justice_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_penal_system_frontier_justice = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_penal_system_frontier_justice"
				tno_penal_system_frontier_justice_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
	}
	tno_gender_rights = {
		law = yes
		tno_gender_rights_not_applicable = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_gender_rights_not_applicable"
				tno_gender_rights_not_applicable_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_gender_rights_heavily_restricted = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_gender_rights_heavily_restricted"
				tno_gender_rights_heavily_restricted_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_gender_rights_traditional_roles = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_gender_rights_traditional_roles"
				tno_gender_rights_traditional_roles_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			default = yes
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_gender_rights_women_in_the_workplace = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_gender_rights_women_in_the_workplace"
				tno_gender_rights_women_in_the_workplace_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_gender_rights_gender_equality = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_gender_rights_gender_equality"
				tno_gender_rights_gender_equality_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_gender_rights_promoted_equality = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_gender_rights_promoted_equality"
				tno_gender_rights_promoted_equality_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_gender_rights_enforced_equality = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_gender_rights_enforced_equality"
				tno_gender_rights_enforced_equality_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
	}
	tno_security = {
		law = yes
		tno_security_not_applicable = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_security_not_applicable"
				tno_security_not_applicable_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_security_anarchic = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_security_anarchic"
				tno_security_anarchic_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
			ai_will_do = {
				factor = 0
			}
		}
		tno_security_community_police = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_security_community_police"
				tno_security_community_police_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_security_regulated_police = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_security_regulated_police"
				tno_security_regulated_police_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			default = yes
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_security_oppressive_police = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_security_oppressive_police"
				tno_security_oppressive_police_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_security_totalitarian_police = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_security_totalitarian_police"
				tno_security_totalitarian_police_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_security_death_squads = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_security_death_squads"
				tno_security_death_squads_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
	}
	tno_regulations = {
		law = yes
		tno_regulations_not_applicable = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_regulations_not_applicable"
				tno_regulations_not_applicable_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_regulations_utterly_unregulated = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_regulations_utterly_unregulated"
				tno_regulations_utterly_unregulated_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_regulations_token_regulations = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_regulations_token_regulations"
				tno_regulations_token_regulations_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			default = yes
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_regulations_moderate_regulations = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_regulations_moderate_regulations"
				tno_regulations_moderate_regulations_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_regulations_strict_regulations = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_regulations_strict_regulations"
				tno_regulations_strict_regulations_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
		tno_regulations_harsh_regulations = {
			on_add = {
				log = "[GetDateText]: [Root.GetName]: add idea tno_regulations_harsh_regulations"
				tno_regulations_harsh_regulations_effect = yes
				TNO_update_policy_effectiveness = yes
			}
			available = { always = no }

			removal_cost = -1
			ledger = civilian
			modifier = {  }
			cancel_if_invalid = no
		}
	}
}
